act_comm.c:83:   if( IS_SET( room->room_flags, ROOM_SILENCE ) )
act_comm.c:419:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
act_comm.c:427:   if( ch->in_room && IS_SET( ch->in_room->room_flags, ROOM_AMPLIFY ) )
act_comm.c:436:      for( pexit = was_in_room->first_exit; pexit; pexit = pexit->next )
act_comm.c:557:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
act_comm.c:609:      ch_printf( victim, "&W^z%s beeps you from '%s'^x&w\a\n\r", ch->name, ch->in_room->name );
act_comm.c:658:   if( ( !IS_AWAKE( victim ) ) || ( !IS_NPC( victim ) && IS_SET( victim->in_room->room_flags, ROOM_SILENCE ) ) )
act_comm.c:681:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
act_comm.c:781:   for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
act_comm.c:789:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
act_comm.c:941:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_QUIT ) && IS_SET( ch->pcdata->permissions, PERMIT_BUILD ) )
act_comm.c:962:   if( IS_SET( ch->in_room->area->flags, AFLAG_NOQUIT ) && !ch->pcdata->permissions )
act_comm.c:995:   sprintf( log_buf, "%s has quit in %s (%d).", ch->name, ch->in_room->name, ch->in_room->vnum );
act_comm.c:1482:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
act_comm.c:1589:   for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
act_comm.c:1622:   for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
act_comm.c:1687:   for( trail = ch->in_room->first_trail; trail; trail = trail->next )
act_info.c:675:         else if( ( victim->in_room->sector_type == SECT_UNDERWATER )
act_info.c:680:         else if( ( victim->in_room->sector_type == SECT_OCEANFLOOR )
act_info.c:942:      show_char_to_char( ch->in_room->first_person, ch );
act_info.c:961:         ch_printf( ch, "[%d] ", ch->in_room->vnum );
act_info.c:977:      else if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
act_info.c:1011:         send_to_char( ch->in_room->name, ch );
act_info.c:1021:         if( ch->in_room->sector_type == SECT_LAVA )
act_info.c:1023:         else if( ch->in_room->sector_type == SECT_DUNNO )
act_info.c:1035:         switch ( ch->in_room->sector_type )
act_info.c:1065:         switch ( ch->in_room->sector_type )
act_info.c:1104:      if( !ch->in_room->pShop )
act_info.c:1105:         show_list_to_char( ch->in_room->first_content, ch, FALSE, FALSE );
act_info.c:1108:      show_char_to_char( ch->in_room->first_person, ch );
act_info.c:1193:            for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_info.c:1243:   if( ( pdesc = get_extra_descr( arg1, ch->in_room->first_extradesc ) ) != NULL )
act_info.c:1386:   for( obj = ch->in_room->last_content; obj; obj = obj->prev_content )
act_info.c:1767:   for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_info.c:1777:               sprintf( buf + strlen( buf ), "[%d]-", pexit->to_room->vnum );
act_info.c:1789:                        pexit->to_room->vnum,
act_info.c:1791:                        ? "&O#&w" : "&w", capitalize( dir_name[pexit->vdir] ), pexit->to_room->name );
act_info.c:1795:                        ? "&O#&w" : "&w", capitalize( dir_name[pexit->vdir] ), pexit->to_room->name );
act_info.c:1884:   AREA_DATA *tarea = ch->in_room->area;
act_info.c:1893:      temp = ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:1894:      precip = ( ch->in_room->area->weather->precip + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:1895:      wind = ( ch->in_room->area->weather->wind + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:1896:      mana = ( ch->in_room->area->weather->mana + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:1934:            if( ( moon->up ) && ( !str_cmp( moon->world, ch->in_room->area->resetmsg ) ) )
act_info.c:2065:   temp = ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:2066:   precip = ( ch->in_room->area->weather->precip + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:2067:   wind = ( ch->in_room->area->weather->wind + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:2068:   mana = ( ch->in_room->area->weather->mana + 3 * weath_unit - 1 ) / weath_unit;
act_info.c:2102:         if( ( moon->up ) && ( !str_cmp( moon->world, ch->in_room->area->resetmsg ) ) )
act_info.c:2383:      ch_printf( ch, "You are in %s.", ch->in_room->name );
act_info.c:2395:          && ( victim->in_room->area == ch->in_room->area
act_info.c:2397:          && ( !str_cmp( victim->in_room->area->resetmsg,
act_info.c:2398:                         ch->in_room->area->resetmsg )
act_info.c:2400:          && ( !IS_SET( victim->in_room->room_flags, ROOM_NO_ASTRAL )
act_info.c:2405:         pager_printf_color( ch, "%-20s  ", victim->in_room->name );
act_info.c:2406:         pager_printf_color( ch, "%-15s  ", victim->in_room->area->name );
act_info.c:2407:         pager_printf_color( ch, "%-10s\n\r", victim->in_room->area->resetmsg );
act_info.c:2555:      for( mob = ch->in_room->first_person; mob; mob = mob->next_in_room )
act_move.c:239:   int sector = room->sector_type;
act_move.c:242:   if( room->name )
act_move.c:243:      STRFREE( room->name );
act_move.c:244:   if( room->description )
act_move.c:245:      STRFREE( room->description );
act_move.c:247:   room->name = STRALLOC( "In a virtual room" );
act_move.c:248:   room->description = STRALLOC( "You're on a pathway.\n\r" );
act_move.c:253:   room->name = STRALLOC( sect_names[sector][0] );
act_move.c:361:   room->description = STRALLOC( buf2 );
act_move.c:377:         vroom_hash[hash] = room->next;
act_move.c:385:         room_next = room->next;
act_move.c:386:         if( !room->first_person && !room->first_content )
act_move.c:445:   for( xit = room->first_exit; xit; xit = xit->next )
act_move.c:464:   for( xit = room->first_exit; xit; xit = xit->next )
act_move.c:484:   for( cnt = 0, xit = room->first_exit; xit; xit = xit->next )
act_move.c:497:   if( ch->in_room->vnum - ch->in_room->area->low_r_vnum > 125 )
act_move.c:503:      if( xarea->index == ch->in_room->area->low_soft_range )
act_move.c:505:         if( xIS_SET( xarea->rooms, ch->in_room->vnum - ch->in_room->area->low_r_vnum ) )
act_move.c:507:         xSET_BIT( xarea->rooms, ch->in_room->vnum - ch->in_room->area->low_r_vnum );
act_move.c:515:   xarea->index = ch->in_room->area->low_soft_range;
act_move.c:519:   xSET_BIT( xarea->rooms, ch->in_room->vnum - ch->in_room->area->low_r_vnum );
act_move.c:576:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) && CAN_GO( ch, DIR_DOWN ) )
act_move.c:616:               bug( "Falling (in a loop?) more than 80 rooms: vnum %d", ch->in_room->vnum );
act_move.c:655:   int virtual = in_room->virtual;
act_move.c:664:      serial = in_room->vnum;
act_move.c:665:      roomnum = in_room->tele_vnum;
act_move.c:682:      int r1 = in_room->vnum;
act_move.c:698:   for( room = vroom_hash[hash]; room; room = room->next )
act_move.c:699:      if( room->vnum == serial && room->tele_vnum == roomnum )
act_move.c:707:      room->area = in_room->area;
act_move.c:708:      room->vnum = serial;
act_move.c:709:      room->virtual = virtual;
act_move.c:710:      room->tele_vnum = roomnum;
act_move.c:711:      room->sector_type = in_room->sector_type;
act_move.c:712:      room->room_flags = in_room->room_flags;
act_move.c:714:      room->next = vroom_hash[hash];
act_move.c:804:          && ch->in_room->sector_type != SECT_WATER_SWIM
act_move.c:805:          && ch->in_room->sector_type != SECT_WATER_NOSWIM
act_move.c:806:          && ch->in_room->sector_type != SECT_UNDERWATER && ch->in_room->sector_type != SECT_OCEANFLOOR )
act_move.c:867:       && ( IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) || IS_SET( pexit->to_room->runes, RUNE_DISTRACT ) ) )
act_move.c:873:   if( IS_SET( pexit->to_room->room_flags, ROOM_NO_DREAM )
act_move.c:922:         if( to_room->sector_type == SECT_INSIDE )
act_move.c:927:         if( !IS_SET( ch->in_obj->value[2], VEHICLE_SPACE ) && to_room->sector_type == SECT_DUNNO )
act_move.c:932:         if( ( to_room->sector_type == SECT_UNDERWATER
act_move.c:933:               || to_room->sector_type == SECT_OCEANFLOOR ) && !IS_SET( ch->in_obj->value[2], VEHICLE_UNDERWATER ) )
act_move.c:940:            if( to_room->sector_type == SECT_SWAMP )
act_move.c:945:            if( ( to_room->sector_type == SECT_MOUNTAIN
act_move.c:946:                  || to_room->sector_type == SECT_HILLS
act_move.c:947:                  || to_room->sector_type == SECT_FOREST ) && !IS_SET( ch->in_obj->value[2], VEHICLE_CLIMB ) )
act_move.c:952:            else if( ( to_room->sector_type == SECT_DESERT
act_move.c:953:                       || to_room->sector_type == SECT_BEACH ) && !IS_SET( ch->in_obj->value[2], VEHICLE_SAND ) )
act_move.c:958:            else if( ( to_room->sector_type == SECT_WATER_SWIM
act_move.c:959:                       || to_room->sector_type == SECT_WATER_NOSWIM ) && !IS_SET( ch->in_obj->value[2], VEHICLE_SURFACE ) )
act_move.c:964:            else if( ( to_room->sector_type == SECT_ICE
act_move.c:965:                       || IS_SET( to_room->room_flags, ROOM_SLIPPERY ) ) && !IS_SET( ch->in_obj->value[2], VEHICLE_ICE ) )
act_move.c:970:            else if( ( to_room->sector_type == SECT_CITY
act_move.c:971:                       || to_room->sector_type == SECT_FIELD ) && !IS_SET( ch->in_obj->value[2], VEHICLE_LAND ) )
act_move.c:977:         if( to_room->sector_type == SECT_UNDERGROUND && !IS_SET( ch->in_obj->value[2], VEHICLE_UNDERGROUND ) )
act_move.c:984:      if( ( in_room->sector_type == SECT_AIR
act_move.c:985:            || to_room->sector_type == SECT_AIR || IS_SET( pexit->exit_info, EX_FLY ) ) && pexit->vdir == 4 )
act_move.c:1112:            move = movement_loss[UMIN( SECT_MAX - 1, in_room->sector_type )];
act_move.c:1125:            move = encumbrance( ch, movement_loss[UMIN( SECT_MAX - 1, in_room->sector_type )] );
act_move.c:1164:   if( !ch->in_obj && ( ch->in_room->sector_type == SECT_UNDERWATER || ch->in_room->sector_type == SECT_OCEANFLOOR ) )
act_move.c:1227:   if( IS_SET( ch->in_room->room_flags, ROOM_SLIPPERY ) && !IS_AFFECTED( ch, AFF_FLYING ) && !fall && !ch->in_obj )
act_move.c:1254:   if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) && !IS_AFFECTED( ch, AFF_FLYING ) && !fall )
act_move.c:1267:   for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
act_move.c:1377:   trail = ch->in_room->first_trail;
act_move.c:1388:         UNLINK( trail, ch->in_room->first_trail, ch->in_room->last_trail, next, prev );
act_move.c:1441:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
act_move.c:1461:      for( rch = ch->in_room->first_person; rch; rch = rch->next )
act_move.c:1539:   trail = ch->in_room->first_trail;
act_move.c:1554:      LINK( new_trail, ch->in_room->first_trail, ch->in_room->last_trail, next, prev );
act_move.c:1592:      for( fch = from_room->first_person; fch; fch = fch->next_in_room )
act_move.c:1595:      for( fch = from_room->first_person; fch && ( count < chars ); fch = nextinroom )
act_move.c:1612:   if( ch->in_room->first_content )
act_move.c:1777:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_move.c:1897:            for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
act_move.c:1990:         for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
act_move.c:2341:            fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
act_move.c:2376:            for( rch = to_room->first_person; rch; rch = rch->next_in_room )
act_move.c:2415:            for( rch = to_room->first_person; rch; rch = rch->next_in_room )
act_move.c:2442:         for( rch = to_room->first_person; rch; rch = rch->next_in_room )
act_move.c:2449:      for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
act_move.c:2522:      obj = get_obj_list( ch, arg, ch->in_room->first_content );
act_move.c:2567:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
act_move.c:2588:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
act_move.c:2608:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
act_move.c:2628:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
act_move.c:2745:            obj = get_obj_list( ch, arg, ch->in_room->first_content );
act_move.c:2958:            obj = get_obj_list( ch, arg, ch->in_room->first_content );
act_move.c:3129:            obj = get_obj_list( ch, arg, ch->in_room->first_content );
act_move.c:3262:   if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
act_move.c:3287:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_move.c:3318:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_move.c:3324:      if( ch->in_room->sector_type != SECT_INSIDE && IS_OUTSIDE( ch ) )
act_move.c:3325:         for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_move.c:3326:            if( pexit->to_room && ( pexit->to_room->sector_type == SECT_INSIDE
act_move.c:3327:                                    || IS_SET( pexit->to_room->room_flags, ROOM_INDOORS ) ) )
act_move.c:3339:   obj = get_obj_list( ch, argument, ch->in_room->first_content );
act_move.c:3395:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_move.c:3401:      if( ch->in_room->sector_type == SECT_INSIDE || !IS_OUTSIDE( ch ) )
act_move.c:3402:         for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
act_move.c:3403:            if( pexit->to_room && pexit->to_room->sector_type != SECT_INSIDE
act_move.c:3404:                && !IS_SET( pexit->to_room->room_flags, ROOM_INDOORS ) )
act_move.c:3465:   for( xtmp = room->first_exit; xtmp; xtmp = xtmp->next )
act_move.c:3485:      for( xit = room->first_exit; xit; xit = xit->next )
act_move.c:3516:         switch ( room->sector_type )
act_move.c:3758:/*	if ( destrm && xit->to_room->first_person )
act_move.c:3760:	    act(AT_PLAIN, destrm, xit->to_room->first_person, NULL, dtxt, TO_CHAR );
act_move.c:3761:	    act(AT_PLAIN, destrm, xit->to_room->first_person, NULL, dtxt, TO_ROOM );
act_move.c:3794:      for( obj = room->first_content; obj; obj = obj_next )
act_move.c:3832:            if( objmsg && room->first_person )
act_move.c:3834:               act( AT_PLAIN, objmsg, room->first_person, obj, dir_name[xit->vdir], TO_CHAR );
act_move.c:3835:               act( AT_PLAIN, objmsg, room->first_person, obj, dir_name[xit->vdir], TO_ROOM );
act_move.c:3837:            if( destob && xit->to_room->first_person )
act_move.c:3839:               act( AT_PLAIN, destob, xit->to_room->first_person, obj, dtxt, TO_CHAR );
act_move.c:3840:               act( AT_PLAIN, destob, xit->to_room->first_person, obj, dtxt, TO_ROOM );
act_move.c:3881:         sprintf( arg, "%d: %s\r\n", slot, ( room ? room->name : "None" ) );
act_move.c:3912:         ch->pcdata->memorize[ch->recall] = ch->in_room->vnum;
act_move.c:3971:   if( IS_SET( victim->in_room->room_flags, ROOM_SAFE ) && get_timer( victim, TIMER_SHOVEDRAG ) <= 0 )
act_move.c:4007:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) && get_timer( ch, TIMER_SHOVEDRAG ) <= 0 )
act_move.c:4059:      if( ch->in_room->pShop )
act_move.c:4105:      for( victim = ch->was_in_room->first_person; victim; victim = victim->next_in_room )
act_move.c:4144:   if( IS_SET( victim->in_room->room_flags, ROOM_SAFE )
act_obj.c:111:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
act_obj.c:252:            if( ch->in_room->pShop )
act_obj.c:261:            obj = get_obj_list( ch, arg1, ch->in_room->first_content );
act_obj.c:304:                &&IS_SET( ch->in_room->room_flags, ROOM_STICKY )  &&( !IS_OBJ_STAT( obj, ITEM_HOVER ) ) )
act_obj.c:335:         if( IS_SET( ch->in_room->room_flags, ROOM_DONATION ) )
act_obj.c:360:            if( ch->in_room->pShop )
act_obj.c:366:         for( obj = ch->in_room->last_content; obj; obj = obj_next )
act_obj.c:972:   if( ch->in_room->pShop )
act_obj.c:1008:   if( IS_SET( ch->in_room->room_flags, ROOM_NODROP )  &&ch != supermob )
act_obj.c:1047:         for( obj = ch->in_room->first_content; obj; obj = obj_next )
act_obj.c:1137:         if( IS_SET( ch->in_room->room_flags, ROOM_NODROPALL ) )
act_obj.c:1408:   if( obj->in_room && ( ch = obj->in_room->first_person ) != NULL )
act_obj.c:1518:   obj = get_obj_list_rev( ch, arg, ch->in_room->last_content );
act_obj.c:1526:   switch ( ch->in_room->sector_type )
act_obj.c:1598:      for( vch = ch->in_room->first_person; vch; vch = vch_next )
act_obj.c:1669:   if( IS_SET( obj->in_room->room_flags, ROOM_NOFLOOR )  &&CAN_GO( obj, DIR_DOWN )  &&!IS_OBJ_STAT( obj, ITEM_HOVER ) )
act_obj.c:1682:         sprintf( buf, "Object falling into same room, room %d", to_room->vnum );
act_obj.c:1687:      if( obj->in_room->first_person )
act_obj.c:1690:         act( AT_PLAIN, "$p falls far below.", obj->in_room->first_person, obj, NULL, TO_ROOM );
act_obj.c:1691:         act( AT_PLAIN, "$p falls far below.", obj->in_room->first_person, obj, NULL, TO_CHAR );
act_obj.c:1697:      if( obj->in_room->first_person )
act_obj.c:1700:         act( AT_PLAIN, "$p falls from above.", obj->in_room->first_person, obj, NULL, TO_ROOM );
act_obj.c:1701:         act( AT_PLAIN, "$p falls from above.", obj->in_room->first_person, obj, NULL, TO_CHAR );
act_obj.c:1703:      if( !IS_SET( obj->in_room->room_flags, ROOM_NOFLOOR ) && through )
act_obj.c:1711:            if( obj->in_room->first_person && number_percent(  ) > 15 )
act_obj.c:1717:            for( rch = obj->in_room->first_person; rch; rch = rch->next_in_room, chcnt++ )
act_obj.c:1736:                  if( obj->in_room->first_person )
act_obj.c:1739:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_ROOM );
act_obj.c:1740:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_CHAR );
act_obj.c:1752:                  if( obj->in_room->first_person )
act_obj.c:1755:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_ROOM );
act_obj.c:1756:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_CHAR );
act_wiz.c:664:   for( vic = room->first_person; vic; vic = vic->next_in_room )
act_wiz.c:778:   victim->retran = victim->in_room->vnum;
act_wiz.c:1019:                          pexit->to_room ? pexit->to_room->vnum : 0,
act_wiz.c:1173:                 pexit->to_room ? pexit->to_room->vnum : 0,
act_wiz.c:1248:   ch_printf_color( ch, "&cIn room: &w%d  ", obj->in_room == NULL ? 0 : obj->in_room->vnum );
act_wiz.c:1350:                       victim->in_room == NULL ? 0 : victim->in_room->vnum,
act_wiz.c:1603:                       victim->pIndexData->vnum, victim->short_descr, victim->in_room->vnum, victim->in_room->name );
act_wiz.c:1626:                             get_char_worth( victim ), victim->name, victim->in_room->vnum, victim->in_room->area->name,
act_wiz.c:1627:                             victim->in_room->name );
act_wiz.c:1677:                             obj->in_room->area->name,
act_wiz.c:1678:                             obj->in_room->vnum,
act_wiz.c:1753:                obj->in_room->vnum, obj->in_room->name);
act_wiz.c:1787:                  obj->in_room->vnum, obj->in_room->name);
act_wiz.c:1838:         sprintf( buf + strlen( buf ), "room   [%5d] %s\n\r", obj->in_room->vnum, obj->in_room->name );
act_wiz.c:2282:      for( victim = ch->in_room->first_person; victim; victim = vnext )
act_wiz.c:2289:      for( obj = ch->in_room->first_content; obj; obj = obj_next )
act_wiz.c:2380:      if( ch->in_room->pShop )
act_wiz.c:2428:      if( ch->in_room->pShop )
act_wiz.c:3109:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
act_wiz.c:3615:      old_room_vnum = d->character->in_room->vnum;
act_wiz.c:3953:                     pArea->hi_m_vnum ) == ech->pIndexData->vnum || ( ech->in_room && ech->in_room->area == pArea ) )
act_wiz.c:3957:      if( ech->in_room && ech->in_room->area == pArea )
act_wiz.c:3967:                  pArea->hi_o_vnum ) == eobj->pIndexData->vnum || ( eobj->in_room && eobj->in_room->area == pArea ) )
act_wiz.c:3979:            if( rid->area == pArea || exit->to_room->area == pArea )
act_wiz.c:4330:   for( rch = ch->in_room->first_person; rch && ( rch != ch ); rch = rch->next_in_room )
act_wiz.c:4447:         for( room = room_index_hash[i]; room; room = room->next )
act_wiz.c:4456:            else if( !room->first_person )   /* Skip it if room is empty */
act_wiz.c:4471:            for( p = room->first_person; p && !found; p = p->next_in_room )
act_wiz.c:4779:   if( victim->in_room->vnum != ROOM_VNUM_HELL )
act_wiz.c:4849:                       ( ( in_obj->in_room ) ? in_obj->in_room->vnum : 0 ),
act_wiz.c:4850:                       obj_short( obj ), ( in_obj->in_room == NULL ) ? "somewhere" : in_obj->in_room->name );
arena.c:89:   if( !room->first_person )
arena.c:91:   for( ch = room->first_person; ch; ch = ch->next_in_room )
arena.c:100:   if( !room->first_person )
arena.c:157:   if( !room->first_person )
arena.c:187:   if( !room->first_person )
arena.c:213:   if( !room->first_person )
arena.c:239:   if( !room->first_person )
arena.c:259:   if( !room->first_person )
arena.c:295:   if( !room->first_person )
arena.c:361:   if( !room->first_person )
arena.c:1032:            ch_printf( ch, "Located in %s.\n\r", arena->room->name );
arena.c:1035:            ch_printf( ch, "Located in %s &Y[&R%d&Y]&R.\n\r", arena->room->name, arena->room->vnum );
arena.c:1921:         arena->vnum = ch->in_room->vnum;
birth.c:616:            ch->name, aoran( ch->nation->name ), ch->in_room->name, ch->in_room->vnum );
birth.c:706:            ch->name, aoran( ch->nation->name ), ch->in_room->name, ch->in_room->vnum );
birth.c:755:   for( wizard = ch->in_room->first_person; wizard; wizard = wizard->next_in_room )
birth.c:1030:                        ch->name, aoran( ch->nation->name ), ch->in_room->name, ch->in_room->vnum );
build.c:885:   ch->regoto = ch->in_room->vnum;
build.c:900:   for( fch = in_room->first_person; fch; fch = fch_next )
build.c:5238:      for( room = room_index_hash[hash]; room; room = room->next )
build.c:5240:         if( nifty_is_name( argument, room->name ) )
build.c:5242:            ch_printf( ch, "[%d] %s in %s\n\r", room->vnum, room->name, room->area->name );
build.c:7229:   for( ed = room->first_extradesc; ed; ed = ed->next )
build.c:7237:      LINK( ed, room->first_extradesc, room->last_extradesc, next, prev );
build.c:7249:   for( rmed = room->first_extradesc; rmed; rmed = rmed->next )
build.c:7256:   UNLINK( rmed, room->first_extradesc, room->last_extradesc, next, prev );
build.c:7626:         REMOVE_BIT( room->room_flags, ROOM_PROTOTYPE );
build.c:7630:         for( victim = room->first_person; victim; victim = vnext )
build.c:7639:         for( obj = room->first_content; obj; obj = obj_next )
build.c:7646:      fprintf( fpout, "%s~\n", room->name );
build.c:7647:      fprintf( fpout, "%s~\n", strip_cr( room->description ) );
build.c:7648:      if( ( room->tele_delay > 0 && room->tele_vnum > 0 ) || room->runes > 0 )
build.c:7649:         fprintf( fpout, "0 %d %d %d %d %d\n", room->room_flags,
build.c:7650:                  room->sector_type, room->tele_delay, room->tele_vnum, room->runes );
build.c:7652:         fprintf( fpout, "0 %d %d\n", room->room_flags, room->sector_type );
build.c:7658:/*	switch( room->sector_type )
build.c:7663:			room->vegetation = 0;
build.c:7664:			room->curr_vegetation = 0;
build.c:7665:			room->water = 0;
build.c:7666:			room->curr_water = 0;
build.c:7667:			room->elevation = 100;
build.c:7668:			room->curr_elevation = 100;
build.c:7669:			room->resources = 0;
build.c:7670:			room->curr_resources = 0;
build.c:7673:			room->vegetation = 0;
build.c:7674:			room->curr_vegetation = 0;
build.c:7675:			room->water = 0;
build.c:7676:			room->curr_water = 0;
build.c:7677:			room->elevation = 0;
build.c:7678:			room->curr_elevation = 0;
build.c:7679:			room->resources = 0;
build.c:7680:			room->curr_resources = 0;
build.c:7683:			room->vegetation = 20;
build.c:7684:			room->curr_vegetation = 20;
build.c:7685:			room->water = 0;
build.c:7686:			room->curr_water = 0;
build.c:7687:			room->elevation = 0;
build.c:7688:			room->curr_elevation = 0;
build.c:7689:			room->resources = 70;
build.c:7690:			room->curr_resources = 70;
build.c:7693:			room->vegetation = 0;
build.c:7694:			room->curr_vegetation = 0;
build.c:7695:			room->water = 20;
build.c:7696:			room->curr_water = 20;
build.c:7697:			room->elevation = -100;
build.c:7698:			room->curr_elevation = -100;
build.c:7699:			room->resources = 100;
build.c:7700:			room->curr_resources = 100;
build.c:7703:			room->vegetation = 90;
build.c:7704:			room->curr_vegetation = 90;
build.c:7705:			room->water = 30;
build.c:7706:			room->curr_water = 30;
build.c:7707:			room->elevation = 0;
build.c:7708:			room->curr_elevation = 0;
build.c:7709:			room->resources = 100;
build.c:7710:			room->curr_resources = 100;
build.c:7713:			room->vegetation = 0;
build.c:7714:			room->curr_vegetation = 0;
build.c:7715:			room->water = 0;
build.c:7716:			room->curr_water = 0;
build.c:7717:			room->elevation = 0;
build.c:7718:			room->curr_elevation = 0;
build.c:7719:			room->resources = 30;
build.c:7720:			room->curr_resources = 30;
build.c:7723:			room->vegetation = 10;
build.c:7724:			room->curr_vegetation = 10;
build.c:7725:			room->water = 0;
build.c:7726:			room->curr_water = 0;
build.c:7727:			room->elevation = 0;
build.c:7728:			room->curr_elevation = 0;
build.c:7729:			room->resources = 20;
build.c:7730:			room->curr_resources = 20;
build.c:7733:			room->vegetation = 30;
build.c:7734:			room->curr_vegetation = 30;
build.c:7735:			room->water = 0;
build.c:7736:			room->curr_water = 0;
build.c:7737:			room->elevation = 30;
build.c:7738:			room->curr_elevation = 30;
build.c:7739:			room->resources = 90;
build.c:7740:			room->curr_resources = 90;
build.c:7743:			room->vegetation = 0;
build.c:7744:			room->curr_vegetation = 0;
build.c:7745:			room->water = 40;
build.c:7746:			room->curr_water = 40;
build.c:7747:			room->elevation = 0;
build.c:7748:			room->curr_elevation = 0;
build.c:7749:			room->resources = 100;
build.c:7750:			room->curr_resources = 100;
build.c:7753:			room->vegetation = 0;
build.c:7754:			room->curr_vegetation = 0;
build.c:7755:			room->water = 80;
build.c:7756:			room->curr_water = 80;
build.c:7757:			room->elevation = 0;
build.c:7758:			room->curr_elevation = 0;
build.c:7759:			room->resources = 100;
build.c:7760:			room->curr_resources = 100;
build.c:7763:			room->vegetation =20;
build.c:7764:			room->curr_vegetation = 20;
build.c:7765:			room->water = 0;
build.c:7766:			room->curr_water = 0;
build.c:7767:			room->elevation = 70;
build.c:7768:			room->curr_elevation = 70;
build.c:7769:			room->resources = 100;
build.c:7770:			room->curr_resources = 100;
build.c:7773:			room->vegetation = 0;
build.c:7774:			room->curr_vegetation = 0;
build.c:7775:			room->water = 100;
build.c:7776:			room->curr_water = 100;
build.c:7777:			room->elevation = 0;
build.c:7778:			room->curr_elevation = 0;
build.c:7779:			room->resources = 0;
build.c:7780:			room->curr_resources = 0;
build.c:7783:			room->vegetation = 30;
build.c:7784:			room->curr_vegetation = 30;
build.c:7785:			room->water = 100;
build.c:7786:			room->curr_water = 100;
build.c:7787:			room->elevation = 0;
build.c:7788:			room->curr_elevation = 0;
build.c:7789:			room->resources = 100;
build.c:7790:			room->curr_resources = 100;
build.c:7795:               room->vegetation, room->curr_vegetation,
build.c:7796:               room->water, room->curr_water, room->elevation, room->curr_elevation, room->resources, room->curr_resources );
build.c:7798:      for( xit = room->first_exit; xit; xit = xit->next )
build.c:7811:      for( pReset = room->first_reset; pReset; pReset = pReset->next )
build.c:7890:      for( ed = room->first_extradesc; ed; ed = ed->next )
build.c:7893:      if( room->map )   /* maps */
build.c:7897:	   fprintf( fpout, "%s~\n", strip_cr( room->map )	);
build.c:7899:	   fprintf( fpout, "M %d %d %d %c\n",	room->map->vnum,
build.c:7900:						room->map->x,
build.c:7901:						room->map->y,
build.c:7902:						room->map->entry );
build.c:7905:      if( room->mudprogs )
build.c:7907:         for( mprog = room->mudprogs; mprog; mprog = mprog->next )
build.c:7926:      if( ( pShop = room->pShop ) == NULL )
build.c:8335:            if( tarea == ch->in_room->area )
build.c:8337:         tarea = ch->in_room->area;
build.c:8653:      pager_printf( ch, "%5d) %s\n\r", vnum, room->name );
build.c:9425:   mprog = ch->in_room->mudprogs;
build.c:9472:            xCLEAR_BITS( ch->in_room->progtypes );
build.c:9474:               xSET_BIT( ch->in_room->progtypes, mprg->type );
build.c:9520:         mprg_next = ch->in_room->mudprogs;
build.c:9521:         ch->in_room->mudprogs = mprg_next->next;
build.c:9539:            xREMOVE_BIT( ch->in_room->progtypes, mptype );
build.c:9567:         xSET_BIT( ch->in_room->progtypes, mptype );
build.c:9570:         ch->in_room->mudprogs = mprg;
build.c:9579:            xSET_BIT( ch->in_room->progtypes, mptype );
build.c:9604:         ch->in_room->mudprogs = mprg;
build.c:9605:      xSET_BIT( ch->in_room->progtypes, mptype );
build.c:9771:   else if( !ch->in_room->area )
build.c:9776:   else if( !ch->in_room->area->weather )
build.c:9784:   area = ch->in_room->area;
build.c:10051:   tarea = ch->in_room->area;
build.c:10062:         if( pexit->to_room->area != tarea )
build.c:10064:            pager_printf( ch, "To: %-20.20s %s\n\r", pexit->to_room->area->filename, pexit->to_room->area->name );
build.c:10065:            pager_printf( ch, "%15d %-30.30s -> %15d (%s)\n\r", vnum, room->name, pexit->vnum, dir_name[i] );
build.c:10083:   tarea = ch->in_room->area;
build.c:10099:            if( pexit->to_room->area == tarea )
build.c:10102:               pager_printf( ch, "%15d %-30.30s -> %15d (%s)\n\r", vnum, room->name, pexit->vnum, dir_name[i] );
city.c:481:   if( !ch->in_room->area->city )
city.c:486:   city = ch->in_room->area->city;
city.c:489:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
city.c:495:   if( ch->in_room->curr_vegetation > 50 )
city.c:503:      ch->in_room->sector_type = SECT_INSIDE;
city.c:504:      SET_BIT( ch->in_room->room_flags, ROOM_INDOORS );
city.c:505:      STRFREE( ch->in_room->name );
city.c:542:      ch->in_room->name = STRALLOC( aoran( buf ) );
city.c:547:      ch->in_room->sector_type = SECT_INSIDE;
city.c:548:      SET_BIT( ch->in_room->room_flags, ROOM_INDOORS );
city.c:549:      STRFREE( ch->in_room->name );
city.c:586:      ch->in_room->name = STRALLOC( aoran( buf ) );
city.c:591:      ch->in_room->sector_type = SECT_UNDERGROUND;
city.c:592:      ch->in_room->resources = 100;
city.c:593:      SET_BIT( ch->in_room->room_flags, ROOM_INDOORS );
city.c:594:      STRFREE( ch->in_room->name );
city.c:631:      ch->in_room->name = STRALLOC( aoran( buf ) );
city.c:635:      ch->in_room->sector_type = SECT_CITY;
city.c:636:      STRFREE( ch->in_room->name );
city.c:673:      ch->in_room->name = STRALLOC( aoran( buf ) );
city.c:695:   if( !ch->in_room->area->city )
city.c:700:   city = ch->in_room->area->city;
city.c:704:      ch->in_room->sector_type = SECT_FOREST;
city.c:706:      STRFREE( ch->in_room->name );
city.c:743:      ch->in_room->name = STRALLOC( aoran( buf ) );
city.c:747:      ch->in_room->sector_type = SECT_FIELD;
city.c:749:      STRFREE( ch->in_room->name );
city.c:777:      ch->in_room->name = STRALLOC( aoran( buf ) );
city.c:785:   ch->in_room->vegetation = 100;
city.c:786:   ch->in_room->curr_vegetation = 100;
city.c:796:   if( !ch->in_room->area->city )
city.c:801:   city = ch->in_room->area->city;
clan.c:266:      for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
clan.c:317:      if( !ch->in_room->first_content )
clan.c:322:      for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
combat.c:162:               ( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) ?
combat.c:166:                 ? ch->last_hit->short_descr : ch->last_hit->name ), ch->in_room->name, ch->in_room->vnum );
combat.c:192:      sprintf( log_buf, "%s (%d) died in %s (%d)", ch->name, get_char_worth( ch ), ch->in_room->name, ch->in_room->vnum );
combat.c:260:   for( pexit = was_in_room->first_exit; pexit; pexit = pexit->next )
combat.c:702:   if( IS_SET( ch->in_room->room_flags, ROOM_PRIVATE ) )
combat.c:744:      if( IS_SET( vch->in_room->room_flags, ROOM_NOMISSILE ) )
combat.c:839:         for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
comm.c:462:    		ch->name, ch->in_room->vnum );
comm.c:1972:            if( ch->in_room->vnum == 6 )
comm.c:1977:         else if( ch->in_room->vnum == ROOM_VNUM_LIMBO )
comm.c:2015:         sprintf( buf, "%s has entered the game in %s (%d).", ch->name, ch->in_room->name, ch->in_room->vnum );
comm.c:2738:      to = ch->in_room->first_person;
comm.c:2777:      for( to_obj = to->in_room->first_content; to_obj; to_obj = to_obj->next_content )
comm.c:3102:                     sprintf( pbuf, "%s", flag_string( ch->in_room->room_flags, r_flags ) );
comm.c:3106:                     sprintf( pbuf, "<#%d> ", ch->in_room->vnum );
comm.c:3889:      sprintf( buf, "PC: %s room: %d", ch->name, ch->in_room ? ch->in_room->vnum : -1 );
db.c:1519:            boot_log( "%s: %s (%d) bad command '%c'.", __FUNCTION__, room->area->filename, count, letter );
db.c:1524:            boot_log( "%s: %s (%d) 'M': mobile %d doesn't exist.", __FUNCTION__, room->area->filename, count, arg1 );
db.c:1529:            boot_log( "%s: %s (%d) '%c': object %d doesn't exist.", __FUNCTION__, room->area->filename, count, letter,
db.c:1535:            boot_log( "%s: %s (%d) '%c': object %d doesn't exist.", __FUNCTION__, room->area->filename, count, letter,
db.c:1541:            boot_log( "%s: %s (%d) 'P': destination object %d doesn't exist.", __FUNCTION__, room->area->filename, count,
db.c:1550:            boot_log( "%s: %s (%d) '%c': object %d doesn't exist.", __FUNCTION__, room->area->filename, count, letter,
db.c:1565:               boot_log( "%s: %s (%d) 'D': exit %d not door.", __FUNCTION__, room->area->filename, count, arg2 );
db.c:1572:               boot_log( "%s: %s (%d) 'D': bad 'locks': %d.", __FUNCTION__, room->area->filename, count, arg3 );
db.c:1581:               boot_log( "%s: %s (%d) 'R': bad exit %d.", __FUNCTION__, room->area->filename, count, arg2 );
db.c:2054:            if( pexit->to_room->area != tarea && !dupe_neighbor( tarea, pexit->to_room->area ) )
db.c:2056:               pager_printf( ch, "To: %-20.20s %s\n\r", pexit->to_room->area->filename, pexit->to_room->area->name );
db.c:2057:               pager_printf( ch, "%15d %-30.30s -> %15d (%s)\n\r", vnum, room->name, pexit->vnum, dir_name[i] );
db.c:2063:               new->name = STRALLOC( pexit->to_room->area->name );;
db.c:2229:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
db.c:2260:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
db.c:2277:         room->first_exit = exits[x];
db.c:2282:         room->last_exit = exits[x];
db.c:2296:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
db.c:2312:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
db.c:2353:		&&   pch->in_room->area == pArea
db.c:3870:      fprintf( fp, "[%5d] %s: %s\n", ch->in_room ? ch->in_room->vnum : 0, ch->name, str );
db.c:4690:            if( ( original = iRoom->mudprogs ) != NULL )
db.c:4697:               iRoom->mudprogs = working;
db.c:4802:   while( ( ch = room->first_person ) != NULL )
db.c:4812:   while( ( o = room->first_content ) != NULL )
db.c:4815:   while( ( ed = room->first_extradesc ) != NULL )
db.c:4817:      room->first_extradesc = ed->next;
db.c:4823:   while( ( trail = room->first_trail ) != NULL )
db.c:4825:      room->first_trail = trail->next;
db.c:4830:   while( ( ex = room->first_exit ) != NULL )
db.c:4832:   while( ( mpact = room->mpact ) != NULL )
db.c:4834:      room->mpact = mpact->next;
db.c:4838:   while( ( mp = room->mudprogs ) != NULL )
db.c:4840:      room->mudprogs = mp->next;
db.c:4845:/*  if (room->map)
db.c:4849:    if ((mapi = get_map_index(room->map->vnum)) != NULL)
db.c:4850:      if (room->map->x > 0 && room->map->x < 80 &&
db.c:4851:          room->map->y > 0 && room->map->y < 48)
db.c:4852:        mapi->map_of_vnums[room->map->y][room->map->x] = -1;
db.c:4853:    DISPOSE(room->map);
db.c:4855:   STRFREE( room->name );
db.c:4856:   STRFREE( room->description );
db.c:4858:   hash = room->vnum % MAX_KEY_HASH;
db.c:4860:      room_index_hash[hash] = room->next;
db.c:4867:         prev->next = room->next;
db.c:4869:         bug( "delete_room: room %d not in hash bucket %d.", room->vnum, hash );
db.c:5239:      pexit->vnum = to_room->vnum;
elkandu.c:327:   if( ch->in_room->pShop )
elkandu.c:625:      dam = ( dam * 200 ) / ( victim->in_room->curr_vegetation + 10 );
elkandu.c:628:      dam = ( dam * 200 ) / ( victim->in_room->curr_water + 10 );
elkandu.c:1651:         if( ch->in_room->curr_vegetation < 100 - ch->curr_talent[TAL_EARTH] )
elkandu.c:1675:         if( ch->in_room->area->weather->temp > ch->curr_talent[TAL_FROST] * 10 - 400 )
elkandu.c:2091:         if( ch->in_room->curr_vegetation <= 0 )
elkandu.c:2096:         ch->in_room->curr_vegetation -= 10;
elkandu.c:2107:         if( ch->in_room->curr_water <= 0 )
elkandu.c:2112:         ch->in_room->curr_water -= 10;
elkandu.c:2123:         if( ch->in_room->curr_vegetation < 10 )
elkandu.c:2128:         if( ch->in_room->curr_water > 30 )
elkandu.c:2135:         SET_BIT( ch->in_room->room_flags, ROOM_BURNING );
elkandu.c:2667:         if( IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) )
elkandu.c:3179:                  pager_printf( ch, "%s is in %s\n\r", PERS( victim, ch ), victim->in_room->name );
elkandu.c:3189:                                PERS( victim, ch ), victim->in_room->name, victim->in_room->area->name );
elkandu.c:3219:                           obj_short( obj ), PERS( in_obj->carried_by, ch ), in_obj->carried_by->in_room->name );
elkandu.c:3223:                           in_obj->carried_by->in_room->name, in_obj->carried_by->in_room->area->name );
elkandu.c:3230:                  sprintf( buf, "%s is in %s.\n\r", obj_short( obj ), in_obj->in_room->name );
elkandu.c:3233:                           obj_short( obj ), in_obj->in_room->name, in_obj->in_room->area->name );
elkandu.c:3255:                    ch->in_room->name, ch->in_room->area->name, ch->in_room->area->resetmsg );
elkandu.c:3256:         switch ( ch->in_room->sector_type )
elkandu.c:3314:         if( ch->in_room->room_flags )
elkandu.c:3315:            ch_printf( ch, "It seems to be %s.\n\r", flag_string( ch->in_room->room_flags, r_flags ) );
elkandu.c:3316:         temp = ch->in_room->curr_water;
elkandu.c:3320:         temp = ch->in_room->curr_vegetation;
elkandu.c:3322:         temp = ch->in_room->curr_resources;
elkandu.c:3325:         if( ch->in_room->runes )
elkandu.c:3327:                       ch->curr_talent[TAL_CATALYSM] < 20 ? "some sort" : flag_string( ch->in_room->runes, rune_flags ) );
elkandu.c:4025:            sprintf( buf, "%s sent %s to %s (%d).", ch->name, victim->name, target->in_room->name, target->in_room->vnum );
elkandu.c:4045:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) && ch->curr_talent[TAL_MOTION] < 80 )
elkandu.c:4087:            if( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) )
elkandu.c:4094:            location = get_room_index( ch->in_room->area->hi_soft_range );
elkandu.c:4149:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) && ch->curr_talent[TAL_MOTION] < 80 )
elkandu.c:4212:            if( IS_SET( ch->in_room->room_flags, ROOM_NO_DREAM )
elkandu.c:4214:                     || ( IS_SET( ch->in_room->runes, RUNE_WARD ) && ch->curr_talent[TAL_DREAM] < 200 ) ) )
elkandu.c:4551:         if( IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) )
elkandu.c:4583:            sprintf( buf, "%s summoned %s to %s (%d).", ch->name, victim->name, ch->in_room->name, ch->in_room->vnum );
elkandu.c:4678:         if( IS_SET( victim->in_room->room_flags, ROOM_NO_DREAM )
elkandu.c:4680:                  || ( IS_SET( victim->in_room->runes, RUNE_WARD ) && ch->curr_talent[TAL_DREAM] < 200 ) ) )
elkandu.c:4728:               if( IS_SET( obj->in_room->room_flags, ROOM_NOSUPPLICATE )
elkandu.c:4756:            if( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) )
elkandu.c:4763:            location = get_room_index( ch->in_room->area->hi_soft_range );
elkandu.c:4818:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) && ch->curr_talent[TAL_MOTION] < 80 )
elkandu.c:4977:         if( ( ch->curr_talent[TAL_EARTH] < 20 && !IS_NPC( ch ) ) || IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
elkandu.c:4985:         for( victim = ch->in_room->first_person; victim; victim = next_vict )
elkandu.c:4989:            if( IS_AFFECTED( victim, AFF_FLYING ) && !IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
elkandu.c:6119:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
elkandu.c:6139:         SET_BIT( room->runes, RUNE_LIFE );
elkandu.c:6150:         SET_BIT( room->runes, RUNE_DISTRACT );
elkandu.c:6161:         SET_BIT( room->runes, RUNE_WARD );
elkandu.c:6185:         ch->in_room->runes = 0;
elkandu.c:7064:         if( ch->in_room->curr_vegetation >= 100 )
elkandu.c:7069:         ch->in_room->curr_vegetation += 10;
elkandu.c:7080:         if( ch->in_room->curr_water >= 100 )
elkandu.c:7085:         ch->in_room->curr_water += 10;
elkandu.c:7833:            for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
elkandu.c:7854:            for( victim = ch->in_room->first_person; victim; victim = next_vict )
elkandu.c:7882:            for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
elkandu.c:7903:            for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
fight.c:326:            ||IS_SET( ch->in_room->room_flags, ROOM_BURNING ) 
fight.c:327:            ||ch->in_room->sector_type == SECT_LAVA 
fight.c:334:         if( ch->in_room->curr_water > 30  &&ch->in_room->sector_type != SECT_LAVA )
fight.c:336:            REMOVE_BIT( ch->in_room->room_flags, ROOM_BURNING );
fight.c:343:            REMOVE_BIT( ch->in_room->room_flags, ROOM_BURNING );
fight.c:374:      if( ch->in_room->area->weather->temp > 100 )
fight.c:381:      else if( ch->in_room->area->weather->temp < -100 )
fight.c:672:            ||IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) 
fight.c:673:            ||( IS_SET( pexit->to_room->room_flags, ROOM_NOFLOOR ) && !IS_FLOATING( ch ) ) )
grub.c:85:         sprintf( field, "%-18s", outer_obj->in_room->name );
grub.c:87:         sprintf( buf + strlen( buf ), "%5d %-18s ", outer_obj->in_room->vnum, field );
grub.c:412:      if( ( pRoom = get_room_index( i ) ) && ( pProg = pRoom->mudprogs ) )
grub.c:545:            for( pRoom = room_index_hash[cou]; pRoom; pRoom = pRoom->next )
grub.c:547:               if( pRoom->vnum >= lo && pRoom->vnum <= hi )
grub.c:549:                  if( match == pRoom->sector_type && hit_cou < RGRUB_ST_MAX_SIZE )
grub.c:550:                     vnum[hit_cou++] = pRoom->vnum;
grub.c:1985:            for( pRoom = room_index_hash[cou]; pRoom; pRoom = pRoom->next )
grub.c:1987:               if( pRoom->vnum >= lo && pRoom->vnum <= hi )
grub.c:1989:                  if( match == ( match & pRoom->room_flags ) && hit_cou < DIAG_RF_MAX_SIZE )
grub.c:1990:                     vnum[hit_cou++] = pRoom->vnum;
handler.c:126:   for( ch = room->first_person; ch; ch = ch->next_in_room )
handler.c:129:   for( af = room->first_affect; af; af = af->next )
handler.c:135:   if( !IS_SET( room->room_flags, ROOM_INDOORS ) )
handler.c:140:         if( moon->up && !str_cmp( moon->world, room->area->resetmsg ) )
handler.c:146:   for( obj = room->first_content; obj; obj = obj->next_content )
handler.c:1113:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) || IS_SET( ch->immune, RIS_MAGIC ) || saving_char == ch   /* so save/quit doesn't trigger */
handler.c:1397:      for( paf = ch->in_room->first_affect; paf; paf = paf->next )
handler.c:1490:      --ch->in_room->area->nplayer;
handler.c:1492:      --ch->in_room->area->nmob;
handler.c:1506:      for( paf = ch->in_room->first_affect; paf; paf = paf->next )
handler.c:1513:   UNLINK( ch, ch->in_room->first_person, ch->in_room->last_person, next_in_room, prev_in_room );
handler.c:1559:      ch->home_room = ch->in_room->vnum;
handler.c:1602:   if( ch->was_in_room->area != ch->in_room->area )
handler.c:1604:      reset_area( ch->in_room->area );
handler.c:1605:      reset_area( ch->in_room->area );
handler.c:1606:      reset_area( ch->in_room->area );
handler.c:1856:   UNLINK( obj, in_room->first_content, in_room->last_content, next_content, prev_content );
handler.c:2010:      for( ch = obj->in_room->first_person; ch; ch = ch->next_in_room )
handler.c:2314:   for( fch = obj->in_room->first_person; fch != NULL; fch = fch->next_in_room )
handler.c:2342:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
handler.c:2364:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
handler.c:2403:   for( wch = ch->in_room->first_person; wch; wch = wch->next_in_room )
handler.c:2451:   for( wch = ch->in_room->first_person; wch; wch = wch->next_in_room )
handler.c:2485:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
handler.c:2512:   for( rch = obj->in_room->first_person; rch; rch = rch->next_in_room )
handler.c:2725:   if( ( obj = get_obj_list_rev( ch, argument, ch->in_room->last_content ) ) != NULL )
handler.c:3743:   if( !ch->in_room || !ch->in_room->first_content )
handler.c:3746:   for( check = ch->in_room->first_content; check; check = check->next_content )
handler.c:3812:   UNLINK( pexit, room->first_exit, room->last_exit, next, prev );
handler.c:3842:   STRFREE( room->description );
handler.c:3843:   STRFREE( room->name );
handler.c:3844:   for( ed = room->first_extradesc; ed; ed = ed_next )
handler.c:3852:   room->first_extradesc = NULL;
handler.c:3853:   room->last_extradesc = NULL;
handler.c:3854:   for( pexit = room->first_exit; pexit; pexit = pexit_next )
handler.c:3862:   room->first_exit = NULL;
handler.c:3863:   room->last_exit = NULL;
handler.c:3864:   room->room_flags = 0;
handler.c:3865:   room->sector_type = 0;
handler.c:3963:   for( pReset = room->first_reset; pReset; pReset = pReset_next )
handler.c:3969:   room->first_reset = NULL;
handler.c:3970:   room->last_reset = NULL;
handler.c:4511:      LINK( rest, obj->in_room->first_content, obj->in_room->last_content, next_content, prev_content );
handler.c:4707:    tarea = mob->in_room->area;
handler.c:4991:   strcpy( buf, ch->in_room->description );
handler.c:5022:   switch ( ch->in_room->sector_type )
handler.c:5028:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5030:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5032:         else if( ch->in_room->curr_vegetation > 5 )
handler.c:5037:         if( ch->in_room->curr_resources > 66 )
handler.c:5039:         else if( ch->in_room->curr_resources > 33 )
handler.c:5042:         if( ch->in_room->curr_water > 75 )
handler.c:5044:         else if( ch->in_room->curr_water > 25 )
handler.c:5051:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5053:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5058:         if( ch->in_room->curr_resources > 66 )
handler.c:5063:         if( ch->in_room->curr_water > 66 )
handler.c:5065:         else if( ch->in_room->curr_water > 33 )
handler.c:5072:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5074:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5079:         if( ch->in_room->curr_water > 66 )
handler.c:5081:         else if( ch->in_room->curr_water > 33 )
handler.c:5086:         if( ch->in_room->curr_resources > 66 )
handler.c:5093:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5095:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5100:         if( ch->in_room->curr_water > 66 )
handler.c:5102:         else if( ch->in_room->curr_water > 33 )
handler.c:5107:         if( ch->in_room->curr_resources > 66 )
handler.c:5114:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5116:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5121:         if( ch->in_room->curr_water > 66 )
handler.c:5123:         else if( ch->in_room->curr_water > 33 )
handler.c:5133:         if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
handler.c:5142:         if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
handler.c:5154:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5156:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5166:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5168:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5170:         else if( ch->in_room->curr_resources > 66 )
handler.c:5177:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5179:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5184:         if( ch->in_room->curr_resources > 66 )
handler.c:5193:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5195:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5204:         if( ch->in_room->curr_vegetation > 66 )
handler.c:5206:         else if( ch->in_room->curr_vegetation > 33 )
handler.c:5223:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
handler.c:5225:      if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
handler.c:5227:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) )
handler.c:5229:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_SUMMON ) )
handler.c:5231:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_ASTRAL ) )
handler.c:5233:      if( IS_SET( ch->in_room->room_flags, ROOM_NOSUPPLICATE ) )
handler.c:5237:   if( IS_SET( ch->in_room->room_flags, ROOM_DARK ) )
handler.c:5239:   if( IS_SET( ch->in_room->room_flags, ROOM_TUNNEL ) )
handler.c:5241:   if( IS_SET( ch->in_room->room_flags, ROOM_PRIVATE ) )
handler.c:5243:   if( IS_SET( ch->in_room->room_flags, ROOM_SOLITARY ) )
handler.c:5245:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
handler.c:5247:   if( IS_SET( ch->in_room->room_flags, ROOM_AMPLIFY ) )
handler.c:5249:   if( IS_SET( ch->in_room->room_flags, ROOM_NOMISSILE ) )
handler.c:5251:   if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
handler.c:5253:   if( IS_SET( ch->in_room->room_flags, ROOM_SLIPPERY ) )
handler.c:5255:   if( IS_SET( ch->in_room->room_flags, ROOM_BURNING ) )
handler.c:5257:   if( ch->in_room->runes )
handler.c:5264:   for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
handler.c:5299:            if( pexit->to_room->sector_type != ch->in_room->sector_type )
handler.c:5302:               switch ( pexit->to_room->sector_type )
handler.c:5326:                     if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
handler.c:5335:                     if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
handler.c:5384:/*	for (obj = ch->in_room->first_content; obj; obj = obj->next_content) {
handler.c:5472:   for( trail = ch->in_room->first_trail; trail; trail = trail->next )
handler.c:5498:          ( ch->in_room->sector_type < 6 || ch->in_room->sector_type == 10 || ch->in_room->sector_type == 13 ) )
handler.c:5540:      if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 )
handler.c:5541:          && ( ( ch->in_room->area->weather->precip + 3 * weath_unit - 1 ) / weath_unit > 3 ) )
handler.c:5559:             && ch->in_room->sector_type != 0
handler.c:5560:             && ch->in_room->sector_type != 1
handler.c:5561:             && ch->in_room->sector_type < 6
interp.c:474:               ch->in_room ? ch->in_room->vnum : 0, time_used.tv_sec, time_used.tv_usec );
interp.c:478:               ch->in_room ? ch->in_room->vnum : 0, time_used.tv_sec, time_used.tv_usec );
magic.c:547:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
magic.c:1200:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
magic.c:1550:      for( vch = ch->in_room->first_person; vch; vch = vch_next )
magic.c:1577:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
magic.c:1584:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) && skill->target == TAR_CHAR_OFFENSIVE )
magic.c:1918:         ||IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
magic.c:1919:         ||IS_SET( victim->in_room->room_flags, ROOM_INDOORS )  ||IS_SET( victim->in_room->room_flags, ROOM_PROTOTYPE ) )
magic.c:2050:   if( !ch->in_room->first_content )
magic.c:2056:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
magic.c:2109:   ch_printf( ch, "You are in %s in %s, on the world of %s.\n\r", ch->in_room->name, ch->in_room->area->name,
magic.c:2110:               ch->in_room->area->resetmsg );
magic.c:2111:   switch ( ch->in_room->sector_type )
magic.c:2169:   if( ch->in_room->room_flags )
magic.c:2170:      ch_printf( ch, "It seems to be %s.\n\r", flag_string( ch->in_room->room_flags, r_flags ) );
magic.c:2171:   temp = ch->in_room->curr_water;
magic.c:2175:   temp = ch->in_room->curr_vegetation;
magic.c:2177:   temp = ch->in_room->curr_resources;
magic.c:2180:   if( ch->in_room->runes )
magic.c:2181:      ch_printf( ch, "Runes of %s line the walls.\n\r", flag_string( ch->in_room->runes, rune_flags ) );
magic.c:2329:          ||IS_SET( victim->in_room->room_flags, ROOM_PRIVATE ) 
magic.c:2330:          ||IS_SET( victim->in_room->room_flags, ROOM_SOLITARY ) 
magic.c:2331:          ||IS_SET( victim->in_room->room_flags, ROOM_NO_ASTRAL ) 
magic.c:2332:          ||IS_SET( victim->in_room->room_flags, ROOM_NO_RECALL ) 
magic.c:2333:          ||IS_SET( victim->in_room->room_flags, ROOM_PROTOTYPE ) 
magic.c:2334:          ||IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) 
magic.c:2335:          ||IS_SET( ch->in_room->room_flags, ROOM_NO_ASTRAL ) 
magic.c:2348:   targetRoomVnum = victim->in_room->vnum;
magic.c:2355:      for( pexit = fromRoom->first_exit; pexit; pexit = pexit->next )
magic.c:2371:   for( pexit = targetRoom->first_exit; pexit; pexit = pexit->next )
magic.c:2604:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
magic.c:2615:   for( vch = ch->in_room->first_person; vch; vch = vch_next )
magic.c:2850:         victim = victim->in_room->first_person;
magic.c:2853:         victim = ch->in_room->first_person;
magic.c:2943:            WEATHER_DATA * weath = ch->in_room->area->weather;
magic.c:3203:      if( ch && ch->name && ch->in_room && ch->in_room->vnum )
magic.c:3204:         bug( "bad skill %d passed to spell_smaug: ch->name %s, room %d", sn, ch->name, ch->in_room->vnum );
magic.c:3209:   if( SPELL_FLAG( skill, SF_EARTH )  &&( ch->in_room->curr_vegetation < 33 ) )
magic.c:3214:   if( SPELL_FLAG( skill, SF_AIR )  &&( ch->in_room->curr_water >= 100 ) )
magic.c:3220:   if( SPELL_FLAG( skill, SF_WATER )  &&( ch->in_room->curr_water < 33 ) )
magic.c:3230:   if( SPELL_FLAG( skill, SF_GROUND )  &&( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) ) )
magic.c:3328:   amount += number_range( -10, ( ch->in_room->area->weather->mana * 10 ) - amount );
magic.c:3341:   ch->in_room->area->weather->mana -= ( int )amount / 100;
magic.c:3405:   weath = ch->in_room->area->weather;
makeobjs.c:1622:   shop = ch->in_room->pShop;
makeobjs.c:2019:               for( fire = ch->in_room->first_content; fire; fire = fire->next_content )
makeobjs.c:2221:      if( ( ch = obj->in_room->first_person ) != NULL )
makeobjs.c:2267:            ch->in_room->area->gold_looted += ch->gold;
makeobjs.c:2300:            ch->in_room->area->gold_looted += ch->gold;
makeobjs.c:2415:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
misc.c:142:   for( tch = ch->in_room->first_person; tch; tch = tch->next_in_room )
misc.c:301:   if( ch->in_room->pShop )
misc.c:455:      for( source = ch->in_room->first_content; source; source = src_next )
misc.c:728:      for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
misc.c:953:                ( ch->in_room->sector_type == SECT_UNDERWATER || ch->in_room->sector_type == SECT_WATER_SWIM
misc.c:954:                  || ch->in_room->sector_type ==
misc.c:955:                  SECT_WATER_NOSWIM ) ? "dissolves in the water" : ( ch->in_room->sector_type == SECT_AIR
misc.c:956:                                                                      || IS_SET( ch->in_room->room_flags,
misc.c:1332:      for( rch = room->first_person; rch; rch = rch->next_in_room )
misc.c:1455:         for( rch = room->first_person; rch; rch = rch->next_in_room )
misc.c:1465:               for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
misc.c:1475:         for( rch = room->first_person; rch; rch = rch->next_in_room )
misc.c:1485:               for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
misc.c:1579:         for( rch = to_room->first_person; rch; rch = rch->next_in_room )
misc.c:1755:   if( ch->in_room->pShop )
misc.c:1871:            if( IS_SET( ch->in_room->room_flags, ROOM_NODROP )  ||xIS_SET( ch->act, PLR_LITTERBUG ) )
misc.c:1880:            if( IS_SET( ch->in_room->room_flags, ROOM_NODROPALL ) )
misc.c:2151:      ch = obj->in_room->first_person;
misc.c:2219:         for( rec = d->character->in_room->first_content; rec; rec = rec->next_content )
mud_comm.c:182:   if( xIS_EMPTY( ch->in_room->progtypes ) )
mud_comm.c:188:   pager_printf( ch, "Name: %s.  Vnum: %d.\n\r", ch->in_room->name, ch->in_room->vnum );
mud_comm.c:189:   for( mprg = ch->in_room->mudprogs; mprg; mprg = mprg->next )
mud_comm.c:350:   for( pexit = was_in_room->first_exit; pexit; pexit = pexit->next )
mud_comm.c:473:   shop = ch->in_room->pShop;
mud_comm.c:481:   obj = ch->in_room->first_content;
mud_comm.c:510:         fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
mud_comm.c:654:      for( victim = ch->in_room->first_person; victim; victim = vnext )
mud_comm.c:661:      while( ch->in_room->first_content )
mud_comm.c:663:         if( IS_OBJ_STAT( ch->in_room->first_content, ITEM_ARTIFACT ) )
mud_comm.c:665:            obj = ch->in_room->first_content;
mud_comm.c:681:            extract_obj( ch->in_room->first_content );
mud_comm.c:785:   for( fch = in_room->first_person; fch; fch = fch_next )
mud_comm.c:866:      for( victim = ch->in_room->first_person; victim; victim = nextinroom )
mud_comm.c:890:              || !can_see( ch, d->character )  ||ch->in_room->area != d->character->in_room->area )
mud_comm.c:958:      for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
mud_comm.c:1003:      if( vch->in_room->area == ch->in_room->area  &&!IS_NPC( vch )  &&IS_AWAKE( vch ) )
mud_comm.c:1236:      for( victim = ch->in_room->first_person; victim; victim = nextinroom )
mud_comm.c:1629:      boost_economy( ch->in_room->area, gold );
mud_comm.c:1649:   if( ch->gold < 1000000000 && gold < 1000000000 && ch->in_room  &&economy_has( ch->in_room->area, gold ) )
mud_comm.c:1653:      lower_economy( ch->in_room->area, gold );
mud_comm.c:1706:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
mud.h:3285:				    (ch)->in_room->room_flags,		    \
mud.h:3287:				    (ch)->in_room->room_flags,              \
mud.h:3290:#define IS_UNDERWATER(ch)	((((ch)->in_room->sector_type == SECT_WATER_SWIM \
mud.h:3291:				|| (ch)->in_room->sector_type == SECT_WATER_NOSWIM \
mud.h:3292:				|| (ch)->in_room->sector_type == SECT_UNDERWATER) \
mud.h:3294:				|| ((ch)->in_room->sector_type == SECT_OCEANFLOOR \
mud.h:3295:				|| (ch)->in_room->sector_type == SECT_LAVA))
mud.h:3316:				IS_SET(ch->in_room->room_flags, ROOM_SILENCE)))
mud_prog.c:353:      return mprog_veval( ( ( room->area->high_economy > 0 ) ? 1000000000 : 0 ) 
mud_prog.c:354:                           +room->area->low_economy, opr, atoi( rval ), mob );
mud_prog.c:386:            if( tmob->in_room->area == mob->in_room->area )
mud_prog.c:414:      for( oMob = mob->in_room->first_person; oMob; oMob = oMob->next_in_room )
mud_prog.c:487:    for ( pObj = mob->in_room->first_content; pObj;
mud_prog.c:495:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
mud_prog.c:529:    for ( pObj = mob->in_room->first_content; pObj;
mud_prog.c:537:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
mud_prog.c:561:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
mud_prog.c:590:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
mud_prog.c:908:         return mprog_veval( chkchar->in_room->vnum, opr, atoi( rval ), mob );
mud_prog.c:915:         return mprog_veval( chkchar->was_in_room->vnum, opr, atoi( rval ), mob );
mud_prog.c:920:         return IS_SET( chkchar->in_room->room_flags, ROOM_NO_RECALL ) ? TRUE : FALSE;
mud_prog.c:1163:      for( ch = mob->in_room->first_person; ch; ch = ch->next_in_room )
mud_prog.c:1178:         if( ( !IS_NPC( ch ) ) && ch->in_room->area == anchor->in_room->area )
mud_prog.c:1190:      room = get_room_index( rvnum ? rvnum : mob->in_room->vnum );
mud_prog.c:1191:      for( tch = room ? room->first_person : NULL; tch; tch = tch->next_in_room )
mud_prog.c:1203:      room = get_room_index( rvnum ? rvnum : mob->in_room->vnum );
mud_prog.c:1204:      for( tch = room ? room->first_person : NULL; tch; tch = tch->next_in_room )
mud_prog.c:1216:      room = get_room_index( rvnum ? rvnum : mob->in_room->vnum );
mud_prog.c:1217:      for( tch = room ? room->first_person : NULL; tch; tch = tch->next_in_room )
mud_prog.c:1734:   for( vch = mob->in_room->first_person; vch; vch = vch->next_in_room )
mud_prog.c:2473:      for( vmob = ch->in_room->first_person; vmob; vmob = vmob_next )
mud_prog.c:2528:   for( vmob = actor->in_room->first_person; vmob; vmob = vmob->next_in_room )
mud_prog.c:2572:      for( mprg = room->mudprogs; mprg; mprg = mprg->next )
mud_prog.c:2576:            if( mprg->arglist[0] == '\0'  ||room->mpscriptpos != 0  ||atoi( mprg->arglist ) == time_info.hour )
mud_prog.c:2581:               room->mpscriptpos = supermob->mpscriptpos;
mud_prog.c:2680:   for( vobj = ch->in_room->first_content; vobj; vobj = vobj->next_content )
mud_prog.c:2696:      for( vobj = ch->in_room->first_content; vobj; vobj = vobj->next_content )
mud_prog.c:2984:      supermob->short_descr = QUICKLINK( room->name );
mud_prog.c:2988:    supermob->name        = QUICKLINK(room->name); */ 
mud_prog.c:2989:         supermob->mpscriptpos = room->mpscriptpos;
mud_prog.c:2995:         sprintf( buf, "Room #%d", room->vnum );
mud_prog.c:3007:   for( mprg = mob->in_room->mudprogs; mprg; mprg = mprg->next )
mud_prog.c:3034:      if( room->mpactnum > 0 )
mud_prog.c:3035:         tmp_act->next = room->mpact;
mud_prog.c:3039:      room->mpact = tmp_act;
mud_prog.c:3040:      room->mpact->buf = str_dup( buf );
mud_prog.c:3041:      room->mpact->ch = ch;
mud_prog.c:3042:      room->mpact->obj = obj;
mud_prog.c:3043:      room->mpact->vo = vo;
mud_prog.c:3044:      room->mpactnum++;
mud_prog.c:3151:   for( mprg = room->mudprogs; mprg; mprg = mprg->next )
mud_prog.c:3209:   for( mprg = room->mudprogs; mprg; mprg = mprg->next )
mud_prog.c:3307:      while( ( mpact = room->mpact ) != NULL )
mud_prog.c:3312:         room->mpact = mpact->next;
mud_prog.c:3316:      room->mpact = NULL;
mud_prog.c:3317:      room->mpactnum = 0;
player.c:1108:   if( ch->in_room->pShop && !str_cmp( ch->in_room->pShop->owner, ch->name ) )
player.c:1113:         amount = ch->in_room->pShop->gold;
player.c:1123:      if( amount > ch->in_room->pShop->gold )
player.c:1135:      if( ch->in_room->pShop->gold < 1000000 )
player.c:1136:         salary = ( gp * ch->in_room->pShop->profit_buy ) / 100;
player.c:1138:         salary = ( gp / 100 ) * ch->in_room->pShop->profit_buy;
player.c:1159:      ch->in_room->pShop->gold -= amount;
player.c:1165:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
player.c:1169:   for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
player.c:1266:   if( ch->in_room->pShop && !str_cmp( ch->in_room->pShop->owner, ch->name ) )
player.c:1298:      ch->in_room->pShop->gold += amount;
player.c:1302:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
player.c:1306:   for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
reset.c:23: * of them good.  The most important are your pRoom->contents,
reset.c:24: * pRoom->people, rch->carrying, obj->contains, and pArea->reset_first ..
reset.c:77:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
reset.c:148:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
reset.c:195:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
reset.c:222:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
reset.c:231:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
reset.c:234:                   roomname, room ? room->vnum : 0 );
reset.c:306:   for( rch = pRoom->first_person; rch; rch = rch->next_in_room )
reset.c:311:      add_reset( pRoom, 'M', 1, rch->pIndexData->vnum, rch->pIndexData->count, pRoom->vnum );
reset.c:321:   for( obj = pRoom->first_content; obj; obj = obj->next_content )
reset.c:322:      add_obj_reset( pRoom, 'O', obj, obj->count, pRoom->vnum );
reset.c:327:      for( pexit = pRoom->first_exit; pexit; pexit = pexit->next )
reset.c:341:         add_reset( pRoom, 'D', 0, pRoom->vnum, pexit->vdir, state );
reset.c:351:   for( pReset = room->first_reset; pReset; pReset = pReset_next )
reset.c:355:      UNLINK( pReset, room->first_reset, room->last_reset, next, prev );
reset.c:358:   room->first_reset = room->last_reset = NULL;
reset.c:369:      for( room = area->first_room; room; room = room->next_aroom )
reset.c:391:   if( ch->in_room->area != ch->pcdata->area )
reset.c:396:   if( ch->in_room->first_reset )
reset.c:420:   for( pRoom = pArea->first_room; pRoom; pRoom = pRoom->next_aroom )
reset.c:460:   char *filename = room->area->filename;
reset.c:466:   if( !room->first_reset )
reset.c:472:   if( IS_SET( room->room_flags, ROOM_BURNING ) )
reset.c:474:      if( room->curr_vegetation > 0 && room->curr_water < 30 )
reset.c:475:         room->curr_vegetation -= 25;
reset.c:478:         REMOVE_BIT( room->room_flags, ROOM_BURNING );
reset.c:480:   else if( room->curr_vegetation < room->vegetation ) {
reset.c:481:         room->curr_vegetation++;
reset.c:487:			if( room->curr_water > room->water )
reset.c:489:			room->curr_water--;
reset.c:493:   for( pReset = room->first_reset; pReset; pReset = pReset->next )
reset.c:707:                              if( room->area->nplayer > 0 || !( to_obj = get_obj_type( pObjToIndex ) ) ||
reset.c:739:                                room->vnum );
reset.c:780:               bug( "%s: Object trap found in room %d reset list", __FUNCTION__, room->vnum );
reset.c:790:               if( room->area->nplayer > 0
reset.c:847:   for( room = area->first_room; room; room = room->next_aroom )
reset.c:857:   for( pReset = room->first_reset; pReset; pReset = pReset->next )
reset.c:908:         room->last_mob_reset = pReset;
reset.c:913:         if( !room->last_mob_reset )
reset.c:918:         room->last_obj_reset = pReset;
reset.c:919:         LINK( pReset, room->last_mob_reset->first_reset, room->last_mob_reset->last_reset, next_reset, prev_reset );
reset.c:923:         if( !room->last_obj_reset )
reset.c:928:         LINK( pReset, room->last_obj_reset->first_reset, room->last_obj_reset->last_reset, next_reset, prev_reset );
reset.c:932:         room->last_obj_reset = pReset;
reset.c:939:            pReset->next_reset = room->last_obj_reset->first_reset;
reset.c:940:            if( room->last_obj_reset->first_reset )
reset.c:941:               room->last_obj_reset->first_reset->prev_reset = pReset;
reset.c:942:            room->last_obj_reset->first_reset = pReset;
reset.c:943:            if( !room->last_obj_reset->last_reset )
reset.c:944:               room->last_obj_reset->last_reset = pReset;
reset.c:951:         pReset->next_reset = room->last_obj_reset->first_reset;
reset.c:952:         if( room->last_obj_reset->first_reset )
reset.c:953:            room->last_obj_reset->first_reset->prev_reset = pReset;
reset.c:954:         room->last_obj_reset->first_reset = pReset;
reset.c:955:         if( !room->last_obj_reset->last_reset )
reset.c:956:            room->last_obj_reset->last_reset = pReset;
reset.c:959:   LINK( pReset, room->first_reset, room->last_reset, next, prev );
reset.c:970:   for( pReset = room->first_reset; pReset; pReset = pReset->next )
reset.c:1003:      reset_area( ch->in_room->area );
reset.c:1027:      for( pReset = ch->in_room->first_reset; pReset; pReset = pReset_next )
reset.c:1034:            UNLINK( pReset, ch->in_room->first_reset, ch->in_room->last_reset, next, prev );
reset.c:1096:      pReset = make_reset( 'R', 0, ch->in_room->vnum, vnum, 0 );
reset.c:1098:      pReset->next = ch->in_room->first_reset;
reset.c:1099:      if( ch->in_room->first_reset->prev )
reset.c:1100:         ch->in_room->first_reset->prev = pReset;
reset.c:1101:      ch->in_room->first_reset = pReset;
reset.c:1102:      if( !ch->in_room->last_reset )
reset.c:1103:         ch->in_room->last_reset = pReset;
reset.c:1118:         vnum = ch->in_room->vnum;
reset.c:1185:         tReset->next = ch->in_room->first_reset;
reset.c:1186:         if( ch->in_room->first_reset->prev )
reset.c:1187:            ch->in_room->first_reset->prev = tReset;
reset.c:1188:         ch->in_room->first_reset = tReset;
reset.c:1189:         if( !ch->in_room->last_reset )
reset.c:1190:            ch->in_room->last_reset = tReset;
reset.c:1219:         tReset->next = ch->in_room->first_reset;
reset.c:1220:         if( ch->in_room->first_reset->prev )
reset.c:1221:            ch->in_room->first_reset->prev = tReset;
reset.c:1222:         ch->in_room->first_reset = tReset;
reset.c:1223:         if( !ch->in_room->last_reset )
reset.c:1224:            ch->in_room->last_reset = tReset;
save.c:246:              && ch->was_in_room ) ? ch->was_in_room->vnum : ch->in_room->vnum );
save.c:618:      fprintf( fp, "Room         %d\n", obj->in_room->vnum );
save.c:2380:                    && mob->was_in_room ) ? mob->was_in_room->vnum : mob->in_room->vnum );
save.c:2600:         return obj->carried_by->in_room->vnum;
save.c:2610:      return obj->in_room->vnum;
save.c:2663:             || IS_SET( obj->in_room->room_flags, ROOM_DONATION ) )
shops.c:88:   if( ( matshop = find_matshop( ch->in_room->vnum ) ) != NULL )
shops.c:113:            boost_economy( ch->in_room->area, mat->cost );
shops.c:123:   if( !ch->in_room->pShop )
shops.c:128:   if( !str_cmp( ch->in_room->pShop->owner, "(for sale)" ) )
shops.c:140:         STRFREE( ch->in_room->pShop->owner );
shops.c:141:         ch->in_room->pShop->owner = STRALLOC( ch->name );
shops.c:142:         fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
shops.c:146:   maxgold = ch->in_room->pShop->gold;
shops.c:157:   obj = get_obj_list( ch, arg, ch->in_room->first_content );
shops.c:163:   cost = ( get_cost( ch, ch->in_room->pShop, obj, TRUE ) * noi );
shops.c:211:      ch->in_room->pShop->gold += cost;
shops.c:216:      if( str_cmp( ch->in_room->pShop->owner, "Keolah" ) )
shops.c:223:            fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
shops.c:283:   if( ( matshop = find_matshop( ch->in_room->vnum ) ) != NULL )
shops.c:301:   if( !ch->in_room->pShop )
shops.c:307:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
shops.c:311:           &&( cost = get_cost( ch, ch->in_room->pShop, obj, TRUE ) ) > 0 
shops.c:318:         gp = get_cost( ch, ch->in_room->pShop, obj, TRUE );
shops.c:351:   if( !ch->in_room->pShop )
shops.c:362:   if( !str_cmp( arg, "shop" )  &&!str_cmp( ch->name, ch->in_room->pShop->owner ) )
shops.c:368:      STRFREE( ch->in_room->pShop->owner );
shops.c:369:      ch->in_room->pShop->owner = STRALLOC( "(for sale)" );
shops.c:370:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
shops.c:403:      if( ( cost = get_cost( ch, ch->in_room->pShop, obj, FALSE ) ) <= 0 )
shops.c:409:      if( ch->in_room->pShop->type != -1  &&ch->in_room->pShop->type != obj->item_type )
shops.c:414:      if( ch->in_room->pShop->flag != -1  &&!xIS_SET( obj->extra_flags, ch->in_room->pShop->flag ) )
shops.c:420:      if( !str_cmp( ch->in_room->pShop->owner, ch->name ) )
shops.c:428:      else if( ch->in_room->pShop->gold < obj->cost  &&str_cmp( ch->in_room->pShop->owner, "Keolah" ) )
shops.c:434:      gp = get_cost( ch, ch->in_room->pShop, obj, FALSE );
shops.c:443:      ch->in_room->pShop->gold -= cost;
shops.c:480:            if( ( cost = get_cost( ch, ch->in_room->pShop, obj, FALSE ) ) <= 0 )
shops.c:482:            if( ch->in_room->pShop->type != -1  &&ch->in_room->pShop->type != obj->item_type )
shops.c:484:            if( ch->in_room->pShop->flag != -1  &&!xIS_SET( obj->extra_flags, ch->in_room->pShop->flag ) )
shops.c:486:            if( ch->in_room->pShop->gold < obj->cost 
shops.c:487:                  &&str_cmp( ch->in_room->pShop->owner, "Keolah" )  &&str_cmp( ch->in_room->pShop->owner, ch->name ) )
shops.c:491:            cost = get_cost( ch, ch->in_room->pShop, obj, FALSE );
shops.c:492:            if( str_cmp( ch->in_room->pShop->owner, ch->name ) )
shops.c:495:               ch->in_room->pShop->gold -= cost;
shops.c:503:         if( !str_cmp( ch->in_room->pShop->owner, ch->name ) )
shops.c:543:   if( !ch->in_room->pShop )
shops.c:554:   if( ( gp = get_cost( ch, ch->in_room->pShop, obj, FALSE ) ) <= 0 )
shops.c:691:      vnum = ch->in_room->vnum;
shops.c:704:   if( room->pShop )
shops.c:719:   room->pShop = shop;
shops.c:757:   if( !( shop = room->pShop ) )
shops.c:776:      fold_area( room->area, room->area->filename, FALSE );
shops.c:797:      fold_area( room->area, room->area->filename, FALSE );
shops.c:828:      fold_area( room->area, room->area->filename, FALSE );
shops.c:852:      fold_area( room->area, room->area->filename, FALSE );
shops.c:878:      fold_area( room->area, room->area->filename, FALSE );
shops.c:897:      room->pShop = NULL;
shops.c:900:      ch_printf( ch, "Shop %d is now Shop %d.\n\r", room->vnum, shop->room );
shops.c:901:      fold_area( room->area, room->area->filename, FALSE );
shops.c:938:         if( !tmproom || room->area != tmproom->area )
shops.c:939:            fold_area( room->area, room->area->filename, FALSE );
shops.c:957:      vnum = ch->in_room->vnum;
shops.c:971:   if( !room->pShop )
shops.c:977:   shop = room->pShop;
shops.c:980:      ch_printf( ch, "Room: [%d] %s\n\r", shop->room, room->name );
shops.c:982:      ch_printf( ch, "Stats for %s...\n\r", room->name );
skills.c:393:            ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:401:         ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:428:      ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:1693:         if( !ch->in_room->first_content )
skills.c:1699:         for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
skills.c:1739:   if( !ch->in_room->first_content )
skills.c:1745:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
skills.c:1835:            switch ( ch->in_room->sector_type )
skills.c:1919:   startobj = ch->in_room->first_content;
skills.c:1937:   if( !found && number_range( 1, 300 ) < ch->in_room->curr_resources 
skills.c:1938:        +get_curr_per( ch ) + ch->pcdata->noncombat[SK_MINING]  &&ch->in_room->curr_resources > 0 )
skills.c:1943:         if( ( ( !shovel && number_percent(  ) < 50 ) || ( shovel ) ) && ( material->sector == ch->in_room->sector_type )
skills.c:1950:               if( xIS_SET( material->extra_flags, ITEM_MAGIC )  &&ch->in_room->area->weather->mana < -100 )
skills.c:1956:               ch->in_room->curr_resources--;
skills.c:1969:      if( ch->in_room->curr_resources < 10 )
skills.c:2046:      startobj = ch->in_room->first_content;
skills.c:2101:   if( number_range( 1, 300 ) < ch->in_room->curr_vegetation 
skills.c:2102:        +get_curr_per( ch ) + ch->pcdata->noncombat[SK_NATURE]  &&ch->in_room->curr_vegetation > 0 )
skills.c:2107:         if( ingred->sector != ch->in_room->sector_type )
skills.c:2109:         if( ingred->moisture > ch->in_room->curr_water )
skills.c:2111:         if( ingred->elevation > ch->in_room->curr_elevation )
skills.c:2113:         if( ingred->precip > 0  &&ingred->precip < ch->in_room->area->weather->precip )
skills.c:2115:         if( ingred->precip < 0  &&ingred->precip > ch->in_room->area->weather->precip )
skills.c:2117:         if( ingred->temp > 0  &&ingred->temp < ch->in_room->area->weather->temp )
skills.c:2119:         if( ingred->temp < 0  &&ingred->temp > ch->in_room->area->weather->temp )
skills.c:2121:         if( ingred->mana > 0  &&ingred->mana < ch->in_room->area->weather->mana )
skills.c:2135:            ch->in_room->curr_vegetation--;
skills.c:2181:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
skills.c:2620:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
skills.c:2621:      if( pexit->to_room->area != ch->in_room->area )
skills.c:2622:         fold_area( pexit->to_room->area, pexit->to_room->area->filename, FALSE );
skills.c:2659:      for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
skills.c:3146:   victim->in_room->area->weather->mana += 1;
skills.c:3385:      ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:3395:      ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:3418:   ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:3475:   for( fire = ch->in_room->first_content; fire; fire = fire->next_content )
skills.c:3509:      ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:3519:      ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:3542:   ch->in_room->area->weather->mana += ( int )mana / 10;
skills.c:3587:             * victim->in_room->vnum );
skills.c:3677:      send_to_char( ch->in_room->name, ch );
skills.c:3679:      show_list_to_char( ch->in_room->first_content, ch, FALSE, FALSE );
skills.c:3680:      show_char_to_char( ch->in_room->first_person, ch );
skills.c:3681:      switch ( ch->in_room->sector_type )
skills.c:3767:      switch ( ch->in_room->sector_type )
skills.c:3848:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
skills.c:3999:      for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
skills.c:4016:      if( ch->in_room->curr_water > 50 )
skills.c:4020:         for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
skills.c:4037:      for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
skills.c:4071:      if( ch->in_room->area->weather->temp > -200  &&ch->curr_talent[TAL_FROST] < 20 )
special.c:157:   for( victim = ch->in_room->first_person; victim; victim = v_next )
special.c:344:   for( corpse = ch->in_room->first_content; corpse; corpse = c_next )
special.c:374:   for( victim = ch->in_room->first_person; victim; victim = v_next )
special.c:400:   for( trash = ch->in_room->first_content; trash; trash = trash_next )
special.c:443:   for( victim = ch->in_room->first_person; victim; victim = v_next )
special.c:476:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
special.c:522:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
special.c:541:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
special.c:559:      if( material->sector != ch->in_room->sector_type )
special.c:563:      if( xIS_SET( material->extra_flags, ITEM_MAGIC )  &&ch->in_room->area->weather->mana < -100 )
special.c:584:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
special.c:603:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
special.c:621:      if( ingred->sector != ch->in_room->sector_type )
special.c:623:      if( ingred->moisture > ch->in_room->curr_water )
special.c:625:      if( ingred->elevation > ch->in_room->curr_elevation )
special.c:627:      if( ingred->precip > 0  &&ingred->precip < ch->in_room->area->weather->precip )
special.c:629:      if( ingred->precip < 0  &&ingred->precip > ch->in_room->area->weather->precip )
special.c:631:      if( ingred->temp > 0  &&ingred->temp < ch->in_room->area->weather->temp )
special.c:633:      if( ingred->temp < 0  &&ingred->temp > ch->in_room->area->weather->temp )
special.c:635:      if( ingred->mana > 0  &&ingred->mana < ch->in_room->area->weather->mana )
talent.c:186:         ||( IS_SET( ch->in_room->room_flags, ROOM_NO_SUMMON ) 
talent.c:188:                 ||IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) 
talent.c:189:                 ||IS_SET( ch->in_room->runes, RUNE_WARD ) ) ) 
talent.c:190:         ||( IS_SET( victim->in_room->room_flags, ROOM_NO_ASTRAL ) 
talent.c:192:                 ||IS_SET( victim->in_room->area->flags, AFLAG_NOBYPASS ) 
talent.c:193:                 ||IS_SET( victim->in_room->runes, RUNE_WARD ) ) ) 
talent.c:195:             &&IS_SET( victim->in_room->room_flags, ROOM_NO_DREAM ) ) 
talent.c:320:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
talent.c:360:   ch->in_room->area->weather->mana += ( int )i / 100;
talent.c:692:      if( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) )
talent.c:700:      location = get_room_index( ch->in_room->area->hi_soft_range );
talent.c:748:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL )  &&ch->curr_talent[TAL_MOTION] < 80 )
talent.c:797:      if( ch->in_room->curr_vegetation < 10 )
talent.c:802:      if( ch->in_room->curr_water > 30 )
talent.c:810:      SET_BIT( ch->in_room->room_flags, ROOM_BURNING );
talent.c:841:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:863:   if( ( ch->curr_talent[TAL_EARTH] < 20 && !IS_NPC( ch ) )  ||IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
talent.c:870:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:873:      if( IS_AFFECTED( victim, AFF_FLYING )  &&!IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
talent.c:892:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:927:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:969:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1002:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1050:   if( ch->in_room->curr_water > 60 )
talent.c:1057:         victim = ch->in_room->first_person;
talent.c:1070:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
talent.c:1071:         ||ch->in_room->area->weather->precip < 100  ||ch->in_room->area->weather->temp < 100 )
talent.c:1095:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
talent.c:1102:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1105:      magic_damage( victim, ch, TALENT( ch, TAL_WIND ) + TALENT( ch, TAL_FIRE ) + ch->in_room->area->weather->temp,
talent.c:1118:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
talent.c:1125:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1128:      magic_damage( victim, ch, TALENT( ch, TAL_WIND ) + TALENT( ch, TAL_CATALYSM ) + ch->in_room->area->weather->mana,
talent.c:1140:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
talent.c:1161:   if( ch->in_room->curr_water >= 100 )
talent.c:1168:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1203:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
talent.c:1204:         ||ch->in_room->area->weather->precip < 50  ||ch->in_room->area->weather->temp > -100 )
talent.c:1211:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1226:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
talent.c:1227:         ||ch->in_room->area->weather->precip > 0 
talent.c:1349:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
talent.c:1582:   if( IS_SET( ch->in_room->room_flags, ROOM_SILENCE )  ||( ch->curr_talent[TAL_SPEECH] < 1 && !IS_NPC( ch ) ) )
talent.c:1591:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1621:   if( IS_UNDERWATER( ch ) || ch->in_room->curr_water > 30 )
talent.c:1650:   if( ch->in_room->curr_water >= 100 )
talent.c:1661:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1762:   if( ch->in_room->curr_water >= 100 )
talent.c:1774:                   ( TALENT( ch, TAL_WIND ) * 2 + ch->in_room->area->weather->wind ) / 3, MAG_WIND, TAL_WIND, FALSE );
talent.c:1790:                   ( TALENT( ch, TAL_EARTH ) * 2 + ch->in_room->curr_vegetation ) / 3, MAG_EARTH, TAL_EARTH, FALSE );
talent.c:1840:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR )  ||( ch->curr_talent[TAL_WATER] < 1 && !IS_NPC( ch ) ) )
talent.c:1845:   if( ch->curr_talent[TAL_WATER] > 10  &&ch->in_room->curr_water < 100 )
talent.c:1849:      //if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
talent.c:1850:         ch->in_room->curr_water += TALENT( ch, TAL_WATER ) / 10;
talent.c:1854:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
talent.c:1870:                   ( TALENT( ch, TAL_WATER ) * 2 + ch->in_room->curr_water ) / 3, MAG_WATER, TAL_WATER, FALSE );
talent.c:2007:                      in_obj->carried_by->in_room->name );
talent.c:2011:                      in_obj->carried_by->in_room->name, in_obj->carried_by->in_room->area->name );
talent.c:2021:            sprintf( buf, "%s is in %s.\n\r", obj_short( obj ), in_obj->in_room->name );
talent.c:2024:            sprintf( buf, "%s is in %s, in %s.\n\r", obj_short( obj ), in_obj->in_room->name,
talent.c:2025:                      in_obj->in_room->area->name );
talent.c:2055:            pager_printf( ch, "%s is in %s\n\r", PERS( victim, ch ), victim->in_room->name );
talent.c:2066:            pager_printf( ch, "%s is in %s, in %s\n\r", PERS( victim, ch ), victim->in_room->name,
talent.c:2067:                           victim->in_room->area->name );
talent.c:2080:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL )  &&ch->curr_talent[TAL_MOTION] < 80 )
talent.c:2288:   if( IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) )
talent.c:2319:      sprintf( buf, "%s summoned %s to %s (%d).", ch->name, victim->name, ch->in_room->name, ch->in_room->vnum );
talent.c:3146:      ch->in_room->runes = 0;
talent.c:3312:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
talent.c:3321:      SET_BIT( ch->in_room->runes, RUNE_LIFE );
talent.c:3328:      SET_BIT( ch->in_room->runes, RUNE_DISTRACT );
talent.c:3335:      SET_BIT( ch->in_room->runes, RUNE_WARD );
talent.c:3792:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_DREAM ) 
talent.c:3794:                ||( IS_SET( ch->in_room->runes, RUNE_WARD )  &&ch->curr_talent[TAL_DREAM] < 200 ) ) )
talent.c:3909:      if( IS_SET( victim->in_room->room_flags, ROOM_NO_DREAM ) 
talent.c:3911:                ||( IS_SET( victim->in_room->runes, RUNE_WARD )  &&ch->curr_talent[TAL_DREAM] < 200 ) ) )
talent.c:4041:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
talent.c:5160:         if( IS_SET( obj->in_room->room_flags, ROOM_NOSUPPLICATE ) 
talent.c:5214:      if( ch->curr_talent[TAL_MOTION] < 100  &&( IS_SET( ch->in_room->room_flags, ROOM_NO_ASTRAL )  ||IS_NPC( victim ) ) )
talent.c:5558:         if( tar == ECHOTAR_AREA  &&ch->in_room->area != d->character->in_room->area )
talent.c:5562:         if( tar == ECHOTAR_WORLD  &&str_cmp( ch->in_room->area->resetmsg, d->character->in_room->area->resetmsg ) )
talent.c:5697:      if( ch->in_room->area->weather->temp > ch->curr_talent[TAL_FROST] * 10 - 400 )
talent.c:5727:      if( ch->in_room->curr_vegetation < 100 - ch->curr_talent[TAL_EARTH] )
talent.c:5788:   for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
track.c:51:   for( trail = ch->in_room->first_trail; trail; trail = trail->next )
track.c:196:         for( pexit = queue_head->room->first_exit; pexit; pexit = pexit->next )
update.c:130:   if( IS_SET( ch->in_room->runes, RUNE_LIFE ) )
update.c:276:      i = number_range( 0, ch->in_room->area->weather->mana * 10 );
update.c:277:   ch->in_room->area->weather->mana -= ( int )i / 10;
update.c:336:      if( IS_SET( ch->in_room->runes, RUNE_LIFE ) )
update.c:636:         bug( "Mob %d in room %d was not set with the NPC flag!  Fixing...", ch->pIndexData->vnum, ch->in_room->vnum );
update.c:669:             &&( !ch->in_room || !ch->in_room->area  ||ch->in_room->area->nplayer == 0 ) )
update.c:680:         if( ch->in_room->first_person )
update.c:719:             &&ch->home_room != ch->in_room->vnum 
update.c:722:             &&!ch->last_hit  &&!IS_AFFECTED( ch, AFF_CURSE )  &&!IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) )
update.c:763:             * ch->in_room->name );
update.c:776:      if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) 
update.c:786:         if( !ch->in_room->area )
update.c:789:         bug( "Room %d for mob %s is not associated with an area?", ch->in_room->vnum, ch->name );
update.c:791:            bug( "Was in room %d", ch->was_in_room->vnum );
update.c:799:         if( ch->in_room->area->nplayer > 0 )
update.c:832:             &&!IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) 
update.c:833:             &&( !xIS_SET( ch->act, ACT_STAY_AREA ) || pexit->to_room->area == ch->in_room->area ) )
update.c:847:               &&( ( pexit->to_room->sector_type == SECT_WATER_NOSWIM ) 
update.c:848:                   ||( pexit->to_room->sector_type == SECT_WATER_SWIM ) 
update.c:849:                   ||IS_SET( pexit->to_room->room_flags, ROOM_NOFLOOR ) ) )
update.c:851:         if( ( pexit->to_room->sector_type == SECT_WATER_NOSWIM 
update.c:852:                 ||pexit->to_room->sector_type == SECT_WATER_SWIM 
update.c:853:                 ||pexit->to_room->sector_type == SECT_UNDERWATER 
update.c:854:                 ||pexit->to_room->sector_type == SECT_OCEANFLOOR ) 
update.c:857:         if( !pexit->to_room->sector_type == SECT_WATER_NOSWIM 
update.c:858:               &&!pexit->to_room->sector_type == SECT_WATER_SWIM 
update.c:859:               &&!pexit->to_room->sector_type == SECT_UNDERWATER 
update.c:860:               &&!pexit->to_room->sector_type == SECT_OCEANFLOOR 
update.c:863:         if( pexit->to_room->sector_type == SECT_LAVA  &&!IS_SET( ch->immune, RIS_FIRE ) )
update.c:889:             &&!IS_SET( pexit->exit_info, EX_CLOSED )  &&!IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) )
update.c:898:         if( ch->in_room && ch->in_room->area->weather->precip > 10  &&!IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
update.c:901:         for( pobj = ch->in_room->first_content; pobj; pobj = pobj->next_content )
update.c:1060:         if( ch->in_room->first_content && IS_SET( ch->xflags, PART_HANDS ) )
update.c:1069:            for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
update.c:1258:      if( !IS_NPC( ch ) && ch->in_room->vnum == 6 && ch->pcdata->release_date <= current_time )
update.c:1486:      if( obj->in_room && obj->in_room->area->nplayer > 0 )
update.c:1679:      else if( obj->in_room  &&( rch = obj->in_room->first_person ) != NULL  &&!IS_OBJ_STAT( obj, ITEM_BURIED ) )
update.c:1689:            for( victim = rch->in_room->first_person; victim; victim = nextinroom )
update.c:1756:                  &&!IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) 
update.c:1757:                  &&( !xIS_SET( ch->act, ACT_STAY_AREA )  ||pexit->to_room->area == ch->in_room->area ) )
update.c:1796:      if( ( ch->in_room && ch->in_room->sector_type == SECT_UNDERWATER ) 
update.c:1797:            ||( ch->in_room && ch->in_room->sector_type == SECT_OCEANFLOOR ) )
update.c:1825:      if( ch->in_room  &&( ch->in_room->sector_type == SECT_WATER_NOSWIM ) )
update.c:1832:              &&( ch->in_room->water > ch->height - 20 ) 
update.c:1834:              &&!( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) ) )
update.c:1933:      for( ch = wch->in_room->first_person; ch; ch = ch_next )
update.c:2023:      for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
update.c:2239:   for( pexit = fromRoom->first_exit; pexit; pexit = pexit->next )
update.c:2249:      bug( "remove_portal: portal not found in room %d!", fromRoom->vnum );
update.c:2482:            && !NO_WEATHER_SECT( d->character->in_room->sector_type ) && IS_AWAKE( d->character ) )
update.c:2486:         weath = d->character->in_room->area->weather;
update.c:2491:         if( ( i = moon_visible( d->character->in_room->area, MOON_BLOOD ) ) 
update.c:2492:              &&d->character->in_room->area->weather->precip > 100 )
update.c:2911:               weath = d->character->in_room->area->weather;
update.c:2946:            if( d->connected == CON_PLAYING && !str_cmp( d->character->in_room->area->resetmsg, moon->world )
update.c:2960:            if( d->connected == CON_PLAYING && !str_cmp( d->character->in_room->area->resetmsg, moon->world )
water:1:act_comm.c:83:   if( IS_SET( room->room_flags, ROOM_SILENCE ) )
water:2:act_comm.c:419:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
water:3:act_comm.c:427:   if( ch->in_room && IS_SET( ch->in_room->room_flags, ROOM_AMPLIFY ) )
water:4:act_comm.c:436:      for( pexit = was_in_room->first_exit; pexit; pexit = pexit->next )
water:5:act_comm.c:557:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
water:6:act_comm.c:609:      ch_printf( victim, "&W^z%s beeps you from '%s'^x&w\a\n\r", ch->name, ch->in_room->name );
water:7:act_comm.c:658:   if( ( !IS_AWAKE( victim ) ) || ( !IS_NPC( victim ) && IS_SET( victim->in_room->room_flags, ROOM_SILENCE ) ) )
water:8:act_comm.c:681:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
water:9:act_comm.c:781:   for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
water:10:act_comm.c:789:   if( IS_SET( ch->in_room->room_flags, ROOM_LOGSPEECH ) )
water:11:act_comm.c:941:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_QUIT ) && IS_SET( ch->pcdata->permissions, PERMIT_BUILD ) )
water:12:act_comm.c:962:   if( IS_SET( ch->in_room->area->flags, AFLAG_NOQUIT ) && !ch->pcdata->permissions )
water:13:act_comm.c:995:   sprintf( log_buf, "%s has quit in %s (%d).", ch->name, ch->in_room->name, ch->in_room->vnum );
water:14:act_comm.c:1482:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:15:act_comm.c:1589:   for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
water:16:act_comm.c:1622:   for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
water:17:act_comm.c:1687:   for( trail = ch->in_room->first_trail; trail; trail = trail->next )
water:18:act_info.c:675:         else if( ( victim->in_room->sector_type == SECT_UNDERWATER )
water:19:act_info.c:680:         else if( ( victim->in_room->sector_type == SECT_OCEANFLOOR )
water:20:act_info.c:942:      show_char_to_char( ch->in_room->first_person, ch );
water:21:act_info.c:961:         ch_printf( ch, "[%d] ", ch->in_room->vnum );
water:22:act_info.c:977:      else if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
water:23:act_info.c:1011:         send_to_char( ch->in_room->name, ch );
water:24:act_info.c:1021:         if( ch->in_room->sector_type == SECT_LAVA )
water:25:act_info.c:1023:         else if( ch->in_room->sector_type == SECT_DUNNO )
water:26:act_info.c:1035:         switch ( ch->in_room->sector_type )
water:27:act_info.c:1065:         switch ( ch->in_room->sector_type )
water:28:act_info.c:1104:      if( !ch->in_room->pShop )
water:29:act_info.c:1105:         show_list_to_char( ch->in_room->first_content, ch, FALSE, FALSE );
water:30:act_info.c:1108:      show_char_to_char( ch->in_room->first_person, ch );
water:31:act_info.c:1193:            for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:32:act_info.c:1243:   if( ( pdesc = get_extra_descr( arg1, ch->in_room->first_extradesc ) ) != NULL )
water:33:act_info.c:1386:   for( obj = ch->in_room->last_content; obj; obj = obj->prev_content )
water:34:act_info.c:1767:   for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:35:act_info.c:1777:               sprintf( buf + strlen( buf ), "[%d]-", pexit->to_room->vnum );
water:36:act_info.c:1789:                        pexit->to_room->vnum,
water:37:act_info.c:1791:                        ? "&O#&w" : "&w", capitalize( dir_name[pexit->vdir] ), pexit->to_room->name );
water:38:act_info.c:1795:                        ? "&O#&w" : "&w", capitalize( dir_name[pexit->vdir] ), pexit->to_room->name );
water:39:act_info.c:1884:   AREA_DATA *tarea = ch->in_room->area;
water:40:act_info.c:1893:      temp = ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit;
water:41:act_info.c:1894:      precip = ( ch->in_room->area->weather->precip + 3 * weath_unit - 1 ) / weath_unit;
water:42:act_info.c:1895:      wind = ( ch->in_room->area->weather->wind + 3 * weath_unit - 1 ) / weath_unit;
water:43:act_info.c:1896:      mana = ( ch->in_room->area->weather->mana + 3 * weath_unit - 1 ) / weath_unit;
water:44:act_info.c:1934:            if( ( moon->up ) && ( !str_cmp( moon->world, ch->in_room->area->resetmsg ) ) )
water:45:act_info.c:2065:   temp = ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit;
water:46:act_info.c:2066:   precip = ( ch->in_room->area->weather->precip + 3 * weath_unit - 1 ) / weath_unit;
water:47:act_info.c:2067:   wind = ( ch->in_room->area->weather->wind + 3 * weath_unit - 1 ) / weath_unit;
water:48:act_info.c:2068:   mana = ( ch->in_room->area->weather->mana + 3 * weath_unit - 1 ) / weath_unit;
water:49:act_info.c:2102:         if( ( moon->up ) && ( !str_cmp( moon->world, ch->in_room->area->resetmsg ) ) )
water:50:act_info.c:2383:      ch_printf( ch, "You are in %s.", ch->in_room->name );
water:51:act_info.c:2395:          && ( victim->in_room->area == ch->in_room->area
water:52:act_info.c:2397:          && ( !str_cmp( victim->in_room->area->resetmsg,
water:53:act_info.c:2398:                         ch->in_room->area->resetmsg )
water:54:act_info.c:2400:          && ( !IS_SET( victim->in_room->room_flags, ROOM_NO_ASTRAL )
water:55:act_info.c:2405:         pager_printf_color( ch, "%-20s  ", victim->in_room->name );
water:56:act_info.c:2406:         pager_printf_color( ch, "%-15s  ", victim->in_room->area->name );
water:57:act_info.c:2407:         pager_printf_color( ch, "%-10s\n\r", victim->in_room->area->resetmsg );
water:58:act_info.c:2555:      for( mob = ch->in_room->first_person; mob; mob = mob->next_in_room )
water:59:act_move.c:239:   int sector = room->sector_type;
water:60:act_move.c:242:   if( room->name )
water:61:act_move.c:243:      STRFREE( room->name );
water:62:act_move.c:244:   if( room->description )
water:63:act_move.c:245:      STRFREE( room->description );
water:64:act_move.c:247:   room->name = STRALLOC( "In a virtual room" );
water:65:act_move.c:248:   room->description = STRALLOC( "You're on a pathway.\n\r" );
water:66:act_move.c:253:   room->name = STRALLOC( sect_names[sector][0] );
water:67:act_move.c:361:   room->description = STRALLOC( buf2 );
water:68:act_move.c:377:         vroom_hash[hash] = room->next;
water:69:act_move.c:385:         room_next = room->next;
water:70:act_move.c:386:         if( !room->first_person && !room->first_content )
water:71:act_move.c:445:   for( xit = room->first_exit; xit; xit = xit->next )
water:72:act_move.c:464:   for( xit = room->first_exit; xit; xit = xit->next )
water:73:act_move.c:484:   for( cnt = 0, xit = room->first_exit; xit; xit = xit->next )
water:74:act_move.c:497:   if( ch->in_room->vnum - ch->in_room->area->low_r_vnum > 125 )
water:75:act_move.c:503:      if( xarea->index == ch->in_room->area->low_soft_range )
water:76:act_move.c:505:         if( xIS_SET( xarea->rooms, ch->in_room->vnum - ch->in_room->area->low_r_vnum ) )
water:77:act_move.c:507:         xSET_BIT( xarea->rooms, ch->in_room->vnum - ch->in_room->area->low_r_vnum );
water:78:act_move.c:515:   xarea->index = ch->in_room->area->low_soft_range;
water:79:act_move.c:519:   xSET_BIT( xarea->rooms, ch->in_room->vnum - ch->in_room->area->low_r_vnum );
water:80:act_move.c:576:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) && CAN_GO( ch, DIR_DOWN ) )
water:81:act_move.c:616:               bug( "Falling (in a loop?) more than 80 rooms: vnum %d", ch->in_room->vnum );
water:82:act_move.c:655:   int virtual = in_room->virtual;
water:83:act_move.c:664:      serial = in_room->vnum;
water:84:act_move.c:665:      roomnum = in_room->tele_vnum;
water:85:act_move.c:682:      int r1 = in_room->vnum;
water:86:act_move.c:698:   for( room = vroom_hash[hash]; room; room = room->next )
water:87:act_move.c:699:      if( room->vnum == serial && room->tele_vnum == roomnum )
water:88:act_move.c:707:      room->area = in_room->area;
water:89:act_move.c:708:      room->vnum = serial;
water:90:act_move.c:709:      room->virtual = virtual;
water:91:act_move.c:710:      room->tele_vnum = roomnum;
water:92:act_move.c:711:      room->sector_type = in_room->sector_type;
water:93:act_move.c:712:      room->room_flags = in_room->room_flags;
water:94:act_move.c:714:      room->next = vroom_hash[hash];
water:95:act_move.c:804:          && ch->in_room->sector_type != SECT_WATER_SWIM
water:96:act_move.c:805:          && ch->in_room->sector_type != SECT_WATER_NOSWIM
water:97:act_move.c:806:          && ch->in_room->sector_type != SECT_UNDERWATER && ch->in_room->sector_type != SECT_OCEANFLOOR )
water:98:act_move.c:867:       && ( IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) || IS_SET( pexit->to_room->runes, RUNE_DISTRACT ) ) )
water:99:act_move.c:873:   if( IS_SET( pexit->to_room->room_flags, ROOM_NO_DREAM )
water:100:act_move.c:922:         if( to_room->sector_type == SECT_INSIDE )
water:101:act_move.c:927:         if( !IS_SET( ch->in_obj->value[2], VEHICLE_SPACE ) && to_room->sector_type == SECT_DUNNO )
water:102:act_move.c:932:         if( ( to_room->sector_type == SECT_UNDERWATER
water:103:act_move.c:933:               || to_room->sector_type == SECT_OCEANFLOOR ) && !IS_SET( ch->in_obj->value[2], VEHICLE_UNDERWATER ) )
water:104:act_move.c:940:            if( to_room->sector_type == SECT_SWAMP )
water:105:act_move.c:945:            if( ( to_room->sector_type == SECT_MOUNTAIN
water:106:act_move.c:946:                  || to_room->sector_type == SECT_HILLS
water:107:act_move.c:947:                  || to_room->sector_type == SECT_FOREST ) && !IS_SET( ch->in_obj->value[2], VEHICLE_CLIMB ) )
water:108:act_move.c:952:            else if( ( to_room->sector_type == SECT_DESERT
water:109:act_move.c:953:                       || to_room->sector_type == SECT_BEACH ) && !IS_SET( ch->in_obj->value[2], VEHICLE_SAND ) )
water:110:act_move.c:958:            else if( ( to_room->sector_type == SECT_WATER_SWIM
water:111:act_move.c:959:                       || to_room->sector_type == SECT_WATER_NOSWIM ) && !IS_SET( ch->in_obj->value[2], VEHICLE_SURFACE ) )
water:112:act_move.c:964:            else if( ( to_room->sector_type == SECT_ICE
water:113:act_move.c:965:                       || IS_SET( to_room->room_flags, ROOM_SLIPPERY ) ) && !IS_SET( ch->in_obj->value[2], VEHICLE_ICE ) )
water:114:act_move.c:970:            else if( ( to_room->sector_type == SECT_CITY
water:115:act_move.c:971:                       || to_room->sector_type == SECT_FIELD ) && !IS_SET( ch->in_obj->value[2], VEHICLE_LAND ) )
water:116:act_move.c:977:         if( to_room->sector_type == SECT_UNDERGROUND && !IS_SET( ch->in_obj->value[2], VEHICLE_UNDERGROUND ) )
water:117:act_move.c:984:      if( ( in_room->sector_type == SECT_AIR
water:118:act_move.c:985:            || to_room->sector_type == SECT_AIR || IS_SET( pexit->exit_info, EX_FLY ) ) && pexit->vdir == 4 )
water:119:act_move.c:1112:            move = movement_loss[UMIN( SECT_MAX - 1, in_room->sector_type )];
water:120:act_move.c:1125:            move = encumbrance( ch, movement_loss[UMIN( SECT_MAX - 1, in_room->sector_type )] );
water:121:act_move.c:1164:   if( !ch->in_obj && ( ch->in_room->sector_type == SECT_UNDERWATER || ch->in_room->sector_type == SECT_OCEANFLOOR ) )
water:122:act_move.c:1227:   if( IS_SET( ch->in_room->room_flags, ROOM_SLIPPERY ) && !IS_AFFECTED( ch, AFF_FLYING ) && !fall && !ch->in_obj )
water:123:act_move.c:1254:   if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) && !IS_AFFECTED( ch, AFF_FLYING ) && !fall )
water:124:act_move.c:1267:   for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
water:125:act_move.c:1377:   trail = ch->in_room->first_trail;
water:126:act_move.c:1388:         UNLINK( trail, ch->in_room->first_trail, ch->in_room->last_trail, next, prev );
water:127:act_move.c:1441:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:128:act_move.c:1461:      for( rch = ch->in_room->first_person; rch; rch = rch->next )
water:129:act_move.c:1539:   trail = ch->in_room->first_trail;
water:130:act_move.c:1554:      LINK( new_trail, ch->in_room->first_trail, ch->in_room->last_trail, next, prev );
water:131:act_move.c:1592:      for( fch = from_room->first_person; fch; fch = fch->next_in_room )
water:132:act_move.c:1595:      for( fch = from_room->first_person; fch && ( count < chars ); fch = nextinroom )
water:133:act_move.c:1612:   if( ch->in_room->first_content )
water:134:act_move.c:1777:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:135:act_move.c:1897:            for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
water:136:act_move.c:1990:         for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
water:137:act_move.c:2341:            fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:138:act_move.c:2376:            for( rch = to_room->first_person; rch; rch = rch->next_in_room )
water:139:act_move.c:2415:            for( rch = to_room->first_person; rch; rch = rch->next_in_room )
water:140:act_move.c:2442:         for( rch = to_room->first_person; rch; rch = rch->next_in_room )
water:141:act_move.c:2449:      for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
water:142:act_move.c:2522:      obj = get_obj_list( ch, arg, ch->in_room->first_content );
water:143:act_move.c:2567:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
water:144:act_move.c:2588:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
water:145:act_move.c:2608:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
water:146:act_move.c:2628:         if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
water:147:act_move.c:2745:            obj = get_obj_list( ch, arg, ch->in_room->first_content );
water:148:act_move.c:2958:            obj = get_obj_list( ch, arg, ch->in_room->first_content );
water:149:act_move.c:3129:            obj = get_obj_list( ch, arg, ch->in_room->first_content );
water:150:act_move.c:3262:   if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
water:151:act_move.c:3287:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:152:act_move.c:3318:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:153:act_move.c:3324:      if( ch->in_room->sector_type != SECT_INSIDE && IS_OUTSIDE( ch ) )
water:154:act_move.c:3325:         for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:155:act_move.c:3326:            if( pexit->to_room && ( pexit->to_room->sector_type == SECT_INSIDE
water:156:act_move.c:3327:                                    || IS_SET( pexit->to_room->room_flags, ROOM_INDOORS ) ) )
water:157:act_move.c:3339:   obj = get_obj_list( ch, argument, ch->in_room->first_content );
water:158:act_move.c:3395:      for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:159:act_move.c:3401:      if( ch->in_room->sector_type == SECT_INSIDE || !IS_OUTSIDE( ch ) )
water:160:act_move.c:3402:         for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:161:act_move.c:3403:            if( pexit->to_room && pexit->to_room->sector_type != SECT_INSIDE
water:162:act_move.c:3404:                && !IS_SET( pexit->to_room->room_flags, ROOM_INDOORS ) )
water:163:act_move.c:3465:   for( xtmp = room->first_exit; xtmp; xtmp = xtmp->next )
water:164:act_move.c:3485:      for( xit = room->first_exit; xit; xit = xit->next )
water:165:act_move.c:3516:         switch ( room->sector_type )
water:166:act_move.c:3758:/*	if ( destrm && xit->to_room->first_person )
water:167:act_move.c:3760:	    act(AT_PLAIN, destrm, xit->to_room->first_person, NULL, dtxt, TO_CHAR );
water:168:act_move.c:3761:	    act(AT_PLAIN, destrm, xit->to_room->first_person, NULL, dtxt, TO_ROOM );
water:169:act_move.c:3794:      for( obj = room->first_content; obj; obj = obj_next )
water:170:act_move.c:3832:            if( objmsg && room->first_person )
water:171:act_move.c:3834:               act( AT_PLAIN, objmsg, room->first_person, obj, dir_name[xit->vdir], TO_CHAR );
water:172:act_move.c:3835:               act( AT_PLAIN, objmsg, room->first_person, obj, dir_name[xit->vdir], TO_ROOM );
water:173:act_move.c:3837:            if( destob && xit->to_room->first_person )
water:174:act_move.c:3839:               act( AT_PLAIN, destob, xit->to_room->first_person, obj, dtxt, TO_CHAR );
water:175:act_move.c:3840:               act( AT_PLAIN, destob, xit->to_room->first_person, obj, dtxt, TO_ROOM );
water:176:act_move.c:3881:         sprintf( arg, "%d: %s\r\n", slot, ( room ? room->name : "None" ) );
water:177:act_move.c:3912:         ch->pcdata->memorize[ch->recall] = ch->in_room->vnum;
water:178:act_move.c:3971:   if( IS_SET( victim->in_room->room_flags, ROOM_SAFE ) && get_timer( victim, TIMER_SHOVEDRAG ) <= 0 )
water:179:act_move.c:4007:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) && get_timer( ch, TIMER_SHOVEDRAG ) <= 0 )
water:180:act_move.c:4059:      if( ch->in_room->pShop )
water:181:act_move.c:4105:      for( victim = ch->was_in_room->first_person; victim; victim = victim->next_in_room )
water:182:act_move.c:4144:   if( IS_SET( victim->in_room->room_flags, ROOM_SAFE )
water:183:act_obj.c:111:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:184:act_obj.c:252:            if( ch->in_room->pShop )
water:185:act_obj.c:261:            obj = get_obj_list( ch, arg1, ch->in_room->first_content );
water:186:act_obj.c:304:                &&IS_SET( ch->in_room->room_flags, ROOM_STICKY )  &&( !IS_OBJ_STAT( obj, ITEM_HOVER ) ) )
water:187:act_obj.c:335:         if( IS_SET( ch->in_room->room_flags, ROOM_DONATION ) )
water:188:act_obj.c:360:            if( ch->in_room->pShop )
water:189:act_obj.c:366:         for( obj = ch->in_room->last_content; obj; obj = obj_next )
water:190:act_obj.c:972:   if( ch->in_room->pShop )
water:191:act_obj.c:1008:   if( IS_SET( ch->in_room->room_flags, ROOM_NODROP )  &&ch != supermob )
water:192:act_obj.c:1047:         for( obj = ch->in_room->first_content; obj; obj = obj_next )
water:193:act_obj.c:1137:         if( IS_SET( ch->in_room->room_flags, ROOM_NODROPALL ) )
water:194:act_obj.c:1408:   if( obj->in_room && ( ch = obj->in_room->first_person ) != NULL )
water:195:act_obj.c:1518:   obj = get_obj_list_rev( ch, arg, ch->in_room->last_content );
water:196:act_obj.c:1526:   switch ( ch->in_room->sector_type )
water:197:act_obj.c:1598:      for( vch = ch->in_room->first_person; vch; vch = vch_next )
water:198:act_obj.c:1669:   if( IS_SET( obj->in_room->room_flags, ROOM_NOFLOOR )  &&CAN_GO( obj, DIR_DOWN )  &&!IS_OBJ_STAT( obj, ITEM_HOVER ) )
water:199:act_obj.c:1682:         sprintf( buf, "Object falling into same room, room %d", to_room->vnum );
water:200:act_obj.c:1687:      if( obj->in_room->first_person )
water:201:act_obj.c:1690:         act( AT_PLAIN, "$p falls far below.", obj->in_room->first_person, obj, NULL, TO_ROOM );
water:202:act_obj.c:1691:         act( AT_PLAIN, "$p falls far below.", obj->in_room->first_person, obj, NULL, TO_CHAR );
water:203:act_obj.c:1697:      if( obj->in_room->first_person )
water:204:act_obj.c:1700:         act( AT_PLAIN, "$p falls from above.", obj->in_room->first_person, obj, NULL, TO_ROOM );
water:205:act_obj.c:1701:         act( AT_PLAIN, "$p falls from above.", obj->in_room->first_person, obj, NULL, TO_CHAR );
water:206:act_obj.c:1703:      if( !IS_SET( obj->in_room->room_flags, ROOM_NOFLOOR ) && through )
water:207:act_obj.c:1711:            if( obj->in_room->first_person && number_percent(  ) > 15 )
water:208:act_obj.c:1717:            for( rch = obj->in_room->first_person; rch; rch = rch->next_in_room, chcnt++ )
water:209:act_obj.c:1736:                  if( obj->in_room->first_person )
water:210:act_obj.c:1739:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_ROOM );
water:211:act_obj.c:1740:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_CHAR );
water:212:act_obj.c:1752:                  if( obj->in_room->first_person )
water:213:act_obj.c:1755:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_ROOM );
water:214:act_obj.c:1756:                     act( AT_PLAIN, "$p is destroyed by the fall!", obj->in_room->first_person, obj, NULL, TO_CHAR );
water:215:act_wiz.c:664:   for( vic = room->first_person; vic; vic = vic->next_in_room )
water:216:act_wiz.c:778:   victim->retran = victim->in_room->vnum;
water:217:act_wiz.c:1019:                          pexit->to_room ? pexit->to_room->vnum : 0,
water:218:act_wiz.c:1173:                 pexit->to_room ? pexit->to_room->vnum : 0,
water:219:act_wiz.c:1248:   ch_printf_color( ch, "&cIn room: &w%d  ", obj->in_room == NULL ? 0 : obj->in_room->vnum );
water:220:act_wiz.c:1350:                       victim->in_room == NULL ? 0 : victim->in_room->vnum,
water:221:act_wiz.c:1603:                       victim->pIndexData->vnum, victim->short_descr, victim->in_room->vnum, victim->in_room->name );
water:222:act_wiz.c:1626:                             get_char_worth( victim ), victim->name, victim->in_room->vnum, victim->in_room->area->name,
water:223:act_wiz.c:1627:                             victim->in_room->name );
water:224:act_wiz.c:1677:                             obj->in_room->area->name,
water:225:act_wiz.c:1678:                             obj->in_room->vnum,
water:226:act_wiz.c:1753:                obj->in_room->vnum, obj->in_room->name);
water:227:act_wiz.c:1787:                  obj->in_room->vnum, obj->in_room->name);
water:228:act_wiz.c:1838:         sprintf( buf + strlen( buf ), "room   [%5d] %s\n\r", obj->in_room->vnum, obj->in_room->name );
water:229:act_wiz.c:2282:      for( victim = ch->in_room->first_person; victim; victim = vnext )
water:230:act_wiz.c:2289:      for( obj = ch->in_room->first_content; obj; obj = obj_next )
water:231:act_wiz.c:2380:      if( ch->in_room->pShop )
water:232:act_wiz.c:2428:      if( ch->in_room->pShop )
water:233:act_wiz.c:3109:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:234:act_wiz.c:3615:      old_room_vnum = d->character->in_room->vnum;
water:235:act_wiz.c:3953:                     pArea->hi_m_vnum ) == ech->pIndexData->vnum || ( ech->in_room && ech->in_room->area == pArea ) )
water:236:act_wiz.c:3957:      if( ech->in_room && ech->in_room->area == pArea )
water:237:act_wiz.c:3967:                  pArea->hi_o_vnum ) == eobj->pIndexData->vnum || ( eobj->in_room && eobj->in_room->area == pArea ) )
water:238:act_wiz.c:3979:            if( rid->area == pArea || exit->to_room->area == pArea )
water:239:act_wiz.c:4330:   for( rch = ch->in_room->first_person; rch && ( rch != ch ); rch = rch->next_in_room )
water:240:act_wiz.c:4447:         for( room = room_index_hash[i]; room; room = room->next )
water:241:act_wiz.c:4456:            else if( !room->first_person )   /* Skip it if room is empty */
water:242:act_wiz.c:4471:            for( p = room->first_person; p && !found; p = p->next_in_room )
water:243:act_wiz.c:4779:   if( victim->in_room->vnum != ROOM_VNUM_HELL )
water:244:act_wiz.c:4849:                       ( ( in_obj->in_room ) ? in_obj->in_room->vnum : 0 ),
water:245:act_wiz.c:4850:                       obj_short( obj ), ( in_obj->in_room == NULL ) ? "somewhere" : in_obj->in_room->name );
water:246:arena.c:89:   if( !room->first_person )
water:247:arena.c:91:   for( ch = room->first_person; ch; ch = ch->next_in_room )
water:248:arena.c:100:   if( !room->first_person )
water:249:arena.c:157:   if( !room->first_person )
water:250:arena.c:187:   if( !room->first_person )
water:251:arena.c:213:   if( !room->first_person )
water:252:arena.c:239:   if( !room->first_person )
water:253:arena.c:259:   if( !room->first_person )
water:254:arena.c:295:   if( !room->first_person )
water:255:arena.c:361:   if( !room->first_person )
water:256:arena.c:1032:            ch_printf( ch, "Located in %s.\n\r", arena->room->name );
water:257:arena.c:1035:            ch_printf( ch, "Located in %s &Y[&R%d&Y]&R.\n\r", arena->room->name, arena->room->vnum );
water:258:arena.c:1921:         arena->vnum = ch->in_room->vnum;
water:259:birth.c:616:            ch->name, aoran( ch->nation->name ), ch->in_room->name, ch->in_room->vnum );
water:260:birth.c:706:            ch->name, aoran( ch->nation->name ), ch->in_room->name, ch->in_room->vnum );
water:261:birth.c:755:   for( wizard = ch->in_room->first_person; wizard; wizard = wizard->next_in_room )
water:262:birth.c:1030:                        ch->name, aoran( ch->nation->name ), ch->in_room->name, ch->in_room->vnum );
water:263:build.c:885:   ch->regoto = ch->in_room->vnum;
water:264:build.c:900:   for( fch = in_room->first_person; fch; fch = fch_next )
water:265:build.c:5238:      for( room = room_index_hash[hash]; room; room = room->next )
water:266:build.c:5240:         if( nifty_is_name( argument, room->name ) )
water:267:build.c:5242:            ch_printf( ch, "[%d] %s in %s\n\r", room->vnum, room->name, room->area->name );
water:268:build.c:7229:   for( ed = room->first_extradesc; ed; ed = ed->next )
water:269:build.c:7237:      LINK( ed, room->first_extradesc, room->last_extradesc, next, prev );
water:270:build.c:7249:   for( rmed = room->first_extradesc; rmed; rmed = rmed->next )
water:271:build.c:7256:   UNLINK( rmed, room->first_extradesc, room->last_extradesc, next, prev );
water:272:build.c:7626:         REMOVE_BIT( room->room_flags, ROOM_PROTOTYPE );
water:273:build.c:7630:         for( victim = room->first_person; victim; victim = vnext )
water:274:build.c:7639:         for( obj = room->first_content; obj; obj = obj_next )
water:275:build.c:7646:      fprintf( fpout, "%s~\n", room->name );
water:276:build.c:7647:      fprintf( fpout, "%s~\n", strip_cr( room->description ) );
water:277:build.c:7648:      if( ( room->tele_delay > 0 && room->tele_vnum > 0 ) || room->runes > 0 )
water:278:build.c:7649:         fprintf( fpout, "0 %d %d %d %d %d\n", room->room_flags,
water:279:build.c:7650:                  room->sector_type, room->tele_delay, room->tele_vnum, room->runes );
water:280:build.c:7652:         fprintf( fpout, "0 %d %d\n", room->room_flags, room->sector_type );
water:281:build.c:7658:/*	switch( room->sector_type )
water:282:build.c:7663:			room->vegetation = 0;
water:283:build.c:7664:			room->curr_vegetation = 0;
water:284:build.c:7665:			room->water = 0;
water:285:build.c:7666:			room->curr_water = 0;
water:286:build.c:7667:			room->elevation = 100;
water:287:build.c:7668:			room->curr_elevation = 100;
water:288:build.c:7669:			room->resources = 0;
water:289:build.c:7670:			room->curr_resources = 0;
water:290:build.c:7673:			room->vegetation = 0;
water:291:build.c:7674:			room->curr_vegetation = 0;
water:292:build.c:7675:			room->water = 0;
water:293:build.c:7676:			room->curr_water = 0;
water:294:build.c:7677:			room->elevation = 0;
water:295:build.c:7678:			room->curr_elevation = 0;
water:296:build.c:7679:			room->resources = 0;
water:297:build.c:7680:			room->curr_resources = 0;
water:298:build.c:7683:			room->vegetation = 20;
water:299:build.c:7684:			room->curr_vegetation = 20;
water:300:build.c:7685:			room->water = 0;
water:301:build.c:7686:			room->curr_water = 0;
water:302:build.c:7687:			room->elevation = 0;
water:303:build.c:7688:			room->curr_elevation = 0;
water:304:build.c:7689:			room->resources = 70;
water:305:build.c:7690:			room->curr_resources = 70;
water:306:build.c:7693:			room->vegetation = 0;
water:307:build.c:7694:			room->curr_vegetation = 0;
water:308:build.c:7695:			room->water = 20;
water:309:build.c:7696:			room->curr_water = 20;
water:310:build.c:7697:			room->elevation = -100;
water:311:build.c:7698:			room->curr_elevation = -100;
water:312:build.c:7699:			room->resources = 100;
water:313:build.c:7700:			room->curr_resources = 100;
water:314:build.c:7703:			room->vegetation = 90;
water:315:build.c:7704:			room->curr_vegetation = 90;
water:316:build.c:7705:			room->water = 30;
water:317:build.c:7706:			room->curr_water = 30;
water:318:build.c:7707:			room->elevation = 0;
water:319:build.c:7708:			room->curr_elevation = 0;
water:320:build.c:7709:			room->resources = 100;
water:321:build.c:7710:			room->curr_resources = 100;
water:322:build.c:7713:			room->vegetation = 0;
water:323:build.c:7714:			room->curr_vegetation = 0;
water:324:build.c:7715:			room->water = 0;
water:325:build.c:7716:			room->curr_water = 0;
water:326:build.c:7717:			room->elevation = 0;
water:327:build.c:7718:			room->curr_elevation = 0;
water:328:build.c:7719:			room->resources = 30;
water:329:build.c:7720:			room->curr_resources = 30;
water:330:build.c:7723:			room->vegetation = 10;
water:331:build.c:7724:			room->curr_vegetation = 10;
water:332:build.c:7725:			room->water = 0;
water:333:build.c:7726:			room->curr_water = 0;
water:334:build.c:7727:			room->elevation = 0;
water:335:build.c:7728:			room->curr_elevation = 0;
water:336:build.c:7729:			room->resources = 20;
water:337:build.c:7730:			room->curr_resources = 20;
water:338:build.c:7733:			room->vegetation = 30;
water:339:build.c:7734:			room->curr_vegetation = 30;
water:340:build.c:7735:			room->water = 0;
water:341:build.c:7736:			room->curr_water = 0;
water:342:build.c:7737:			room->elevation = 30;
water:343:build.c:7738:			room->curr_elevation = 30;
water:344:build.c:7739:			room->resources = 90;
water:345:build.c:7740:			room->curr_resources = 90;
water:346:build.c:7743:			room->vegetation = 0;
water:347:build.c:7744:			room->curr_vegetation = 0;
water:348:build.c:7745:			room->water = 40;
water:349:build.c:7746:			room->curr_water = 40;
water:350:build.c:7747:			room->elevation = 0;
water:351:build.c:7748:			room->curr_elevation = 0;
water:352:build.c:7749:			room->resources = 100;
water:353:build.c:7750:			room->curr_resources = 100;
water:354:build.c:7753:			room->vegetation = 0;
water:355:build.c:7754:			room->curr_vegetation = 0;
water:356:build.c:7755:			room->water = 80;
water:357:build.c:7756:			room->curr_water = 80;
water:358:build.c:7757:			room->elevation = 0;
water:359:build.c:7758:			room->curr_elevation = 0;
water:360:build.c:7759:			room->resources = 100;
water:361:build.c:7760:			room->curr_resources = 100;
water:362:build.c:7763:			room->vegetation =20;
water:363:build.c:7764:			room->curr_vegetation = 20;
water:364:build.c:7765:			room->water = 0;
water:365:build.c:7766:			room->curr_water = 0;
water:366:build.c:7767:			room->elevation = 70;
water:367:build.c:7768:			room->curr_elevation = 70;
water:368:build.c:7769:			room->resources = 100;
water:369:build.c:7770:			room->curr_resources = 100;
water:370:build.c:7773:			room->vegetation = 0;
water:371:build.c:7774:			room->curr_vegetation = 0;
water:372:build.c:7775:			room->water = 100;
water:373:build.c:7776:			room->curr_water = 100;
water:374:build.c:7777:			room->elevation = 0;
water:375:build.c:7778:			room->curr_elevation = 0;
water:376:build.c:7779:			room->resources = 0;
water:377:build.c:7780:			room->curr_resources = 0;
water:378:build.c:7783:			room->vegetation = 30;
water:379:build.c:7784:			room->curr_vegetation = 30;
water:380:build.c:7785:			room->water = 100;
water:381:build.c:7786:			room->curr_water = 100;
water:382:build.c:7787:			room->elevation = 0;
water:383:build.c:7788:			room->curr_elevation = 0;
water:384:build.c:7789:			room->resources = 100;
water:385:build.c:7790:			room->curr_resources = 100;
water:386:build.c:7795:               room->vegetation, room->curr_vegetation,
water:387:build.c:7796:               room->water, room->curr_water, room->elevation, room->curr_elevation, room->resources, room->curr_resources );
water:388:build.c:7798:      for( xit = room->first_exit; xit; xit = xit->next )
water:389:build.c:7811:      for( pReset = room->first_reset; pReset; pReset = pReset->next )
water:390:build.c:7890:      for( ed = room->first_extradesc; ed; ed = ed->next )
water:391:build.c:7893:      if( room->map )   /* maps */
water:392:build.c:7897:	   fprintf( fpout, "%s~\n", strip_cr( room->map )	);
water:393:build.c:7899:	   fprintf( fpout, "M %d %d %d %c\n",	room->map->vnum,
water:394:build.c:7900:						room->map->x,
water:395:build.c:7901:						room->map->y,
water:396:build.c:7902:						room->map->entry );
water:397:build.c:7905:      if( room->mudprogs )
water:398:build.c:7907:         for( mprog = room->mudprogs; mprog; mprog = mprog->next )
water:399:build.c:7926:      if( ( pShop = room->pShop ) == NULL )
water:400:build.c:8335:            if( tarea == ch->in_room->area )
water:401:build.c:8337:         tarea = ch->in_room->area;
water:402:build.c:8653:      pager_printf( ch, "%5d) %s\n\r", vnum, room->name );
water:403:build.c:9425:   mprog = ch->in_room->mudprogs;
water:404:build.c:9472:            xCLEAR_BITS( ch->in_room->progtypes );
water:405:build.c:9474:               xSET_BIT( ch->in_room->progtypes, mprg->type );
water:406:build.c:9520:         mprg_next = ch->in_room->mudprogs;
water:407:build.c:9521:         ch->in_room->mudprogs = mprg_next->next;
water:408:build.c:9539:            xREMOVE_BIT( ch->in_room->progtypes, mptype );
water:409:build.c:9567:         xSET_BIT( ch->in_room->progtypes, mptype );
water:410:build.c:9570:         ch->in_room->mudprogs = mprg;
water:411:build.c:9579:            xSET_BIT( ch->in_room->progtypes, mptype );
water:412:build.c:9604:         ch->in_room->mudprogs = mprg;
water:413:build.c:9605:      xSET_BIT( ch->in_room->progtypes, mptype );
water:414:build.c:9771:   else if( !ch->in_room->area )
water:415:build.c:9776:   else if( !ch->in_room->area->weather )
water:416:build.c:9784:   area = ch->in_room->area;
water:417:build.c:10051:   tarea = ch->in_room->area;
water:418:build.c:10062:         if( pexit->to_room->area != tarea )
water:419:build.c:10064:            pager_printf( ch, "To: %-20.20s %s\n\r", pexit->to_room->area->filename, pexit->to_room->area->name );
water:420:build.c:10065:            pager_printf( ch, "%15d %-30.30s -> %15d (%s)\n\r", vnum, room->name, pexit->vnum, dir_name[i] );
water:421:build.c:10083:   tarea = ch->in_room->area;
water:422:build.c:10099:            if( pexit->to_room->area == tarea )
water:423:build.c:10102:               pager_printf( ch, "%15d %-30.30s -> %15d (%s)\n\r", vnum, room->name, pexit->vnum, dir_name[i] );
water:424:city.c:481:   if( !ch->in_room->area->city )
water:425:city.c:486:   city = ch->in_room->area->city;
water:426:city.c:489:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:427:city.c:495:   if( ch->in_room->curr_vegetation > 50 )
water:428:city.c:503:      ch->in_room->sector_type = SECT_INSIDE;
water:429:city.c:504:      SET_BIT( ch->in_room->room_flags, ROOM_INDOORS );
water:430:city.c:505:      STRFREE( ch->in_room->name );
water:431:city.c:542:      ch->in_room->name = STRALLOC( aoran( buf ) );
water:432:city.c:547:      ch->in_room->sector_type = SECT_INSIDE;
water:433:city.c:548:      SET_BIT( ch->in_room->room_flags, ROOM_INDOORS );
water:434:city.c:549:      STRFREE( ch->in_room->name );
water:435:city.c:586:      ch->in_room->name = STRALLOC( aoran( buf ) );
water:436:city.c:591:      ch->in_room->sector_type = SECT_UNDERGROUND;
water:437:city.c:592:      ch->in_room->resources = 100;
water:438:city.c:593:      SET_BIT( ch->in_room->room_flags, ROOM_INDOORS );
water:439:city.c:594:      STRFREE( ch->in_room->name );
water:440:city.c:631:      ch->in_room->name = STRALLOC( aoran( buf ) );
water:441:city.c:635:      ch->in_room->sector_type = SECT_CITY;
water:442:city.c:636:      STRFREE( ch->in_room->name );
water:443:city.c:673:      ch->in_room->name = STRALLOC( aoran( buf ) );
water:444:city.c:695:   if( !ch->in_room->area->city )
water:445:city.c:700:   city = ch->in_room->area->city;
water:446:city.c:704:      ch->in_room->sector_type = SECT_FOREST;
water:447:city.c:706:      STRFREE( ch->in_room->name );
water:448:city.c:743:      ch->in_room->name = STRALLOC( aoran( buf ) );
water:449:city.c:747:      ch->in_room->sector_type = SECT_FIELD;
water:450:city.c:749:      STRFREE( ch->in_room->name );
water:451:city.c:777:      ch->in_room->name = STRALLOC( aoran( buf ) );
water:452:city.c:785:   ch->in_room->vegetation = 100;
water:453:city.c:786:   ch->in_room->curr_vegetation = 100;
water:454:city.c:796:   if( !ch->in_room->area->city )
water:455:city.c:801:   city = ch->in_room->area->city;
water:456:clan.c:266:      for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
water:457:clan.c:317:      if( !ch->in_room->first_content )
water:458:clan.c:322:      for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
water:459:combat.c:162:               ( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) ?
water:460:combat.c:166:                 ? ch->last_hit->short_descr : ch->last_hit->name ), ch->in_room->name, ch->in_room->vnum );
water:461:combat.c:192:      sprintf( log_buf, "%s (%d) died in %s (%d)", ch->name, get_char_worth( ch ), ch->in_room->name, ch->in_room->vnum );
water:462:combat.c:260:   for( pexit = was_in_room->first_exit; pexit; pexit = pexit->next )
water:463:combat.c:702:   if( IS_SET( ch->in_room->room_flags, ROOM_PRIVATE ) )
water:464:combat.c:744:      if( IS_SET( vch->in_room->room_flags, ROOM_NOMISSILE ) )
water:465:combat.c:839:         for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
water:466:comm.c:462:    		ch->name, ch->in_room->vnum );
water:467:comm.c:1972:            if( ch->in_room->vnum == 6 )
water:468:comm.c:1977:         else if( ch->in_room->vnum == ROOM_VNUM_LIMBO )
water:469:comm.c:2015:         sprintf( buf, "%s has entered the game in %s (%d).", ch->name, ch->in_room->name, ch->in_room->vnum );
water:470:comm.c:2738:      to = ch->in_room->first_person;
water:471:comm.c:2777:      for( to_obj = to->in_room->first_content; to_obj; to_obj = to_obj->next_content )
water:472:comm.c:3102:                     sprintf( pbuf, "%s", flag_string( ch->in_room->room_flags, r_flags ) );
water:473:comm.c:3106:                     sprintf( pbuf, "<#%d> ", ch->in_room->vnum );
water:474:comm.c:3889:      sprintf( buf, "PC: %s room: %d", ch->name, ch->in_room ? ch->in_room->vnum : -1 );
water:475:db.c:1519:            boot_log( "%s: %s (%d) bad command '%c'.", __FUNCTION__, room->area->filename, count, letter );
water:476:db.c:1524:            boot_log( "%s: %s (%d) 'M': mobile %d doesn't exist.", __FUNCTION__, room->area->filename, count, arg1 );
water:477:db.c:1529:            boot_log( "%s: %s (%d) '%c': object %d doesn't exist.", __FUNCTION__, room->area->filename, count, letter,
water:478:db.c:1535:            boot_log( "%s: %s (%d) '%c': object %d doesn't exist.", __FUNCTION__, room->area->filename, count, letter,
water:479:db.c:1541:            boot_log( "%s: %s (%d) 'P': destination object %d doesn't exist.", __FUNCTION__, room->area->filename, count,
water:480:db.c:1550:            boot_log( "%s: %s (%d) '%c': object %d doesn't exist.", __FUNCTION__, room->area->filename, count, letter,
water:481:db.c:1565:               boot_log( "%s: %s (%d) 'D': exit %d not door.", __FUNCTION__, room->area->filename, count, arg2 );
water:482:db.c:1572:               boot_log( "%s: %s (%d) 'D': bad 'locks': %d.", __FUNCTION__, room->area->filename, count, arg3 );
water:483:db.c:1581:               boot_log( "%s: %s (%d) 'R': bad exit %d.", __FUNCTION__, room->area->filename, count, arg2 );
water:484:db.c:2054:            if( pexit->to_room->area != tarea && !dupe_neighbor( tarea, pexit->to_room->area ) )
water:485:db.c:2056:               pager_printf( ch, "To: %-20.20s %s\n\r", pexit->to_room->area->filename, pexit->to_room->area->name );
water:486:db.c:2057:               pager_printf( ch, "%15d %-30.30s -> %15d (%s)\n\r", vnum, room->name, pexit->vnum, dir_name[i] );
water:487:db.c:2063:               new->name = STRALLOC( pexit->to_room->area->name );;
water:488:db.c:2229:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
water:489:db.c:2260:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
water:490:db.c:2277:         room->first_exit = exits[x];
water:491:db.c:2282:         room->last_exit = exits[x];
water:492:db.c:2296:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
water:493:db.c:2312:   for( pexit = room->first_exit; pexit; pexit = pexit->next )
water:494:db.c:2353:		&&   pch->in_room->area == pArea
water:495:db.c:3870:      fprintf( fp, "[%5d] %s: %s\n", ch->in_room ? ch->in_room->vnum : 0, ch->name, str );
water:496:db.c:4690:            if( ( original = iRoom->mudprogs ) != NULL )
water:497:db.c:4697:               iRoom->mudprogs = working;
water:498:db.c:4802:   while( ( ch = room->first_person ) != NULL )
water:499:db.c:4812:   while( ( o = room->first_content ) != NULL )
water:500:db.c:4815:   while( ( ed = room->first_extradesc ) != NULL )
water:501:db.c:4817:      room->first_extradesc = ed->next;
water:502:db.c:4823:   while( ( trail = room->first_trail ) != NULL )
water:503:db.c:4825:      room->first_trail = trail->next;
water:504:db.c:4830:   while( ( ex = room->first_exit ) != NULL )
water:505:db.c:4832:   while( ( mpact = room->mpact ) != NULL )
water:506:db.c:4834:      room->mpact = mpact->next;
water:507:db.c:4838:   while( ( mp = room->mudprogs ) != NULL )
water:508:db.c:4840:      room->mudprogs = mp->next;
water:509:db.c:4845:/*  if (room->map)
water:510:db.c:4849:    if ((mapi = get_map_index(room->map->vnum)) != NULL)
water:511:db.c:4850:      if (room->map->x > 0 && room->map->x < 80 &&
water:512:db.c:4851:          room->map->y > 0 && room->map->y < 48)
water:513:db.c:4852:        mapi->map_of_vnums[room->map->y][room->map->x] = -1;
water:514:db.c:4853:    DISPOSE(room->map);
water:515:db.c:4855:   STRFREE( room->name );
water:516:db.c:4856:   STRFREE( room->description );
water:517:db.c:4858:   hash = room->vnum % MAX_KEY_HASH;
water:518:db.c:4860:      room_index_hash[hash] = room->next;
water:519:db.c:4867:         prev->next = room->next;
water:520:db.c:4869:         bug( "delete_room: room %d not in hash bucket %d.", room->vnum, hash );
water:521:db.c:5239:      pexit->vnum = to_room->vnum;
water:522:elkandu.c:327:   if( ch->in_room->pShop )
water:523:elkandu.c:625:      dam = ( dam * 200 ) / ( victim->in_room->curr_vegetation + 10 );
water:524:elkandu.c:628:      dam = ( dam * 200 ) / ( victim->in_room->curr_water + 10 );
water:525:elkandu.c:1651:         if( ch->in_room->curr_vegetation < 100 - ch->curr_talent[TAL_EARTH] )
water:526:elkandu.c:1675:         if( ch->in_room->area->weather->temp > ch->curr_talent[TAL_FROST] * 10 - 400 )
water:527:elkandu.c:2091:         if( ch->in_room->curr_vegetation <= 0 )
water:528:elkandu.c:2096:         ch->in_room->curr_vegetation -= 10;
water:529:elkandu.c:2107:         if( ch->in_room->curr_water <= 0 )
water:530:elkandu.c:2112:         ch->in_room->curr_water -= 10;
water:531:elkandu.c:2123:         if( ch->in_room->curr_vegetation < 10 )
water:532:elkandu.c:2128:         if( ch->in_room->curr_water > 30 )
water:533:elkandu.c:2135:         SET_BIT( ch->in_room->room_flags, ROOM_BURNING );
water:534:elkandu.c:2667:         if( IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) )
water:535:elkandu.c:3179:                  pager_printf( ch, "%s is in %s\n\r", PERS( victim, ch ), victim->in_room->name );
water:536:elkandu.c:3189:                                PERS( victim, ch ), victim->in_room->name, victim->in_room->area->name );
water:537:elkandu.c:3219:                           obj_short( obj ), PERS( in_obj->carried_by, ch ), in_obj->carried_by->in_room->name );
water:538:elkandu.c:3223:                           in_obj->carried_by->in_room->name, in_obj->carried_by->in_room->area->name );
water:539:elkandu.c:3230:                  sprintf( buf, "%s is in %s.\n\r", obj_short( obj ), in_obj->in_room->name );
water:540:elkandu.c:3233:                           obj_short( obj ), in_obj->in_room->name, in_obj->in_room->area->name );
water:541:elkandu.c:3255:                    ch->in_room->name, ch->in_room->area->name, ch->in_room->area->resetmsg );
water:542:elkandu.c:3256:         switch ( ch->in_room->sector_type )
water:543:elkandu.c:3314:         if( ch->in_room->room_flags )
water:544:elkandu.c:3315:            ch_printf( ch, "It seems to be %s.\n\r", flag_string( ch->in_room->room_flags, r_flags ) );
water:545:elkandu.c:3316:         temp = ch->in_room->curr_water;
water:546:elkandu.c:3320:         temp = ch->in_room->curr_vegetation;
water:547:elkandu.c:3322:         temp = ch->in_room->curr_resources;
water:548:elkandu.c:3325:         if( ch->in_room->runes )
water:549:elkandu.c:3327:                       ch->curr_talent[TAL_CATALYSM] < 20 ? "some sort" : flag_string( ch->in_room->runes, rune_flags ) );
water:550:elkandu.c:4025:            sprintf( buf, "%s sent %s to %s (%d).", ch->name, victim->name, target->in_room->name, target->in_room->vnum );
water:551:elkandu.c:4045:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) && ch->curr_talent[TAL_MOTION] < 80 )
water:552:elkandu.c:4087:            if( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) )
water:553:elkandu.c:4094:            location = get_room_index( ch->in_room->area->hi_soft_range );
water:554:elkandu.c:4149:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) && ch->curr_talent[TAL_MOTION] < 80 )
water:555:elkandu.c:4212:            if( IS_SET( ch->in_room->room_flags, ROOM_NO_DREAM )
water:556:elkandu.c:4214:                     || ( IS_SET( ch->in_room->runes, RUNE_WARD ) && ch->curr_talent[TAL_DREAM] < 200 ) ) )
water:557:elkandu.c:4551:         if( IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) )
water:558:elkandu.c:4583:            sprintf( buf, "%s summoned %s to %s (%d).", ch->name, victim->name, ch->in_room->name, ch->in_room->vnum );
water:559:elkandu.c:4678:         if( IS_SET( victim->in_room->room_flags, ROOM_NO_DREAM )
water:560:elkandu.c:4680:                  || ( IS_SET( victim->in_room->runes, RUNE_WARD ) && ch->curr_talent[TAL_DREAM] < 200 ) ) )
water:561:elkandu.c:4728:               if( IS_SET( obj->in_room->room_flags, ROOM_NOSUPPLICATE )
water:562:elkandu.c:4756:            if( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) )
water:563:elkandu.c:4763:            location = get_room_index( ch->in_room->area->hi_soft_range );
water:564:elkandu.c:4818:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) && ch->curr_talent[TAL_MOTION] < 80 )
water:565:elkandu.c:4977:         if( ( ch->curr_talent[TAL_EARTH] < 20 && !IS_NPC( ch ) ) || IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
water:566:elkandu.c:4985:         for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:567:elkandu.c:4989:            if( IS_AFFECTED( victim, AFF_FLYING ) && !IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:568:elkandu.c:6119:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
water:569:elkandu.c:6139:         SET_BIT( room->runes, RUNE_LIFE );
water:570:elkandu.c:6150:         SET_BIT( room->runes, RUNE_DISTRACT );
water:571:elkandu.c:6161:         SET_BIT( room->runes, RUNE_WARD );
water:572:elkandu.c:6185:         ch->in_room->runes = 0;
water:573:elkandu.c:7064:         if( ch->in_room->curr_vegetation >= 100 )
water:574:elkandu.c:7069:         ch->in_room->curr_vegetation += 10;
water:575:elkandu.c:7080:         if( ch->in_room->curr_water >= 100 )
water:576:elkandu.c:7085:         ch->in_room->curr_water += 10;
water:577:elkandu.c:7833:            for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:578:elkandu.c:7854:            for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:579:elkandu.c:7882:            for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:580:elkandu.c:7903:            for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:581:fight.c:326:            ||IS_SET( ch->in_room->room_flags, ROOM_BURNING ) 
water:582:fight.c:327:            ||ch->in_room->sector_type == SECT_LAVA 
water:583:fight.c:334:         if( ch->in_room->curr_water > 30  &&ch->in_room->sector_type != SECT_LAVA )
water:584:fight.c:336:            REMOVE_BIT( ch->in_room->room_flags, ROOM_BURNING );
water:585:fight.c:343:            REMOVE_BIT( ch->in_room->room_flags, ROOM_BURNING );
water:586:fight.c:374:      if( ch->in_room->area->weather->temp > 100 )
water:587:fight.c:381:      else if( ch->in_room->area->weather->temp < -100 )
water:588:fight.c:672:            ||IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) 
water:589:fight.c:673:            ||( IS_SET( pexit->to_room->room_flags, ROOM_NOFLOOR ) && !IS_FLOATING( ch ) ) )
water:590:grub.c:85:         sprintf( field, "%-18s", outer_obj->in_room->name );
water:591:grub.c:87:         sprintf( buf + strlen( buf ), "%5d %-18s ", outer_obj->in_room->vnum, field );
water:592:grub.c:412:      if( ( pRoom = get_room_index( i ) ) && ( pProg = pRoom->mudprogs ) )
water:593:grub.c:545:            for( pRoom = room_index_hash[cou]; pRoom; pRoom = pRoom->next )
water:594:grub.c:547:               if( pRoom->vnum >= lo && pRoom->vnum <= hi )
water:595:grub.c:549:                  if( match == pRoom->sector_type && hit_cou < RGRUB_ST_MAX_SIZE )
water:596:grub.c:550:                     vnum[hit_cou++] = pRoom->vnum;
water:597:grub.c:1985:            for( pRoom = room_index_hash[cou]; pRoom; pRoom = pRoom->next )
water:598:grub.c:1987:               if( pRoom->vnum >= lo && pRoom->vnum <= hi )
water:599:grub.c:1989:                  if( match == ( match & pRoom->room_flags ) && hit_cou < DIAG_RF_MAX_SIZE )
water:600:grub.c:1990:                     vnum[hit_cou++] = pRoom->vnum;
water:601:handler.c:126:   for( ch = room->first_person; ch; ch = ch->next_in_room )
water:602:handler.c:129:   for( af = room->first_affect; af; af = af->next )
water:603:handler.c:135:   if( !IS_SET( room->room_flags, ROOM_INDOORS ) )
water:604:handler.c:140:         if( moon->up && !str_cmp( moon->world, room->area->resetmsg ) )
water:605:handler.c:146:   for( obj = room->first_content; obj; obj = obj->next_content )
water:606:handler.c:1113:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) || IS_SET( ch->immune, RIS_MAGIC ) || saving_char == ch   /* so save/quit doesn't trigger */
water:607:handler.c:1397:      for( paf = ch->in_room->first_affect; paf; paf = paf->next )
water:608:handler.c:1490:      --ch->in_room->area->nplayer;
water:609:handler.c:1492:      --ch->in_room->area->nmob;
water:610:handler.c:1506:      for( paf = ch->in_room->first_affect; paf; paf = paf->next )
water:611:handler.c:1513:   UNLINK( ch, ch->in_room->first_person, ch->in_room->last_person, next_in_room, prev_in_room );
water:612:handler.c:1559:      ch->home_room = ch->in_room->vnum;
water:613:handler.c:1602:   if( ch->was_in_room->area != ch->in_room->area )
water:614:handler.c:1604:      reset_area( ch->in_room->area );
water:615:handler.c:1605:      reset_area( ch->in_room->area );
water:616:handler.c:1606:      reset_area( ch->in_room->area );
water:617:handler.c:1856:   UNLINK( obj, in_room->first_content, in_room->last_content, next_content, prev_content );
water:618:handler.c:2010:      for( ch = obj->in_room->first_person; ch; ch = ch->next_in_room )
water:619:handler.c:2314:   for( fch = obj->in_room->first_person; fch != NULL; fch = fch->next_in_room )
water:620:handler.c:2342:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:621:handler.c:2364:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:622:handler.c:2403:   for( wch = ch->in_room->first_person; wch; wch = wch->next_in_room )
water:623:handler.c:2451:   for( wch = ch->in_room->first_person; wch; wch = wch->next_in_room )
water:624:handler.c:2485:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:625:handler.c:2512:   for( rch = obj->in_room->first_person; rch; rch = rch->next_in_room )
water:626:handler.c:2725:   if( ( obj = get_obj_list_rev( ch, argument, ch->in_room->last_content ) ) != NULL )
water:627:handler.c:3743:   if( !ch->in_room || !ch->in_room->first_content )
water:628:handler.c:3746:   for( check = ch->in_room->first_content; check; check = check->next_content )
water:629:handler.c:3812:   UNLINK( pexit, room->first_exit, room->last_exit, next, prev );
water:630:handler.c:3842:   STRFREE( room->description );
water:631:handler.c:3843:   STRFREE( room->name );
water:632:handler.c:3844:   for( ed = room->first_extradesc; ed; ed = ed_next )
water:633:handler.c:3852:   room->first_extradesc = NULL;
water:634:handler.c:3853:   room->last_extradesc = NULL;
water:635:handler.c:3854:   for( pexit = room->first_exit; pexit; pexit = pexit_next )
water:636:handler.c:3862:   room->first_exit = NULL;
water:637:handler.c:3863:   room->last_exit = NULL;
water:638:handler.c:3864:   room->room_flags = 0;
water:639:handler.c:3865:   room->sector_type = 0;
water:640:handler.c:3963:   for( pReset = room->first_reset; pReset; pReset = pReset_next )
water:641:handler.c:3969:   room->first_reset = NULL;
water:642:handler.c:3970:   room->last_reset = NULL;
water:643:handler.c:4511:      LINK( rest, obj->in_room->first_content, obj->in_room->last_content, next_content, prev_content );
water:644:handler.c:4707:    tarea = mob->in_room->area;
water:645:handler.c:4991:   strcpy( buf, ch->in_room->description );
water:646:handler.c:5022:   switch ( ch->in_room->sector_type )
water:647:handler.c:5028:         if( ch->in_room->curr_vegetation > 66 )
water:648:handler.c:5030:         else if( ch->in_room->curr_vegetation > 33 )
water:649:handler.c:5032:         else if( ch->in_room->curr_vegetation > 5 )
water:650:handler.c:5037:         if( ch->in_room->curr_resources > 66 )
water:651:handler.c:5039:         else if( ch->in_room->curr_resources > 33 )
water:652:handler.c:5042:         if( ch->in_room->curr_water > 75 )
water:653:handler.c:5044:         else if( ch->in_room->curr_water > 25 )
water:654:handler.c:5051:         if( ch->in_room->curr_vegetation > 66 )
water:655:handler.c:5053:         else if( ch->in_room->curr_vegetation > 33 )
water:656:handler.c:5058:         if( ch->in_room->curr_resources > 66 )
water:657:handler.c:5063:         if( ch->in_room->curr_water > 66 )
water:658:handler.c:5065:         else if( ch->in_room->curr_water > 33 )
water:659:handler.c:5072:         if( ch->in_room->curr_vegetation > 66 )
water:660:handler.c:5074:         else if( ch->in_room->curr_vegetation > 33 )
water:661:handler.c:5079:         if( ch->in_room->curr_water > 66 )
water:662:handler.c:5081:         else if( ch->in_room->curr_water > 33 )
water:663:handler.c:5086:         if( ch->in_room->curr_resources > 66 )
water:664:handler.c:5093:         if( ch->in_room->curr_vegetation > 66 )
water:665:handler.c:5095:         else if( ch->in_room->curr_vegetation > 33 )
water:666:handler.c:5100:         if( ch->in_room->curr_water > 66 )
water:667:handler.c:5102:         else if( ch->in_room->curr_water > 33 )
water:668:handler.c:5107:         if( ch->in_room->curr_resources > 66 )
water:669:handler.c:5114:         if( ch->in_room->curr_vegetation > 66 )
water:670:handler.c:5116:         else if( ch->in_room->curr_vegetation > 33 )
water:671:handler.c:5121:         if( ch->in_room->curr_water > 66 )
water:672:handler.c:5123:         else if( ch->in_room->curr_water > 33 )
water:673:handler.c:5133:         if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
water:674:handler.c:5142:         if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
water:675:handler.c:5154:         if( ch->in_room->curr_vegetation > 66 )
water:676:handler.c:5156:         else if( ch->in_room->curr_vegetation > 33 )
water:677:handler.c:5166:         if( ch->in_room->curr_vegetation > 66 )
water:678:handler.c:5168:         else if( ch->in_room->curr_vegetation > 33 )
water:679:handler.c:5170:         else if( ch->in_room->curr_resources > 66 )
water:680:handler.c:5177:         if( ch->in_room->curr_vegetation > 66 )
water:681:handler.c:5179:         else if( ch->in_room->curr_vegetation > 33 )
water:682:handler.c:5184:         if( ch->in_room->curr_resources > 66 )
water:683:handler.c:5193:         if( ch->in_room->curr_vegetation > 66 )
water:684:handler.c:5195:         else if( ch->in_room->curr_vegetation > 33 )
water:685:handler.c:5204:         if( ch->in_room->curr_vegetation > 66 )
water:686:handler.c:5206:         else if( ch->in_room->curr_vegetation > 33 )
water:687:handler.c:5223:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
water:688:handler.c:5225:      if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
water:689:handler.c:5227:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) )
water:690:handler.c:5229:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_SUMMON ) )
water:691:handler.c:5231:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_ASTRAL ) )
water:692:handler.c:5233:      if( IS_SET( ch->in_room->room_flags, ROOM_NOSUPPLICATE ) )
water:693:handler.c:5237:   if( IS_SET( ch->in_room->room_flags, ROOM_DARK ) )
water:694:handler.c:5239:   if( IS_SET( ch->in_room->room_flags, ROOM_TUNNEL ) )
water:695:handler.c:5241:   if( IS_SET( ch->in_room->room_flags, ROOM_PRIVATE ) )
water:696:handler.c:5243:   if( IS_SET( ch->in_room->room_flags, ROOM_SOLITARY ) )
water:697:handler.c:5245:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
water:698:handler.c:5247:   if( IS_SET( ch->in_room->room_flags, ROOM_AMPLIFY ) )
water:699:handler.c:5249:   if( IS_SET( ch->in_room->room_flags, ROOM_NOMISSILE ) )
water:700:handler.c:5251:   if( IS_SET( ch->in_room->room_flags, ROOM_STICKY ) )
water:701:handler.c:5253:   if( IS_SET( ch->in_room->room_flags, ROOM_SLIPPERY ) )
water:702:handler.c:5255:   if( IS_SET( ch->in_room->room_flags, ROOM_BURNING ) )
water:703:handler.c:5257:   if( ch->in_room->runes )
water:704:handler.c:5264:   for( pexit = ch->in_room->first_exit; pexit; pexit = pexit->next )
water:705:handler.c:5299:            if( pexit->to_room->sector_type != ch->in_room->sector_type )
water:706:handler.c:5302:               switch ( pexit->to_room->sector_type )
water:707:handler.c:5326:                     if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
water:708:handler.c:5335:                     if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) )
water:709:handler.c:5384:/*	for (obj = ch->in_room->first_content; obj; obj = obj->next_content) {
water:710:handler.c:5472:   for( trail = ch->in_room->first_trail; trail; trail = trail->next )
water:711:handler.c:5498:          ( ch->in_room->sector_type < 6 || ch->in_room->sector_type == 10 || ch->in_room->sector_type == 13 ) )
water:712:handler.c:5540:      if( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 )
water:713:handler.c:5541:          && ( ( ch->in_room->area->weather->precip + 3 * weath_unit - 1 ) / weath_unit > 3 ) )
water:714:handler.c:5559:             && ch->in_room->sector_type != 0
water:715:handler.c:5560:             && ch->in_room->sector_type != 1
water:716:handler.c:5561:             && ch->in_room->sector_type < 6
water:717:interp.c:474:               ch->in_room ? ch->in_room->vnum : 0, time_used.tv_sec, time_used.tv_usec );
water:718:interp.c:478:               ch->in_room ? ch->in_room->vnum : 0, time_used.tv_sec, time_used.tv_usec );
water:719:magic.c:547:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:720:magic.c:1200:         if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
water:721:magic.c:1550:      for( vch = ch->in_room->first_person; vch; vch = vch_next )
water:722:magic.c:1577:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
water:723:magic.c:1584:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) && skill->target == TAR_CHAR_OFFENSIVE )
water:724:magic.c:1918:         ||IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
water:725:magic.c:1919:         ||IS_SET( victim->in_room->room_flags, ROOM_INDOORS )  ||IS_SET( victim->in_room->room_flags, ROOM_PROTOTYPE ) )
water:726:magic.c:2050:   if( !ch->in_room->first_content )
water:727:magic.c:2056:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:728:magic.c:2109:   ch_printf( ch, "You are in %s in %s, on the world of %s.\n\r", ch->in_room->name, ch->in_room->area->name,
water:729:magic.c:2110:               ch->in_room->area->resetmsg );
water:730:magic.c:2111:   switch ( ch->in_room->sector_type )
water:731:magic.c:2169:   if( ch->in_room->room_flags )
water:732:magic.c:2170:      ch_printf( ch, "It seems to be %s.\n\r", flag_string( ch->in_room->room_flags, r_flags ) );
water:733:magic.c:2171:   temp = ch->in_room->curr_water;
water:734:magic.c:2175:   temp = ch->in_room->curr_vegetation;
water:735:magic.c:2177:   temp = ch->in_room->curr_resources;
water:736:magic.c:2180:   if( ch->in_room->runes )
water:737:magic.c:2181:      ch_printf( ch, "Runes of %s line the walls.\n\r", flag_string( ch->in_room->runes, rune_flags ) );
water:738:magic.c:2329:          ||IS_SET( victim->in_room->room_flags, ROOM_PRIVATE ) 
water:739:magic.c:2330:          ||IS_SET( victim->in_room->room_flags, ROOM_SOLITARY ) 
water:740:magic.c:2331:          ||IS_SET( victim->in_room->room_flags, ROOM_NO_ASTRAL ) 
water:741:magic.c:2332:          ||IS_SET( victim->in_room->room_flags, ROOM_NO_RECALL ) 
water:742:magic.c:2333:          ||IS_SET( victim->in_room->room_flags, ROOM_PROTOTYPE ) 
water:743:magic.c:2334:          ||IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) 
water:744:magic.c:2335:          ||IS_SET( ch->in_room->room_flags, ROOM_NO_ASTRAL ) 
water:745:magic.c:2348:   targetRoomVnum = victim->in_room->vnum;
water:746:magic.c:2355:      for( pexit = fromRoom->first_exit; pexit; pexit = pexit->next )
water:747:magic.c:2371:   for( pexit = targetRoom->first_exit; pexit; pexit = pexit->next )
water:748:magic.c:2604:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
water:749:magic.c:2615:   for( vch = ch->in_room->first_person; vch; vch = vch_next )
water:750:magic.c:2850:         victim = victim->in_room->first_person;
water:751:magic.c:2853:         victim = ch->in_room->first_person;
water:752:magic.c:2943:            WEATHER_DATA * weath = ch->in_room->area->weather;
water:753:magic.c:3203:      if( ch && ch->name && ch->in_room && ch->in_room->vnum )
water:754:magic.c:3204:         bug( "bad skill %d passed to spell_smaug: ch->name %s, room %d", sn, ch->name, ch->in_room->vnum );
water:755:magic.c:3209:   if( SPELL_FLAG( skill, SF_EARTH )  &&( ch->in_room->curr_vegetation < 33 ) )
water:756:magic.c:3214:   if( SPELL_FLAG( skill, SF_AIR )  &&( ch->in_room->curr_water >= 100 ) )
water:757:magic.c:3220:   if( SPELL_FLAG( skill, SF_WATER )  &&( ch->in_room->curr_water < 33 ) )
water:758:magic.c:3230:   if( SPELL_FLAG( skill, SF_GROUND )  &&( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) ) )
water:759:magic.c:3328:   amount += number_range( -10, ( ch->in_room->area->weather->mana * 10 ) - amount );
water:760:magic.c:3341:   ch->in_room->area->weather->mana -= ( int )amount / 100;
water:761:magic.c:3405:   weath = ch->in_room->area->weather;
water:762:makeobjs.c:1622:   shop = ch->in_room->pShop;
water:763:makeobjs.c:2019:               for( fire = ch->in_room->first_content; fire; fire = fire->next_content )
water:764:makeobjs.c:2221:      if( ( ch = obj->in_room->first_person ) != NULL )
water:765:makeobjs.c:2267:            ch->in_room->area->gold_looted += ch->gold;
water:766:makeobjs.c:2300:            ch->in_room->area->gold_looted += ch->gold;
water:767:makeobjs.c:2415:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:768:misc.c:142:   for( tch = ch->in_room->first_person; tch; tch = tch->next_in_room )
water:769:misc.c:301:   if( ch->in_room->pShop )
water:770:misc.c:455:      for( source = ch->in_room->first_content; source; source = src_next )
water:771:misc.c:728:      for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:772:misc.c:953:                ( ch->in_room->sector_type == SECT_UNDERWATER || ch->in_room->sector_type == SECT_WATER_SWIM
water:773:misc.c:954:                  || ch->in_room->sector_type ==
water:774:misc.c:955:                  SECT_WATER_NOSWIM ) ? "dissolves in the water" : ( ch->in_room->sector_type == SECT_AIR
water:775:misc.c:956:                                                                      || IS_SET( ch->in_room->room_flags,
water:776:misc.c:1332:      for( rch = room->first_person; rch; rch = rch->next_in_room )
water:777:misc.c:1455:         for( rch = room->first_person; rch; rch = rch->next_in_room )
water:778:misc.c:1465:               for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
water:779:misc.c:1475:         for( rch = room->first_person; rch; rch = rch->next_in_room )
water:780:misc.c:1485:               for( rch = pexit->to_room->first_person; rch; rch = rch->next_in_room )
water:781:misc.c:1579:         for( rch = to_room->first_person; rch; rch = rch->next_in_room )
water:782:misc.c:1755:   if( ch->in_room->pShop )
water:783:misc.c:1871:            if( IS_SET( ch->in_room->room_flags, ROOM_NODROP )  ||xIS_SET( ch->act, PLR_LITTERBUG ) )
water:784:misc.c:1880:            if( IS_SET( ch->in_room->room_flags, ROOM_NODROPALL ) )
water:785:misc.c:2151:      ch = obj->in_room->first_person;
water:786:misc.c:2219:         for( rec = d->character->in_room->first_content; rec; rec = rec->next_content )
water:787:mud_comm.c:182:   if( xIS_EMPTY( ch->in_room->progtypes ) )
water:788:mud_comm.c:188:   pager_printf( ch, "Name: %s.  Vnum: %d.\n\r", ch->in_room->name, ch->in_room->vnum );
water:789:mud_comm.c:189:   for( mprg = ch->in_room->mudprogs; mprg; mprg = mprg->next )
water:790:mud_comm.c:350:   for( pexit = was_in_room->first_exit; pexit; pexit = pexit->next )
water:791:mud_comm.c:473:   shop = ch->in_room->pShop;
water:792:mud_comm.c:481:   obj = ch->in_room->first_content;
water:793:mud_comm.c:510:         fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:794:mud_comm.c:654:      for( victim = ch->in_room->first_person; victim; victim = vnext )
water:795:mud_comm.c:661:      while( ch->in_room->first_content )
water:796:mud_comm.c:663:         if( IS_OBJ_STAT( ch->in_room->first_content, ITEM_ARTIFACT ) )
water:797:mud_comm.c:665:            obj = ch->in_room->first_content;
water:798:mud_comm.c:681:            extract_obj( ch->in_room->first_content );
water:799:mud_comm.c:785:   for( fch = in_room->first_person; fch; fch = fch_next )
water:800:mud_comm.c:866:      for( victim = ch->in_room->first_person; victim; victim = nextinroom )
water:801:mud_comm.c:890:              || !can_see( ch, d->character )  ||ch->in_room->area != d->character->in_room->area )
water:802:mud_comm.c:958:      for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
water:803:mud_comm.c:1003:      if( vch->in_room->area == ch->in_room->area  &&!IS_NPC( vch )  &&IS_AWAKE( vch ) )
water:804:mud_comm.c:1236:      for( victim = ch->in_room->first_person; victim; victim = nextinroom )
water:805:mud_comm.c:1629:      boost_economy( ch->in_room->area, gold );
water:806:mud_comm.c:1649:   if( ch->gold < 1000000000 && gold < 1000000000 && ch->in_room  &&economy_has( ch->in_room->area, gold ) )
water:807:mud_comm.c:1653:      lower_economy( ch->in_room->area, gold );
water:808:mud_comm.c:1706:      for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:809:mud.h:3285:				    (ch)->in_room->room_flags,		    \
water:810:mud.h:3287:				    (ch)->in_room->room_flags,              \
water:811:mud.h:3290:#define IS_UNDERWATER(ch)	((((ch)->in_room->sector_type == SECT_WATER_SWIM \
water:812:mud.h:3291:				|| (ch)->in_room->sector_type == SECT_WATER_NOSWIM \
water:813:mud.h:3292:				|| (ch)->in_room->sector_type == SECT_UNDERWATER) \
water:814:mud.h:3294:				|| ((ch)->in_room->sector_type == SECT_OCEANFLOOR \
water:815:mud.h:3295:				|| (ch)->in_room->sector_type == SECT_LAVA))
water:816:mud.h:3316:				IS_SET(ch->in_room->room_flags, ROOM_SILENCE)))
water:817:mud_prog.c:353:      return mprog_veval( ( ( room->area->high_economy > 0 ) ? 1000000000 : 0 ) 
water:818:mud_prog.c:354:                           +room->area->low_economy, opr, atoi( rval ), mob );
water:819:mud_prog.c:386:            if( tmob->in_room->area == mob->in_room->area )
water:820:mud_prog.c:414:      for( oMob = mob->in_room->first_person; oMob; oMob = oMob->next_in_room )
water:821:mud_prog.c:487:    for ( pObj = mob->in_room->first_content; pObj;
water:822:mud_prog.c:495:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
water:823:mud_prog.c:529:    for ( pObj = mob->in_room->first_content; pObj;
water:824:mud_prog.c:537:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
water:825:mud_prog.c:561:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
water:826:mud_prog.c:590:      for( pObj = mob->in_room->first_content; pObj; pObj = pObj->next_content )
water:827:mud_prog.c:908:         return mprog_veval( chkchar->in_room->vnum, opr, atoi( rval ), mob );
water:828:mud_prog.c:915:         return mprog_veval( chkchar->was_in_room->vnum, opr, atoi( rval ), mob );
water:829:mud_prog.c:920:         return IS_SET( chkchar->in_room->room_flags, ROOM_NO_RECALL ) ? TRUE : FALSE;
water:830:mud_prog.c:1163:      for( ch = mob->in_room->first_person; ch; ch = ch->next_in_room )
water:831:mud_prog.c:1178:         if( ( !IS_NPC( ch ) ) && ch->in_room->area == anchor->in_room->area )
water:832:mud_prog.c:1190:      room = get_room_index( rvnum ? rvnum : mob->in_room->vnum );
water:833:mud_prog.c:1191:      for( tch = room ? room->first_person : NULL; tch; tch = tch->next_in_room )
water:834:mud_prog.c:1203:      room = get_room_index( rvnum ? rvnum : mob->in_room->vnum );
water:835:mud_prog.c:1204:      for( tch = room ? room->first_person : NULL; tch; tch = tch->next_in_room )
water:836:mud_prog.c:1216:      room = get_room_index( rvnum ? rvnum : mob->in_room->vnum );
water:837:mud_prog.c:1217:      for( tch = room ? room->first_person : NULL; tch; tch = tch->next_in_room )
water:838:mud_prog.c:1734:   for( vch = mob->in_room->first_person; vch; vch = vch->next_in_room )
water:839:mud_prog.c:2473:      for( vmob = ch->in_room->first_person; vmob; vmob = vmob_next )
water:840:mud_prog.c:2528:   for( vmob = actor->in_room->first_person; vmob; vmob = vmob->next_in_room )
water:841:mud_prog.c:2572:      for( mprg = room->mudprogs; mprg; mprg = mprg->next )
water:842:mud_prog.c:2576:            if( mprg->arglist[0] == '\0'  ||room->mpscriptpos != 0  ||atoi( mprg->arglist ) == time_info.hour )
water:843:mud_prog.c:2581:               room->mpscriptpos = supermob->mpscriptpos;
water:844:mud_prog.c:2680:   for( vobj = ch->in_room->first_content; vobj; vobj = vobj->next_content )
water:845:mud_prog.c:2696:      for( vobj = ch->in_room->first_content; vobj; vobj = vobj->next_content )
water:846:mud_prog.c:2984:      supermob->short_descr = QUICKLINK( room->name );
water:847:mud_prog.c:2988:    supermob->name        = QUICKLINK(room->name); */ 
water:848:mud_prog.c:2989:         supermob->mpscriptpos = room->mpscriptpos;
water:849:mud_prog.c:2995:         sprintf( buf, "Room #%d", room->vnum );
water:850:mud_prog.c:3007:   for( mprg = mob->in_room->mudprogs; mprg; mprg = mprg->next )
water:851:mud_prog.c:3034:      if( room->mpactnum > 0 )
water:852:mud_prog.c:3035:         tmp_act->next = room->mpact;
water:853:mud_prog.c:3039:      room->mpact = tmp_act;
water:854:mud_prog.c:3040:      room->mpact->buf = str_dup( buf );
water:855:mud_prog.c:3041:      room->mpact->ch = ch;
water:856:mud_prog.c:3042:      room->mpact->obj = obj;
water:857:mud_prog.c:3043:      room->mpact->vo = vo;
water:858:mud_prog.c:3044:      room->mpactnum++;
water:859:mud_prog.c:3151:   for( mprg = room->mudprogs; mprg; mprg = mprg->next )
water:860:mud_prog.c:3209:   for( mprg = room->mudprogs; mprg; mprg = mprg->next )
water:861:mud_prog.c:3307:      while( ( mpact = room->mpact ) != NULL )
water:862:mud_prog.c:3312:         room->mpact = mpact->next;
water:863:mud_prog.c:3316:      room->mpact = NULL;
water:864:mud_prog.c:3317:      room->mpactnum = 0;
water:865:player.c:1108:   if( ch->in_room->pShop && !str_cmp( ch->in_room->pShop->owner, ch->name ) )
water:866:player.c:1113:         amount = ch->in_room->pShop->gold;
water:867:player.c:1123:      if( amount > ch->in_room->pShop->gold )
water:868:player.c:1135:      if( ch->in_room->pShop->gold < 1000000 )
water:869:player.c:1136:         salary = ( gp * ch->in_room->pShop->profit_buy ) / 100;
water:870:player.c:1138:         salary = ( gp / 100 ) * ch->in_room->pShop->profit_buy;
water:871:player.c:1159:      ch->in_room->pShop->gold -= amount;
water:872:player.c:1165:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:873:player.c:1169:   for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
water:874:player.c:1266:   if( ch->in_room->pShop && !str_cmp( ch->in_room->pShop->owner, ch->name ) )
water:875:player.c:1298:      ch->in_room->pShop->gold += amount;
water:876:player.c:1302:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:877:player.c:1306:   for( atm = ch->in_room->first_content; atm; atm = atm->next_content )
water:878:reset.c:23: * of them good.  The most important are your pRoom->contents,
water:879:reset.c:24: * pRoom->people, rch->carrying, obj->contains, and pArea->reset_first ..
water:880:reset.c:77:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
water:881:reset.c:148:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
water:882:reset.c:195:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
water:883:reset.c:222:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
water:884:reset.c:231:            strncpy( roomname, room->name, MAX_STRING_LENGTH );
water:885:reset.c:234:                   roomname, room ? room->vnum : 0 );
water:886:reset.c:306:   for( rch = pRoom->first_person; rch; rch = rch->next_in_room )
water:887:reset.c:311:      add_reset( pRoom, 'M', 1, rch->pIndexData->vnum, rch->pIndexData->count, pRoom->vnum );
water:888:reset.c:321:   for( obj = pRoom->first_content; obj; obj = obj->next_content )
water:889:reset.c:322:      add_obj_reset( pRoom, 'O', obj, obj->count, pRoom->vnum );
water:890:reset.c:327:      for( pexit = pRoom->first_exit; pexit; pexit = pexit->next )
water:891:reset.c:341:         add_reset( pRoom, 'D', 0, pRoom->vnum, pexit->vdir, state );
water:892:reset.c:351:   for( pReset = room->first_reset; pReset; pReset = pReset_next )
water:893:reset.c:355:      UNLINK( pReset, room->first_reset, room->last_reset, next, prev );
water:894:reset.c:358:   room->first_reset = room->last_reset = NULL;
water:895:reset.c:369:      for( room = area->first_room; room; room = room->next_aroom )
water:896:reset.c:391:   if( ch->in_room->area != ch->pcdata->area )
water:897:reset.c:396:   if( ch->in_room->first_reset )
water:898:reset.c:420:   for( pRoom = pArea->first_room; pRoom; pRoom = pRoom->next_aroom )
water:899:reset.c:460:   char *filename = room->area->filename;
water:900:reset.c:466:   if( !room->first_reset )
water:901:reset.c:472:   if( IS_SET( room->room_flags, ROOM_BURNING ) )
water:902:reset.c:474:      if( room->curr_vegetation > 0 && room->curr_water < 30 )
water:903:reset.c:475:         room->curr_vegetation -= 25;
water:904:reset.c:478:         REMOVE_BIT( room->room_flags, ROOM_BURNING );
water:905:reset.c:480:   else if( room->curr_vegetation < room->vegetation ) {
water:906:reset.c:481:         room->curr_vegetation++;
water:907:reset.c:487:			if( room->curr_water > room->water )
water:908:reset.c:489:			room->curr_water--;
water:909:reset.c:493:   for( pReset = room->first_reset; pReset; pReset = pReset->next )
water:910:reset.c:707:                              if( room->area->nplayer > 0 || !( to_obj = get_obj_type( pObjToIndex ) ) ||
water:911:reset.c:739:                                room->vnum );
water:912:reset.c:780:               bug( "%s: Object trap found in room %d reset list", __FUNCTION__, room->vnum );
water:913:reset.c:790:               if( room->area->nplayer > 0
water:914:reset.c:847:   for( room = area->first_room; room; room = room->next_aroom )
water:915:reset.c:857:   for( pReset = room->first_reset; pReset; pReset = pReset->next )
water:916:reset.c:908:         room->last_mob_reset = pReset;
water:917:reset.c:913:         if( !room->last_mob_reset )
water:918:reset.c:918:         room->last_obj_reset = pReset;
water:919:reset.c:919:         LINK( pReset, room->last_mob_reset->first_reset, room->last_mob_reset->last_reset, next_reset, prev_reset );
water:920:reset.c:923:         if( !room->last_obj_reset )
water:921:reset.c:928:         LINK( pReset, room->last_obj_reset->first_reset, room->last_obj_reset->last_reset, next_reset, prev_reset );
water:922:reset.c:932:         room->last_obj_reset = pReset;
water:923:reset.c:939:            pReset->next_reset = room->last_obj_reset->first_reset;
water:924:reset.c:940:            if( room->last_obj_reset->first_reset )
water:925:reset.c:941:               room->last_obj_reset->first_reset->prev_reset = pReset;
water:926:reset.c:942:            room->last_obj_reset->first_reset = pReset;
water:927:reset.c:943:            if( !room->last_obj_reset->last_reset )
water:928:reset.c:944:               room->last_obj_reset->last_reset = pReset;
water:929:reset.c:951:         pReset->next_reset = room->last_obj_reset->first_reset;
water:930:reset.c:952:         if( room->last_obj_reset->first_reset )
water:931:reset.c:953:            room->last_obj_reset->first_reset->prev_reset = pReset;
water:932:reset.c:954:         room->last_obj_reset->first_reset = pReset;
water:933:reset.c:955:         if( !room->last_obj_reset->last_reset )
water:934:reset.c:956:            room->last_obj_reset->last_reset = pReset;
water:935:reset.c:959:   LINK( pReset, room->first_reset, room->last_reset, next, prev );
water:936:reset.c:970:   for( pReset = room->first_reset; pReset; pReset = pReset->next )
water:937:reset.c:1003:      reset_area( ch->in_room->area );
water:938:reset.c:1027:      for( pReset = ch->in_room->first_reset; pReset; pReset = pReset_next )
water:939:reset.c:1034:            UNLINK( pReset, ch->in_room->first_reset, ch->in_room->last_reset, next, prev );
water:940:reset.c:1096:      pReset = make_reset( 'R', 0, ch->in_room->vnum, vnum, 0 );
water:941:reset.c:1098:      pReset->next = ch->in_room->first_reset;
water:942:reset.c:1099:      if( ch->in_room->first_reset->prev )
water:943:reset.c:1100:         ch->in_room->first_reset->prev = pReset;
water:944:reset.c:1101:      ch->in_room->first_reset = pReset;
water:945:reset.c:1102:      if( !ch->in_room->last_reset )
water:946:reset.c:1103:         ch->in_room->last_reset = pReset;
water:947:reset.c:1118:         vnum = ch->in_room->vnum;
water:948:reset.c:1185:         tReset->next = ch->in_room->first_reset;
water:949:reset.c:1186:         if( ch->in_room->first_reset->prev )
water:950:reset.c:1187:            ch->in_room->first_reset->prev = tReset;
water:951:reset.c:1188:         ch->in_room->first_reset = tReset;
water:952:reset.c:1189:         if( !ch->in_room->last_reset )
water:953:reset.c:1190:            ch->in_room->last_reset = tReset;
water:954:reset.c:1219:         tReset->next = ch->in_room->first_reset;
water:955:reset.c:1220:         if( ch->in_room->first_reset->prev )
water:956:reset.c:1221:            ch->in_room->first_reset->prev = tReset;
water:957:reset.c:1222:         ch->in_room->first_reset = tReset;
water:958:reset.c:1223:         if( !ch->in_room->last_reset )
water:959:reset.c:1224:            ch->in_room->last_reset = tReset;
water:960:save.c:246:              && ch->was_in_room ) ? ch->was_in_room->vnum : ch->in_room->vnum );
water:961:save.c:618:      fprintf( fp, "Room         %d\n", obj->in_room->vnum );
water:962:save.c:2380:                    && mob->was_in_room ) ? mob->was_in_room->vnum : mob->in_room->vnum );
water:963:save.c:2600:         return obj->carried_by->in_room->vnum;
water:964:save.c:2610:      return obj->in_room->vnum;
water:965:save.c:2663:             || IS_SET( obj->in_room->room_flags, ROOM_DONATION ) )
water:966:shops.c:88:   if( ( matshop = find_matshop( ch->in_room->vnum ) ) != NULL )
water:967:shops.c:113:            boost_economy( ch->in_room->area, mat->cost );
water:968:shops.c:123:   if( !ch->in_room->pShop )
water:969:shops.c:128:   if( !str_cmp( ch->in_room->pShop->owner, "(for sale)" ) )
water:970:shops.c:140:         STRFREE( ch->in_room->pShop->owner );
water:971:shops.c:141:         ch->in_room->pShop->owner = STRALLOC( ch->name );
water:972:shops.c:142:         fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:973:shops.c:146:   maxgold = ch->in_room->pShop->gold;
water:974:shops.c:157:   obj = get_obj_list( ch, arg, ch->in_room->first_content );
water:975:shops.c:163:   cost = ( get_cost( ch, ch->in_room->pShop, obj, TRUE ) * noi );
water:976:shops.c:211:      ch->in_room->pShop->gold += cost;
water:977:shops.c:216:      if( str_cmp( ch->in_room->pShop->owner, "Keolah" ) )
water:978:shops.c:223:            fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:979:shops.c:283:   if( ( matshop = find_matshop( ch->in_room->vnum ) ) != NULL )
water:980:shops.c:301:   if( !ch->in_room->pShop )
water:981:shops.c:307:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:982:shops.c:311:           &&( cost = get_cost( ch, ch->in_room->pShop, obj, TRUE ) ) > 0 
water:983:shops.c:318:         gp = get_cost( ch, ch->in_room->pShop, obj, TRUE );
water:984:shops.c:351:   if( !ch->in_room->pShop )
water:985:shops.c:362:   if( !str_cmp( arg, "shop" )  &&!str_cmp( ch->name, ch->in_room->pShop->owner ) )
water:986:shops.c:368:      STRFREE( ch->in_room->pShop->owner );
water:987:shops.c:369:      ch->in_room->pShop->owner = STRALLOC( "(for sale)" );
water:988:shops.c:370:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:989:shops.c:403:      if( ( cost = get_cost( ch, ch->in_room->pShop, obj, FALSE ) ) <= 0 )
water:990:shops.c:409:      if( ch->in_room->pShop->type != -1  &&ch->in_room->pShop->type != obj->item_type )
water:991:shops.c:414:      if( ch->in_room->pShop->flag != -1  &&!xIS_SET( obj->extra_flags, ch->in_room->pShop->flag ) )
water:992:shops.c:420:      if( !str_cmp( ch->in_room->pShop->owner, ch->name ) )
water:993:shops.c:428:      else if( ch->in_room->pShop->gold < obj->cost  &&str_cmp( ch->in_room->pShop->owner, "Keolah" ) )
water:994:shops.c:434:      gp = get_cost( ch, ch->in_room->pShop, obj, FALSE );
water:995:shops.c:443:      ch->in_room->pShop->gold -= cost;
water:996:shops.c:480:            if( ( cost = get_cost( ch, ch->in_room->pShop, obj, FALSE ) ) <= 0 )
water:997:shops.c:482:            if( ch->in_room->pShop->type != -1  &&ch->in_room->pShop->type != obj->item_type )
water:998:shops.c:484:            if( ch->in_room->pShop->flag != -1  &&!xIS_SET( obj->extra_flags, ch->in_room->pShop->flag ) )
water:999:shops.c:486:            if( ch->in_room->pShop->gold < obj->cost 
water:1000:shops.c:487:                  &&str_cmp( ch->in_room->pShop->owner, "Keolah" )  &&str_cmp( ch->in_room->pShop->owner, ch->name ) )
water:1001:shops.c:491:            cost = get_cost( ch, ch->in_room->pShop, obj, FALSE );
water:1002:shops.c:492:            if( str_cmp( ch->in_room->pShop->owner, ch->name ) )
water:1003:shops.c:495:               ch->in_room->pShop->gold -= cost;
water:1004:shops.c:503:         if( !str_cmp( ch->in_room->pShop->owner, ch->name ) )
water:1005:shops.c:543:   if( !ch->in_room->pShop )
water:1006:shops.c:554:   if( ( gp = get_cost( ch, ch->in_room->pShop, obj, FALSE ) ) <= 0 )
water:1007:shops.c:691:      vnum = ch->in_room->vnum;
water:1008:shops.c:704:   if( room->pShop )
water:1009:shops.c:719:   room->pShop = shop;
water:1010:shops.c:757:   if( !( shop = room->pShop ) )
water:1011:shops.c:776:      fold_area( room->area, room->area->filename, FALSE );
water:1012:shops.c:797:      fold_area( room->area, room->area->filename, FALSE );
water:1013:shops.c:828:      fold_area( room->area, room->area->filename, FALSE );
water:1014:shops.c:852:      fold_area( room->area, room->area->filename, FALSE );
water:1015:shops.c:878:      fold_area( room->area, room->area->filename, FALSE );
water:1016:shops.c:897:      room->pShop = NULL;
water:1017:shops.c:900:      ch_printf( ch, "Shop %d is now Shop %d.\n\r", room->vnum, shop->room );
water:1018:shops.c:901:      fold_area( room->area, room->area->filename, FALSE );
water:1019:shops.c:938:         if( !tmproom || room->area != tmproom->area )
water:1020:shops.c:939:            fold_area( room->area, room->area->filename, FALSE );
water:1021:shops.c:957:      vnum = ch->in_room->vnum;
water:1022:shops.c:971:   if( !room->pShop )
water:1023:shops.c:977:   shop = room->pShop;
water:1024:shops.c:980:      ch_printf( ch, "Room: [%d] %s\n\r", shop->room, room->name );
water:1025:shops.c:982:      ch_printf( ch, "Stats for %s...\n\r", room->name );
water:1026:skills.c:393:            ch->in_room->area->weather->mana += ( int )mana / 10;
water:1027:skills.c:401:         ch->in_room->area->weather->mana += ( int )mana / 10;
water:1028:skills.c:428:      ch->in_room->area->weather->mana += ( int )mana / 10;
water:1029:skills.c:1693:         if( !ch->in_room->first_content )
water:1030:skills.c:1699:         for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:1031:skills.c:1739:   if( !ch->in_room->first_content )
water:1032:skills.c:1745:   for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:1033:skills.c:1835:            switch ( ch->in_room->sector_type )
water:1034:skills.c:1919:   startobj = ch->in_room->first_content;
water:1035:skills.c:1937:   if( !found && number_range( 1, 300 ) < ch->in_room->curr_resources 
water:1036:skills.c:1938:        +get_curr_per( ch ) + ch->pcdata->noncombat[SK_MINING]  &&ch->in_room->curr_resources > 0 )
water:1037:skills.c:1943:         if( ( ( !shovel && number_percent(  ) < 50 ) || ( shovel ) ) && ( material->sector == ch->in_room->sector_type )
water:1038:skills.c:1950:               if( xIS_SET( material->extra_flags, ITEM_MAGIC )  &&ch->in_room->area->weather->mana < -100 )
water:1039:skills.c:1956:               ch->in_room->curr_resources--;
water:1040:skills.c:1969:      if( ch->in_room->curr_resources < 10 )
water:1041:skills.c:2046:      startobj = ch->in_room->first_content;
water:1042:skills.c:2101:   if( number_range( 1, 300 ) < ch->in_room->curr_vegetation 
water:1043:skills.c:2102:        +get_curr_per( ch ) + ch->pcdata->noncombat[SK_NATURE]  &&ch->in_room->curr_vegetation > 0 )
water:1044:skills.c:2107:         if( ingred->sector != ch->in_room->sector_type )
water:1045:skills.c:2109:         if( ingred->moisture > ch->in_room->curr_water )
water:1046:skills.c:2111:         if( ingred->elevation > ch->in_room->curr_elevation )
water:1047:skills.c:2113:         if( ingred->precip > 0  &&ingred->precip < ch->in_room->area->weather->precip )
water:1048:skills.c:2115:         if( ingred->precip < 0  &&ingred->precip > ch->in_room->area->weather->precip )
water:1049:skills.c:2117:         if( ingred->temp > 0  &&ingred->temp < ch->in_room->area->weather->temp )
water:1050:skills.c:2119:         if( ingred->temp < 0  &&ingred->temp > ch->in_room->area->weather->temp )
water:1051:skills.c:2121:         if( ingred->mana > 0  &&ingred->mana < ch->in_room->area->weather->mana )
water:1052:skills.c:2135:            ch->in_room->curr_vegetation--;
water:1053:skills.c:2181:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
water:1054:skills.c:2620:      fold_area( ch->in_room->area, ch->in_room->area->filename, FALSE );
water:1055:skills.c:2621:      if( pexit->to_room->area != ch->in_room->area )
water:1056:skills.c:2622:         fold_area( pexit->to_room->area, pexit->to_room->area->filename, FALSE );
water:1057:skills.c:2659:      for( gch = ch->in_room->first_person; gch; gch = gch->next_in_room )
water:1058:skills.c:3146:   victim->in_room->area->weather->mana += 1;
water:1059:skills.c:3385:      ch->in_room->area->weather->mana += ( int )mana / 10;
water:1060:skills.c:3395:      ch->in_room->area->weather->mana += ( int )mana / 10;
water:1061:skills.c:3418:   ch->in_room->area->weather->mana += ( int )mana / 10;
water:1062:skills.c:3475:   for( fire = ch->in_room->first_content; fire; fire = fire->next_content )
water:1063:skills.c:3509:      ch->in_room->area->weather->mana += ( int )mana / 10;
water:1064:skills.c:3519:      ch->in_room->area->weather->mana += ( int )mana / 10;
water:1065:skills.c:3542:   ch->in_room->area->weather->mana += ( int )mana / 10;
water:1066:skills.c:3587:             * victim->in_room->vnum );
water:1067:skills.c:3677:      send_to_char( ch->in_room->name, ch );
water:1068:skills.c:3679:      show_list_to_char( ch->in_room->first_content, ch, FALSE, FALSE );
water:1069:skills.c:3680:      show_char_to_char( ch->in_room->first_person, ch );
water:1070:skills.c:3681:      switch ( ch->in_room->sector_type )
water:1071:skills.c:3767:      switch ( ch->in_room->sector_type )
water:1072:skills.c:3848:   if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) )
water:1073:skills.c:3999:      for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:1074:skills.c:4016:      if( ch->in_room->curr_water > 50 )
water:1075:skills.c:4020:         for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:1076:skills.c:4037:      for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:1077:skills.c:4071:      if( ch->in_room->area->weather->temp > -200  &&ch->curr_talent[TAL_FROST] < 20 )
water:1078:special.c:157:   for( victim = ch->in_room->first_person; victim; victim = v_next )
water:1079:special.c:344:   for( corpse = ch->in_room->first_content; corpse; corpse = c_next )
water:1080:special.c:374:   for( victim = ch->in_room->first_person; victim; victim = v_next )
water:1081:special.c:400:   for( trash = ch->in_room->first_content; trash; trash = trash_next )
water:1082:special.c:443:   for( victim = ch->in_room->first_person; victim; victim = v_next )
water:1083:special.c:476:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:1084:special.c:522:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:1085:special.c:541:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:1086:special.c:559:      if( material->sector != ch->in_room->sector_type )
water:1087:special.c:563:      if( xIS_SET( material->extra_flags, ITEM_MAGIC )  &&ch->in_room->area->weather->mana < -100 )
water:1088:special.c:584:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:1089:special.c:603:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:1090:special.c:621:      if( ingred->sector != ch->in_room->sector_type )
water:1091:special.c:623:      if( ingred->moisture > ch->in_room->curr_water )
water:1092:special.c:625:      if( ingred->elevation > ch->in_room->curr_elevation )
water:1093:special.c:627:      if( ingred->precip > 0  &&ingred->precip < ch->in_room->area->weather->precip )
water:1094:special.c:629:      if( ingred->precip < 0  &&ingred->precip > ch->in_room->area->weather->precip )
water:1095:special.c:631:      if( ingred->temp > 0  &&ingred->temp < ch->in_room->area->weather->temp )
water:1096:special.c:633:      if( ingred->temp < 0  &&ingred->temp > ch->in_room->area->weather->temp )
water:1097:special.c:635:      if( ingred->mana > 0  &&ingred->mana < ch->in_room->area->weather->mana )
water:1098:talent.c:186:         ||( IS_SET( ch->in_room->room_flags, ROOM_NO_SUMMON ) 
water:1099:talent.c:188:                 ||IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) 
water:1100:talent.c:189:                 ||IS_SET( ch->in_room->runes, RUNE_WARD ) ) ) 
water:1101:talent.c:190:         ||( IS_SET( victim->in_room->room_flags, ROOM_NO_ASTRAL ) 
water:1102:talent.c:192:                 ||IS_SET( victim->in_room->area->flags, AFLAG_NOBYPASS ) 
water:1103:talent.c:193:                 ||IS_SET( victim->in_room->runes, RUNE_WARD ) ) ) 
water:1104:talent.c:195:             &&IS_SET( victim->in_room->room_flags, ROOM_NO_DREAM ) ) 
water:1105:talent.c:320:   for( rch = ch->in_room->first_person; rch; rch = rch->next_in_room )
water:1106:talent.c:360:   ch->in_room->area->weather->mana += ( int )i / 100;
water:1107:talent.c:692:      if( IS_SET( ch->in_room->area->flags, AFLAG_FREEKILL ) )
water:1108:talent.c:700:      location = get_room_index( ch->in_room->area->hi_soft_range );
water:1109:talent.c:748:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL )  &&ch->curr_talent[TAL_MOTION] < 80 )
water:1110:talent.c:797:      if( ch->in_room->curr_vegetation < 10 )
water:1111:talent.c:802:      if( ch->in_room->curr_water > 30 )
water:1112:talent.c:810:      SET_BIT( ch->in_room->room_flags, ROOM_BURNING );
water:1113:talent.c:841:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1114:talent.c:863:   if( ( ch->curr_talent[TAL_EARTH] < 20 && !IS_NPC( ch ) )  ||IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
water:1115:talent.c:870:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1116:talent.c:873:      if( IS_AFFECTED( victim, AFF_FLYING )  &&!IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:1117:talent.c:892:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1118:talent.c:927:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1119:talent.c:969:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1120:talent.c:1002:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1121:talent.c:1050:   if( ch->in_room->curr_water > 60 )
water:1122:talent.c:1057:         victim = ch->in_room->first_person;
water:1123:talent.c:1070:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
water:1124:talent.c:1071:         ||ch->in_room->area->weather->precip < 100  ||ch->in_room->area->weather->temp < 100 )
water:1125:talent.c:1095:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:1126:talent.c:1102:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1127:talent.c:1105:      magic_damage( victim, ch, TALENT( ch, TAL_WIND ) + TALENT( ch, TAL_FIRE ) + ch->in_room->area->weather->temp,
water:1128:talent.c:1118:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:1129:talent.c:1125:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1130:talent.c:1128:      magic_damage( victim, ch, TALENT( ch, TAL_WIND ) + TALENT( ch, TAL_CATALYSM ) + ch->in_room->area->weather->mana,
water:1131:talent.c:1140:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:1132:talent.c:1161:   if( ch->in_room->curr_water >= 100 )
water:1133:talent.c:1168:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1134:talent.c:1203:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
water:1135:talent.c:1204:         ||ch->in_room->area->weather->precip < 50  ||ch->in_room->area->weather->temp > -100 )
water:1136:talent.c:1211:   for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1137:talent.c:1226:   if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) 
water:1138:talent.c:1227:         ||ch->in_room->area->weather->precip > 0 
water:1139:talent.c:1349:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR ) )
water:1140:talent.c:1582:   if( IS_SET( ch->in_room->room_flags, ROOM_SILENCE )  ||( ch->curr_talent[TAL_SPEECH] < 1 && !IS_NPC( ch ) ) )
water:1141:talent.c:1591:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1142:talent.c:1621:   if( IS_UNDERWATER( ch ) || ch->in_room->curr_water > 30 )
water:1143:talent.c:1650:   if( ch->in_room->curr_water >= 100 )
water:1144:talent.c:1661:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1145:talent.c:1762:   if( ch->in_room->curr_water >= 100 )
water:1146:talent.c:1774:                   ( TALENT( ch, TAL_WIND ) * 2 + ch->in_room->area->weather->wind ) / 3, MAG_WIND, TAL_WIND, FALSE );
water:1147:talent.c:1790:                   ( TALENT( ch, TAL_EARTH ) * 2 + ch->in_room->curr_vegetation ) / 3, MAG_EARTH, TAL_EARTH, FALSE );
water:1148:talent.c:1840:   if( IS_SET( ch->in_room->room_flags, ROOM_NOFLOOR )  ||( ch->curr_talent[TAL_WATER] < 1 && !IS_NPC( ch ) ) )
water:1149:talent.c:1845:   if( ch->curr_talent[TAL_WATER] > 10  &&ch->in_room->curr_water < 100 )
water:1150:talent.c:1849:      //if( IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:1151:talent.c:1850:         ch->in_room->curr_water += TALENT( ch, TAL_WATER ) / 10;
water:1152:talent.c:1854:      for( victim = ch->in_room->first_person; victim; victim = next_vict )
water:1153:talent.c:1870:                   ( TALENT( ch, TAL_WATER ) * 2 + ch->in_room->curr_water ) / 3, MAG_WATER, TAL_WATER, FALSE );
water:1154:talent.c:2007:                      in_obj->carried_by->in_room->name );
water:1155:talent.c:2011:                      in_obj->carried_by->in_room->name, in_obj->carried_by->in_room->area->name );
water:1156:talent.c:2021:            sprintf( buf, "%s is in %s.\n\r", obj_short( obj ), in_obj->in_room->name );
water:1157:talent.c:2024:            sprintf( buf, "%s is in %s, in %s.\n\r", obj_short( obj ), in_obj->in_room->name,
water:1158:talent.c:2025:                      in_obj->in_room->area->name );
water:1159:talent.c:2055:            pager_printf( ch, "%s is in %s\n\r", PERS( victim, ch ), victim->in_room->name );
water:1160:talent.c:2066:            pager_printf( ch, "%s is in %s, in %s\n\r", PERS( victim, ch ), victim->in_room->name,
water:1161:talent.c:2067:                           victim->in_room->area->name );
water:1162:talent.c:2080:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL )  &&ch->curr_talent[TAL_MOTION] < 80 )
water:1163:talent.c:2288:   if( IS_SET( ch->in_room->area->flags, AFLAG_NOBYPASS ) )
water:1164:talent.c:2319:      sprintf( buf, "%s summoned %s to %s (%d).", ch->name, victim->name, ch->in_room->name, ch->in_room->vnum );
water:1165:talent.c:3146:      ch->in_room->runes = 0;
water:1166:talent.c:3312:   if( IS_SET( ch->in_room->room_flags, ROOM_NO_MAGIC ) )
water:1167:talent.c:3321:      SET_BIT( ch->in_room->runes, RUNE_LIFE );
water:1168:talent.c:3328:      SET_BIT( ch->in_room->runes, RUNE_DISTRACT );
water:1169:talent.c:3335:      SET_BIT( ch->in_room->runes, RUNE_WARD );
water:1170:talent.c:3792:      if( IS_SET( ch->in_room->room_flags, ROOM_NO_DREAM ) 
water:1171:talent.c:3794:                ||( IS_SET( ch->in_room->runes, RUNE_WARD )  &&ch->curr_talent[TAL_DREAM] < 200 ) ) )
water:1172:talent.c:3909:      if( IS_SET( victim->in_room->room_flags, ROOM_NO_DREAM ) 
water:1173:talent.c:3911:                ||( IS_SET( victim->in_room->runes, RUNE_WARD )  &&ch->curr_talent[TAL_DREAM] < 200 ) ) )
water:1174:talent.c:4041:      for( victim = ch->in_room->first_person; victim; victim = victim->next_in_room )
water:1175:talent.c:5160:         if( IS_SET( obj->in_room->room_flags, ROOM_NOSUPPLICATE ) 
water:1176:talent.c:5214:      if( ch->curr_talent[TAL_MOTION] < 100  &&( IS_SET( ch->in_room->room_flags, ROOM_NO_ASTRAL )  ||IS_NPC( victim ) ) )
water:1177:talent.c:5558:         if( tar == ECHOTAR_AREA  &&ch->in_room->area != d->character->in_room->area )
water:1178:talent.c:5562:         if( tar == ECHOTAR_WORLD  &&str_cmp( ch->in_room->area->resetmsg, d->character->in_room->area->resetmsg ) )
water:1179:talent.c:5697:      if( ch->in_room->area->weather->temp > ch->curr_talent[TAL_FROST] * 10 - 400 )
water:1180:talent.c:5727:      if( ch->in_room->curr_vegetation < 100 - ch->curr_talent[TAL_EARTH] )
water:1181:talent.c:5788:   for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
water:1182:track.c:51:   for( trail = ch->in_room->first_trail; trail; trail = trail->next )
water:1183:track.c:196:         for( pexit = queue_head->room->first_exit; pexit; pexit = pexit->next )
water:1184:update.c:130:   if( IS_SET( ch->in_room->runes, RUNE_LIFE ) )
water:1185:update.c:276:      i = number_range( 0, ch->in_room->area->weather->mana * 10 );
water:1186:update.c:277:   ch->in_room->area->weather->mana -= ( int )i / 10;
water:1187:update.c:336:      if( IS_SET( ch->in_room->runes, RUNE_LIFE ) )
water:1188:update.c:636:         bug( "Mob %d in room %d was not set with the NPC flag!  Fixing...", ch->pIndexData->vnum, ch->in_room->vnum );
water:1189:update.c:669:             &&( !ch->in_room || !ch->in_room->area  ||ch->in_room->area->nplayer == 0 ) )
water:1190:update.c:680:         if( ch->in_room->first_person )
water:1191:update.c:719:             &&ch->home_room != ch->in_room->vnum 
water:1192:update.c:722:             &&!ch->last_hit  &&!IS_AFFECTED( ch, AFF_CURSE )  &&!IS_SET( ch->in_room->room_flags, ROOM_NO_RECALL ) )
water:1193:update.c:763:             * ch->in_room->name );
water:1194:update.c:776:      if( IS_SET( ch->in_room->room_flags, ROOM_SAFE ) 
water:1195:update.c:786:         if( !ch->in_room->area )
water:1196:update.c:789:         bug( "Room %d for mob %s is not associated with an area?", ch->in_room->vnum, ch->name );
water:1197:update.c:791:            bug( "Was in room %d", ch->was_in_room->vnum );
water:1198:update.c:799:         if( ch->in_room->area->nplayer > 0 )
water:1199:update.c:832:             &&!IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) 
water:1200:update.c:833:             &&( !xIS_SET( ch->act, ACT_STAY_AREA ) || pexit->to_room->area == ch->in_room->area ) )
water:1201:update.c:847:               &&( ( pexit->to_room->sector_type == SECT_WATER_NOSWIM ) 
water:1202:update.c:848:                   ||( pexit->to_room->sector_type == SECT_WATER_SWIM ) 
water:1203:update.c:849:                   ||IS_SET( pexit->to_room->room_flags, ROOM_NOFLOOR ) ) )
water:1204:update.c:851:         if( ( pexit->to_room->sector_type == SECT_WATER_NOSWIM 
water:1205:update.c:852:                 ||pexit->to_room->sector_type == SECT_WATER_SWIM 
water:1206:update.c:853:                 ||pexit->to_room->sector_type == SECT_UNDERWATER 
water:1207:update.c:854:                 ||pexit->to_room->sector_type == SECT_OCEANFLOOR ) 
water:1208:update.c:857:         if( !pexit->to_room->sector_type == SECT_WATER_NOSWIM 
water:1209:update.c:858:               &&!pexit->to_room->sector_type == SECT_WATER_SWIM 
water:1210:update.c:859:               &&!pexit->to_room->sector_type == SECT_UNDERWATER 
water:1211:update.c:860:               &&!pexit->to_room->sector_type == SECT_OCEANFLOOR 
water:1212:update.c:863:         if( pexit->to_room->sector_type == SECT_LAVA  &&!IS_SET( ch->immune, RIS_FIRE ) )
water:1213:update.c:889:             &&!IS_SET( pexit->exit_info, EX_CLOSED )  &&!IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) )
water:1214:update.c:898:         if( ch->in_room && ch->in_room->area->weather->precip > 10  &&!IS_SET( ch->in_room->room_flags, ROOM_INDOORS ) )
water:1215:update.c:901:         for( pobj = ch->in_room->first_content; pobj; pobj = pobj->next_content )
water:1216:update.c:1060:         if( ch->in_room->first_content && IS_SET( ch->xflags, PART_HANDS ) )
water:1217:update.c:1069:            for( obj = ch->in_room->first_content; obj; obj = obj->next_content )
water:1218:update.c:1258:      if( !IS_NPC( ch ) && ch->in_room->vnum == 6 && ch->pcdata->release_date <= current_time )
water:1219:update.c:1486:      if( obj->in_room && obj->in_room->area->nplayer > 0 )
water:1220:update.c:1679:      else if( obj->in_room  &&( rch = obj->in_room->first_person ) != NULL  &&!IS_OBJ_STAT( obj, ITEM_BURIED ) )
water:1221:update.c:1689:            for( victim = rch->in_room->first_person; victim; victim = nextinroom )
water:1222:update.c:1756:                  &&!IS_SET( pexit->to_room->room_flags, ROOM_NO_MOB ) 
water:1223:update.c:1757:                  &&( !xIS_SET( ch->act, ACT_STAY_AREA )  ||pexit->to_room->area == ch->in_room->area ) )
water:1224:update.c:1796:      if( ( ch->in_room && ch->in_room->sector_type == SECT_UNDERWATER ) 
water:1225:update.c:1797:            ||( ch->in_room && ch->in_room->sector_type == SECT_OCEANFLOOR ) )
water:1226:update.c:1825:      if( ch->in_room  &&( ch->in_room->sector_type == SECT_WATER_NOSWIM ) )
water:1227:update.c:1832:              &&( ch->in_room->water > ch->height - 20 ) 
water:1228:update.c:1834:              &&!( IS_OUTSIDE( ch ) && ( ( ch->in_room->area->weather->temp + 3 * weath_unit - 1 ) / weath_unit < 3 ) ) )
water:1229:update.c:1933:      for( ch = wch->in_room->first_person; ch; ch = ch_next )
water:1230:update.c:2023:      for( vch = ch->in_room->first_person; vch; vch = vch->next_in_room )
water:1231:update.c:2239:   for( pexit = fromRoom->first_exit; pexit; pexit = pexit->next )
water:1232:update.c:2249:      bug( "remove_portal: portal not found in room %d!", fromRoom->vnum );
water:1233:update.c:2482:            && !NO_WEATHER_SECT( d->character->in_room->sector_type ) && IS_AWAKE( d->character ) )
water:1234:update.c:2486:         weath = d->character->in_room->area->weather;
water:1235:update.c:2491:         if( ( i = moon_visible( d->character->in_room->area, MOON_BLOOD ) ) 
water:1236:update.c:2492:              &&d->character->in_room->area->weather->precip > 100 )
water:1237:update.c:2911:               weath = d->character->in_room->area->weather;
water:1238:update.c:2946:            if( d->connected == CON_PLAYING && !str_cmp( d->character->in_room->area->resetmsg, moon->world )
water:1239:update.c:2960:            if( d->connected == CON_PLAYING && !str_cmp( d->character->in_room->area->resetmsg, moon->world )
